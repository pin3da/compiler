
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb0\x8ab\x80\x93q\x110\xcd\x82\xed@-\xfa)\x9e'
    
_lr_action_items = {'DO':([42,43,46,47,73,82,87,107,113,114,115,116,124,145,146,147,149,151,153,154,155,156,157,158,159,160,],[-79,-61,-78,-59,-56,-55,120,-57,-54,-53,-51,-52,-76,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,]),'RETURN':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[52,-79,-61,-78,-59,52,-29,-30,52,-38,-46,-39,-56,-55,-36,52,-48,52,-41,52,52,52,-57,-54,-53,-51,-52,52,-76,-47,52,-40,-31,-32,52,-44,52,52,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,52,52,52,52,-45,-43,]),'LPAREN':([5,29,30,32,40,41,44,45,47,49,52,53,54,56,61,64,65,71,72,75,76,77,78,80,81,88,89,97,98,99,100,101,119,121,125,126,127,128,129,130,148,],[7,45,45,45,71,72,45,45,76,45,45,86,88,94,97,101,88,45,45,45,45,45,45,45,45,88,88,45,45,45,45,45,88,88,45,45,45,45,45,45,45,]),'FLOAT_TYPE':([11,18,24,25,29,30,32,44,45,49,52,54,65,71,72,75,76,77,78,80,81,88,89,97,98,99,100,101,119,121,125,126,127,128,129,130,148,],[16,16,16,16,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'LSBRACKET':([16,17,19,47,64,118,],[29,30,32,75,100,100,]),'THEN':([42,43,46,47,73,82,102,107,113,114,115,116,124,145,146,147,149,151,153,154,155,156,157,158,159,160,],[-79,-61,-78,-59,-56,-55,141,-57,-54,-53,-51,-52,-76,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,]),'STRING_TYPE':([11,18,24,25,],[17,17,17,17,]),'WHILE':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[54,-79,-61,-78,-59,54,-29,-30,54,-38,-46,-39,-56,-55,-36,54,-48,54,-41,54,54,54,-57,-54,-53,-51,-52,54,-76,-47,54,-40,-31,-32,54,-44,54,54,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,54,54,54,54,-45,-43,]),'COLON':([11,13,],[18,25,]),'INT_TYPE':([11,18,24,25,29,30,32,44,45,49,52,54,65,71,72,75,76,77,78,80,81,88,89,97,98,99,100,101,119,121,125,126,127,128,129,130,148,],[19,19,19,19,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'PRINT':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[56,-79,-61,-78,-59,56,-29,-30,56,-38,-46,-39,-56,-55,-36,56,-48,56,-41,56,56,56,-57,-54,-53,-51,-52,56,-76,-47,56,-40,-31,-32,56,-44,56,56,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,56,56,56,56,-45,-43,]),'MINUS':([29,30,32,42,43,44,45,46,47,48,49,50,51,52,54,65,71,72,73,74,75,76,77,78,80,81,82,85,88,89,90,97,98,99,100,101,105,106,107,108,111,113,114,115,116,119,121,123,125,126,127,128,129,130,136,137,138,139,145,146,147,148,149,155,156,157,158,159,160,170,],[49,49,49,-79,-61,49,49,-78,-59,81,49,81,81,49,49,49,49,49,-56,81,49,49,49,49,49,49,-55,81,49,49,81,49,49,49,49,49,81,81,-57,81,81,-54,-53,-51,-52,49,49,81,49,49,49,49,49,49,81,81,81,81,-63,-62,-60,49,-58,81,81,81,81,81,81,81,]),'STRING':([94,],[133,]),'BEGIN':([13,16,17,19,22,26,27,33,34,35,36,37,42,43,46,47,55,57,58,59,60,62,66,67,68,69,70,73,79,82,83,84,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[-80,-23,-26,-22,34,-15,-14,-17,59,-16,-80,-80,-79,-61,-78,-59,59,-29,-30,59,-38,-46,-39,103,104,-19,-18,-56,-25,-55,-27,-24,-36,59,-48,59,-41,59,59,59,-57,-54,-53,-51,-52,59,-76,-47,59,-40,-31,-32,59,-44,59,59,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,59,59,59,59,-45,-43,]),'LE':([42,43,46,47,73,82,90,107,113,114,115,116,123,145,146,147,149,],[-79,-61,-78,-59,-56,-55,125,-57,-54,-53,-51,-52,125,-63,-62,-60,-58,]),'RPAREN':([7,8,9,10,12,14,16,17,19,20,28,31,42,43,46,47,73,74,76,79,82,83,84,101,105,106,107,109,110,111,112,113,114,115,116,117,118,122,123,124,133,136,140,145,146,147,149,151,153,154,155,156,157,158,159,160,163,170,],[-80,-11,13,-9,-10,-13,-23,-26,-22,-21,-12,-20,-79,-61,-78,-59,-56,107,-80,-25,-55,-27,-24,-80,145,146,-57,-64,149,-66,-65,-54,-53,-51,-52,150,-49,154,107,-76,161,162,164,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,-50,-67,]),'SEMICOLON':([16,17,19,20,21,23,31,38,39,42,43,46,47,55,57,58,60,62,66,73,79,82,83,84,85,92,93,95,96,107,113,114,115,116,131,132,135,137,138,142,143,144,145,146,147,149,150,152,161,162,164,165,169,172,173,174,175,],[-23,-26,-22,-21,33,35,-20,69,70,-79,-61,-78,-59,91,-29,-30,-38,-46,-39,-56,-25,-55,-27,-24,-36,-4,-48,134,-41,-57,-54,-53,-51,-52,-7,-47,-40,-31,-32,-44,167,168,-63,-62,-60,-58,-35,-28,-33,-34,-37,-42,-5,-45,-8,-6,-43,]),'NE':([42,43,46,47,73,82,90,107,113,114,115,116,123,145,146,147,149,],[-79,-61,-78,-59,-56,-55,127,-57,-54,-53,-51,-52,127,-63,-62,-60,-58,]),'READ':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[53,-79,-61,-78,-59,53,-29,-30,53,-38,-46,-39,-56,-55,-36,53,-48,53,-41,53,53,53,-57,-54,-53,-51,-52,53,-76,-47,53,-40,-31,-32,53,-44,53,53,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,53,53,53,53,-45,-43,]),'LT':([42,43,46,47,73,82,90,107,113,114,115,116,123,145,146,147,149,],[-79,-61,-78,-59,-56,-55,128,-57,-54,-53,-51,-52,128,-63,-62,-60,-58,]),'PLUS':([29,30,32,42,43,44,45,46,47,48,49,50,51,52,54,65,71,72,73,74,75,76,77,78,80,81,82,85,88,89,90,97,98,99,100,101,105,106,107,108,111,113,114,115,116,119,121,123,125,126,127,128,129,130,136,137,138,139,145,146,147,148,149,155,156,157,158,159,160,170,],[44,44,44,-79,-61,44,44,-78,-59,80,44,80,80,44,44,44,44,44,-56,80,44,44,44,44,44,44,-55,80,44,44,80,44,44,44,44,44,80,80,-57,80,80,-54,-53,-51,-52,44,44,80,44,44,44,44,44,44,80,80,80,80,-63,-62,-60,44,-58,80,80,80,80,80,80,80,]),'COLONEQUAL':([63,64,163,],[99,-49,-50,]),'COMMA':([8,10,14,16,17,19,20,28,31,42,43,46,47,73,79,82,83,84,107,109,111,113,114,115,116,145,146,147,149,170,],[-11,15,-13,-23,-26,-22,-21,-12,-20,-79,-61,-78,-59,-56,-25,-55,-27,-24,-57,148,-66,-54,-53,-51,-52,-63,-62,-60,-58,-67,]),'ASSIGN':([13,63,64,163,],[24,98,-49,-50,]),'$end':([1,3,4,6,92,131,169,173,174,],[-2,0,-1,-3,-4,-7,-5,-8,-6,]),'GT':([42,43,46,47,73,82,90,107,113,114,115,116,123,145,146,147,149,],[-79,-61,-78,-59,-56,-55,129,-57,-54,-53,-51,-52,129,-63,-62,-60,-58,]),'END':([42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,107,113,114,115,116,132,135,137,138,142,144,145,146,147,149,150,152,161,162,164,165,167,168,172,175,],[-79,-61,-78,-59,92,-29,-30,96,-38,-46,-39,-56,-55,-36,131,-48,135,-41,-57,-54,-53,-51,-52,-47,-40,-31,-32,-44,169,-63,-62,-60,-58,-35,-28,-33,-34,-37,-42,173,174,-45,-43,]),'DIVIDE':([42,43,46,47,48,50,51,73,74,82,85,90,105,106,107,108,111,113,114,115,116,123,136,137,138,139,145,146,147,149,155,156,157,158,159,160,170,],[-79,-61,-78,-59,77,77,77,77,77,-55,77,77,77,77,-57,77,77,-54,-53,77,77,77,77,77,77,77,-63,-62,-60,-58,77,77,77,77,77,77,77,]),'SKIP':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[60,-79,-61,-78,-59,60,-29,-30,60,-38,-46,-39,-56,-55,-36,60,-48,60,-41,60,60,60,-57,-54,-53,-51,-52,60,-76,-47,60,-40,-31,-32,60,-44,60,60,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,60,60,60,60,-45,-43,]),'TIMES':([42,43,46,47,48,50,51,73,74,82,85,90,105,106,107,108,111,113,114,115,116,123,136,137,138,139,145,146,147,149,155,156,157,158,159,160,170,],[-79,-61,-78,-59,78,78,78,78,78,-55,78,78,78,78,-57,78,78,-54,-53,78,78,78,78,78,78,78,-63,-62,-60,-58,78,78,78,78,78,78,78,]),'WRITE':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[61,-79,-61,-78,-59,61,-29,-30,61,-38,-46,-39,-56,-55,-36,61,-48,61,-41,61,61,61,-57,-54,-53,-51,-52,61,-76,-47,61,-40,-31,-32,61,-44,61,61,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,61,61,61,61,-45,-43,]),'GE':([42,43,46,47,73,82,90,107,113,114,115,116,123,145,146,147,149,],[-79,-61,-78,-59,-56,-55,126,-57,-54,-53,-51,-52,126,-63,-62,-60,-58,]),'FUNC':([0,1,4,6,13,16,17,19,27,33,35,36,37,69,70,79,83,84,92,131,169,173,174,],[2,-2,2,-3,2,-23,-26,-22,2,-17,-16,2,2,-19,-18,-25,-27,-24,-4,-7,-5,-8,-6,]),'INTEGER':([29,30,32,44,45,49,52,54,65,71,72,75,76,77,78,80,81,88,89,97,98,99,100,101,119,121,125,126,127,128,129,130,148,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ELSE':([42,43,46,47,57,58,60,66,73,82,85,96,107,113,114,115,116,135,137,138,142,145,146,147,149,150,152,161,162,164,165,172,175,],[-79,-61,-78,-59,-29,-30,-38,-39,-56,-55,-36,-41,-57,-54,-53,-51,-52,-40,-31,-32,166,-63,-62,-60,-58,-35,-28,-33,-34,-37,171,-45,-43,]),'EQ':([42,43,46,47,73,82,90,107,113,114,115,116,123,145,146,147,149,],[-79,-61,-78,-59,-56,-55,130,-57,-54,-53,-51,-52,130,-63,-62,-60,-58,]),'ID':([2,7,8,10,13,14,15,16,17,19,20,27,28,29,30,31,32,33,34,35,36,37,42,43,44,45,46,47,49,52,54,55,57,58,59,60,62,65,66,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,95,96,97,98,99,100,101,102,103,104,107,113,114,115,116,119,120,121,124,125,126,127,128,129,130,132,134,135,137,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[5,11,-11,11,11,-13,11,-23,-26,-22,-21,11,-12,47,47,-20,47,-17,64,-16,11,11,-79,-61,47,47,-78,-59,47,47,47,64,-29,-30,64,-38,-46,47,-39,-19,-18,47,47,-56,47,47,47,47,-25,47,47,-55,-27,-24,-36,118,47,47,64,-48,64,-41,47,47,47,47,47,64,64,64,-57,-54,-53,-51,-52,47,64,47,-76,47,47,47,47,47,47,-47,64,-40,-31,-32,64,-44,64,64,-63,-62,-60,47,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,64,64,64,64,-45,-43,]),'IF':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[65,-79,-61,-78,-59,65,-29,-30,65,-38,-46,-39,-56,-55,-36,65,-48,65,-41,65,65,65,-57,-54,-53,-51,-52,65,-76,-47,65,-40,-31,-32,65,-44,65,65,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,65,65,65,65,-45,-43,]),'AND':([42,43,46,47,73,82,87,102,107,113,114,115,116,122,124,145,146,147,149,151,153,154,155,156,157,158,159,160,],[-79,-61,-78,-59,-56,-55,119,119,-57,-54,-53,-51,-52,119,-76,-63,-62,-60,-58,-74,119,-77,-69,-71,-73,-68,-70,-72,]),'FLOAT':([29,30,32,44,45,49,52,54,65,71,72,75,76,77,78,80,81,88,89,97,98,99,100,101,119,121,125,126,127,128,129,130,148,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'BREAK':([34,42,43,46,47,55,57,58,59,60,62,66,73,82,85,91,93,95,96,102,103,104,107,113,114,115,116,120,124,132,134,135,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,171,172,175,],[66,-79,-61,-78,-59,66,-29,-30,66,-38,-46,-39,-56,-55,-36,66,-48,66,-41,66,66,66,-57,-54,-53,-51,-52,66,-76,-47,66,-40,-31,-32,66,-44,66,66,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,66,66,66,66,-45,-43,]),'RSBRACKET':([42,43,46,47,48,50,51,73,82,107,108,113,114,115,116,139,145,146,147,149,],[-79,-61,-78,-59,79,83,84,-56,-55,-57,147,-54,-53,-51,-52,163,-63,-62,-60,-58,]),'NOT':([54,65,88,89,119,121,],[89,89,89,89,89,89,]),'OR':([42,43,46,47,73,82,87,102,107,113,114,115,116,122,124,145,146,147,149,151,153,154,155,156,157,158,159,160,],[-79,-61,-78,-59,-56,-55,121,121,-57,-54,-53,-51,-52,121,-76,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,4,13,27,36,37,],[1,6,21,38,21,21,]),'expressions_list':([76,101,],[109,109,]),'ifthenelse':([34,55,59,91,95,102,103,104,120,134,141,143,144,166,167,168,171,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'locals_op':([13,36,37,],[22,67,68,]),'dec_list':([34,59,103,104,],[55,95,143,144,]),'var_dec':([7,10,13,15,27,36,37,],[8,14,23,28,39,23,23,]),'expression':([29,30,32,44,45,49,52,54,65,71,72,75,76,77,78,80,81,88,89,97,98,99,100,101,119,121,125,126,127,128,129,130,148,],[48,50,51,73,74,82,85,90,90,105,106,108,111,113,114,115,116,123,90,136,137,138,139,111,90,90,155,156,157,158,159,160,170,]),'locals':([13,36,37,],[27,27,27,]),'number':([29,30,32,44,45,49,52,54,65,71,72,75,76,77,78,80,81,88,89,97,98,99,100,101,119,121,125,126,127,128,129,130,148,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'argsop':([7,],[9,]),'program':([0,],[3,]),'relation':([54,65,88,89,119,121,],[87,102,122,124,151,153,]),'arguments':([7,],[10,]),'declaration':([34,55,59,91,95,102,103,104,120,134,141,143,144,166,167,168,171,],[62,93,62,132,93,142,62,62,152,132,165,93,93,172,132,132,175,]),'func_list':([0,],[4,]),'ubication':([34,55,59,86,91,95,102,103,104,120,134,141,143,144,166,167,168,171,],[63,63,63,117,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ifthen':([34,55,59,91,95,102,103,104,120,134,141,143,144,166,167,168,171,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'expressions_listop':([76,101,],[110,140,]),'type':([11,18,24,25,],[20,31,36,37,]),'empty':([7,13,36,37,76,101,],[12,26,26,26,112,112,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_list','program',1,'p_program','mpasparse.py',23),
  ('func_list -> function','func_list',1,'p_func_list','mpasparse.py',27),
  ('func_list -> func_list function','func_list',2,'p_func_list2','mpasparse.py',31),
  ('function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END','function',9,'p_function','mpasparse.py',36),
  ('function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END','function',11,'p_function2','mpasparse.py',40),
  ('function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END','function',12,'p_errorFuncion','mpasparse.py',44),
  ('function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END','function',10,'p_errorFuncion2','mpasparse.py',51),
  ('function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END','function',12,'p_errorFuncion3','mpasparse.py',58),
  ('argsop -> arguments','argsop',1,'p_argsop1','mpasparse.py',66),
  ('argsop -> empty','argsop',1,'p_argsop2','mpasparse.py',70),
  ('arguments -> var_dec','arguments',1,'p_arguments1','mpasparse.py',74),
  ('arguments -> arguments COMMA var_dec','arguments',3,'p_arguments2','mpasparse.py',78),
  ('arguments -> arguments var_dec','arguments',2,'p_arguments3','mpasparse.py',83),
  ('locals_op -> locals','locals_op',1,'p_locals_op1','mpasparse.py',94),
  ('locals_op -> empty','locals_op',1,'p_locals_op2','mpasparse.py',98),
  ('locals -> var_dec SEMICOLON','locals',2,'p_locals1','mpasparse.py',102),
  ('locals -> function SEMICOLON','locals',2,'p_locals2','mpasparse.py',106),
  ('locals -> locals var_dec SEMICOLON','locals',3,'p_locals3','mpasparse.py',110),
  ('locals -> locals function SEMICOLON','locals',3,'p_locals4','mpasparse.py',115),
  ('var_dec -> ID COLON type','var_dec',3,'p_var_dec','mpasparse.py',120),
  ('var_dec -> ID type','var_dec',2,'p_errorDefvar','mpasparse.py',124),
  ('type -> INT_TYPE','type',1,'p_tipo1','mpasparse.py',130),
  ('type -> FLOAT_TYPE','type',1,'p_tipo2','mpasparse.py',134),
  ('type -> INT_TYPE LSBRACKET expression RSBRACKET','type',4,'p_tipo3','mpasparse.py',138),
  ('type -> FLOAT_TYPE LSBRACKET expression RSBRACKET','type',4,'p_tipo4','mpasparse.py',142),
  ('type -> STRING_TYPE','type',1,'p_tipo5','mpasparse.py',147),
  ('type -> STRING_TYPE LSBRACKET expression RSBRACKET','type',4,'p_tipo6','mpasparse.py',151),
  ('declaration -> WHILE relation DO declaration','declaration',4,'p_declaration1','mpasparse.py',157),
  ('declaration -> ifthen','declaration',1,'p_declaration2','mpasparse.py',161),
  ('declaration -> ifthenelse','declaration',1,'p_declaration3','mpasparse.py',165),
  ('declaration -> ubication ASSIGN expression','declaration',3,'p_declaration4','mpasparse.py',169),
  ('declaration -> ubication COLONEQUAL expression','declaration',3,'p_declaration_error','mpasparse.py',173),
  ('declaration -> PRINT LPAREN STRING RPAREN','declaration',4,'p_declaration5','mpasparse.py',177),
  ('declaration -> WRITE LPAREN expression RPAREN','declaration',4,'p_declaration6','mpasparse.py',181),
  ('declaration -> READ LPAREN ubication RPAREN','declaration',4,'p_declaration7','mpasparse.py',185),
  ('declaration -> RETURN expression','declaration',2,'p_declaration8','mpasparse.py',189),
  ('declaration -> ID LPAREN expressions_listop RPAREN','declaration',4,'p_declaration9','mpasparse.py',193),
  ('declaration -> SKIP','declaration',1,'p_declaration10','mpasparse.py',197),
  ('declaration -> BREAK','declaration',1,'p_declaration11','mpasparse.py',201),
  ('declaration -> BEGIN dec_list END','declaration',3,'p_declaration12','mpasparse.py',205),
  ('declaration -> BEGIN END','declaration',2,'p_error_empty_list','mpasparse.py',209),
  ('ifthen -> IF relation THEN declaration','ifthen',4,'p_ifthen','mpasparse.py',214),
  ('ifthenelse -> IF relation THEN declaration ELSE declaration','ifthenelse',6,'p_ifthenelse','mpasparse.py',218),
  ('ifthen -> IF relation declaration','ifthen',3,'p_errorifthen','mpasparse.py',222),
  ('ifthen -> IF relation declaration ELSE declaration','ifthen',5,'p_errorifthenelse','mpasparse.py',227),
  ('dec_list -> declaration','dec_list',1,'p_dec_list1','mpasparse.py',232),
  ('dec_list -> dec_list SEMICOLON declaration','dec_list',3,'p_dec_list2','mpasparse.py',236),
  ('dec_list -> dec_list declaration','dec_list',2,'p_dec_listerror','mpasparse.py',241),
  ('ubication -> ID','ubication',1,'p_ubication1','mpasparse.py',248),
  ('ubication -> ID LSBRACKET expression RSBRACKET','ubication',4,'p_ubication2','mpasparse.py',252),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','mpasparse.py',257),
  ('expression -> expression MINUS expression','expression',3,'p_expression2','mpasparse.py',261),
  ('expression -> expression TIMES expression','expression',3,'p_expression3','mpasparse.py',265),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression4','mpasparse.py',269),
  ('expression -> MINUS expression','expression',2,'p_expression5','mpasparse.py',273),
  ('expression -> PLUS expression','expression',2,'p_expression6','mpasparse.py',277),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression7','mpasparse.py',281),
  ('expression -> ID LPAREN expressions_listop RPAREN','expression',4,'p_expression8','mpasparse.py',285),
  ('expression -> ID','expression',1,'p_expression9','mpasparse.py',289),
  ('expression -> ID LSBRACKET expression RSBRACKET','expression',4,'p_expression10','mpasparse.py',293),
  ('expression -> number','expression',1,'p_expression11','mpasparse.py',297),
  ('expression -> INT_TYPE LPAREN expression RPAREN','expression',4,'p_expression12','mpasparse.py',301),
  ('expression -> FLOAT_TYPE LPAREN expression RPAREN','expression',4,'p_expression13','mpasparse.py',305),
  ('expressions_listop -> expressions_list','expressions_listop',1,'p_expressions_listop1','mpasparse.py',310),
  ('expressions_listop -> empty','expressions_listop',1,'p_expressions_listop2','mpasparse.py',314),
  ('expressions_list -> expression','expressions_list',1,'p_expressions_list1','mpasparse.py',318),
  ('expressions_list -> expressions_list COMMA expression','expressions_list',3,'p_expressions_list2','mpasparse.py',322),
  ('relation -> expression LT expression','relation',3,'p_relation1','mpasparse.py',327),
  ('relation -> expression LE expression','relation',3,'p_relation2','mpasparse.py',331),
  ('relation -> expression GT expression','relation',3,'p_relation3','mpasparse.py',335),
  ('relation -> expression GE expression','relation',3,'p_relation4','mpasparse.py',339),
  ('relation -> expression EQ expression','relation',3,'p_relation5','mpasparse.py',343),
  ('relation -> expression NE expression','relation',3,'p_relation6','mpasparse.py',347),
  ('relation -> relation AND relation','relation',3,'p_relation7','mpasparse.py',351),
  ('relation -> relation OR relation','relation',3,'p_relation8','mpasparse.py',355),
  ('relation -> NOT relation','relation',2,'p_relation9','mpasparse.py',359),
  ('relation -> LPAREN relation RPAREN','relation',3,'p_relation10','mpasparse.py',363),
  ('number -> INTEGER','number',1,'p_number1','mpasparse.py',367),
  ('number -> FLOAT','number',1,'p_number','mpasparse.py',371),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',375),
]
