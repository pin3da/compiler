
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x97$\x1f\x05a\xc4\xcd\xd8)\x01\xd5\xa6\xd4\xe8\x1c\xf3'
    
_lr_action_items = {'DO':([42,43,46,47,72,81,85,105,111,112,113,114,122,143,144,145,147,149,151,152,153,154,155,156,157,158,],[-79,-61,-78,-59,-56,-55,118,-57,-54,-53,-51,-52,-76,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,]),'RETURN':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[51,-79,-61,-78,-59,51,-29,-30,51,-38,-46,-39,-56,-55,-36,51,-48,51,-41,51,51,51,-57,-54,-53,-51,-52,51,-76,-47,51,-40,-31,-32,51,-44,51,51,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,51,51,51,51,-45,-43,]),'LPAREN':([5,30,32,40,41,44,45,47,49,51,52,53,55,60,63,64,70,71,74,75,76,77,79,80,86,87,95,96,97,98,99,117,119,123,124,125,126,127,128,146,],[7,45,45,70,71,45,45,75,45,45,84,86,92,95,99,86,45,45,45,45,45,45,45,45,86,86,45,45,45,45,45,86,86,45,45,45,45,45,45,45,]),'FLOAT_TYPE':([12,18,24,25,30,32,44,45,49,51,53,64,70,71,74,75,76,77,79,80,86,87,95,96,97,98,99,117,119,123,124,125,126,127,128,146,],[17,17,17,17,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'LSBRACKET':([17,19,47,63,116,],[30,32,74,98,98,]),'THEN':([42,43,46,47,72,81,100,105,111,112,113,114,122,143,144,145,147,149,151,152,153,154,155,156,157,158,],[-79,-61,-78,-59,-56,-55,139,-57,-54,-53,-51,-52,-76,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,]),'WHILE':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[53,-79,-61,-78,-59,53,-29,-30,53,-38,-46,-39,-56,-55,-36,53,-48,53,-41,53,53,53,-57,-54,-53,-51,-52,53,-76,-47,53,-40,-31,-32,53,-44,53,53,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,53,53,53,53,-45,-43,]),'COLON':([12,14,],[18,25,]),'INT_TYPE':([12,18,24,25,30,32,44,45,49,51,53,64,70,71,74,75,76,77,79,80,86,87,95,96,97,98,99,117,119,123,124,125,126,127,128,146,],[19,19,19,19,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'PRINT':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[55,-79,-61,-78,-59,55,-29,-30,55,-38,-46,-39,-56,-55,-36,55,-48,55,-41,55,55,55,-57,-54,-53,-51,-52,55,-76,-47,55,-40,-31,-32,55,-44,55,55,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,55,55,55,55,-45,-43,]),'MINUS':([30,32,42,43,44,45,46,47,48,49,50,51,53,64,70,71,72,73,74,75,76,77,79,80,81,83,86,87,88,95,96,97,98,99,103,104,105,106,109,111,112,113,114,117,119,121,123,124,125,126,127,128,134,135,136,137,143,144,145,146,147,153,154,155,156,157,158,168,],[49,49,-79,-61,49,49,-78,-59,80,49,80,49,49,49,49,49,-56,80,49,49,49,49,49,49,-55,80,49,49,80,49,49,49,49,49,80,80,-57,80,80,-54,-53,-51,-52,49,49,80,49,49,49,49,49,49,80,80,80,80,-63,-62,-60,49,-58,80,80,80,80,80,80,80,]),'STRING':([92,],[131,]),'BEGIN':([14,17,19,22,26,27,28,33,34,35,36,37,42,43,46,47,54,56,57,58,59,61,65,66,67,68,69,72,78,81,82,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[-80,-25,-24,34,-16,-21,-15,-18,58,-17,-80,-80,-79,-61,-78,-59,58,-29,-30,58,-38,-46,-39,101,102,-20,-19,-56,-27,-55,-26,-36,58,-48,58,-41,58,58,58,-57,-54,-53,-51,-52,58,-76,-47,58,-40,-31,-32,58,-44,58,58,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,58,58,58,58,-45,-43,]),'LE':([42,43,46,47,72,81,88,105,111,112,113,114,121,143,144,145,147,],[-79,-61,-78,-59,-56,-55,123,-57,-54,-53,-51,-52,123,-63,-62,-60,-58,]),'RPAREN':([7,8,9,10,11,13,15,17,19,20,29,31,42,43,46,47,72,73,75,78,81,82,99,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,122,131,134,138,143,144,145,147,149,151,152,153,154,155,156,157,158,161,168,],[-80,-11,14,-9,-14,-10,-13,-25,-24,-23,-12,-22,-79,-61,-78,-59,-56,105,-80,-27,-55,-26,-80,143,144,-57,-64,147,-66,-65,-54,-53,-51,-52,148,-49,152,105,-76,159,160,162,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,-50,-67,]),'SEMICOLON':([17,19,20,21,23,31,38,39,42,43,46,47,54,56,57,59,61,65,72,78,81,82,83,90,91,93,94,105,111,112,113,114,129,130,133,135,136,140,141,142,143,144,145,147,148,150,159,160,162,163,167,170,171,172,173,],[-25,-24,-23,33,35,-22,68,69,-79,-61,-78,-59,89,-29,-30,-38,-46,-39,-56,-27,-55,-26,-36,-4,-48,132,-41,-57,-54,-53,-51,-52,-7,-47,-40,-31,-32,-44,165,166,-63,-62,-60,-58,-35,-28,-33,-34,-37,-42,-5,-45,-8,-6,-43,]),'NE':([42,43,46,47,72,81,88,105,111,112,113,114,121,143,144,145,147,],[-79,-61,-78,-59,-56,-55,125,-57,-54,-53,-51,-52,125,-63,-62,-60,-58,]),'READ':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[52,-79,-61,-78,-59,52,-29,-30,52,-38,-46,-39,-56,-55,-36,52,-48,52,-41,52,52,52,-57,-54,-53,-51,-52,52,-76,-47,52,-40,-31,-32,52,-44,52,52,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,52,52,52,52,-45,-43,]),'LT':([42,43,46,47,72,81,88,105,111,112,113,114,121,143,144,145,147,],[-79,-61,-78,-59,-56,-55,126,-57,-54,-53,-51,-52,126,-63,-62,-60,-58,]),'PLUS':([30,32,42,43,44,45,46,47,48,49,50,51,53,64,70,71,72,73,74,75,76,77,79,80,81,83,86,87,88,95,96,97,98,99,103,104,105,106,109,111,112,113,114,117,119,121,123,124,125,126,127,128,134,135,136,137,143,144,145,146,147,153,154,155,156,157,158,168,],[44,44,-79,-61,44,44,-78,-59,79,44,79,44,44,44,44,44,-56,79,44,44,44,44,44,44,-55,79,44,44,79,44,44,44,44,44,79,79,-57,79,79,-54,-53,-51,-52,44,44,79,44,44,44,44,44,44,79,79,79,79,-63,-62,-60,44,-58,79,79,79,79,79,79,79,]),'COLONEQUAL':([62,63,161,],[97,-49,-50,]),'INTEGER':([30,32,44,45,49,51,53,64,70,71,74,75,76,77,79,80,86,87,95,96,97,98,99,117,119,123,124,125,126,127,128,146,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ASSIGN':([14,62,63,161,],[24,96,-49,-50,]),'$end':([1,3,4,6,90,129,167,171,172,],[-2,0,-1,-3,-4,-7,-5,-8,-6,]),'GT':([42,43,46,47,72,81,88,105,111,112,113,114,121,143,144,145,147,],[-79,-61,-78,-59,-56,-55,127,-57,-54,-53,-51,-52,127,-63,-62,-60,-58,]),'END':([42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,105,111,112,113,114,130,133,135,136,140,142,143,144,145,147,148,150,159,160,162,163,165,166,170,173,],[-79,-61,-78,-59,90,-29,-30,94,-38,-46,-39,-56,-55,-36,129,-48,133,-41,-57,-54,-53,-51,-52,-47,-40,-31,-32,-44,167,-63,-62,-60,-58,-35,-28,-33,-34,-37,-42,171,172,-45,-43,]),'DIVIDE':([42,43,46,47,48,50,72,73,81,83,88,103,104,105,106,109,111,112,113,114,121,134,135,136,137,143,144,145,147,153,154,155,156,157,158,168,],[-79,-61,-78,-59,76,76,76,76,-55,76,76,76,76,-57,76,76,-54,-53,76,76,76,76,76,76,76,-63,-62,-60,-58,76,76,76,76,76,76,76,]),'SKIP':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[59,-79,-61,-78,-59,59,-29,-30,59,-38,-46,-39,-56,-55,-36,59,-48,59,-41,59,59,59,-57,-54,-53,-51,-52,59,-76,-47,59,-40,-31,-32,59,-44,59,59,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,59,59,59,59,-45,-43,]),'TIMES':([42,43,46,47,48,50,72,73,81,83,88,103,104,105,106,109,111,112,113,114,121,134,135,136,137,143,144,145,147,153,154,155,156,157,158,168,],[-79,-61,-78,-59,77,77,77,77,-55,77,77,77,77,-57,77,77,-54,-53,77,77,77,77,77,77,77,-63,-62,-60,-58,77,77,77,77,77,77,77,]),'WRITE':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[60,-79,-61,-78,-59,60,-29,-30,60,-38,-46,-39,-56,-55,-36,60,-48,60,-41,60,60,60,-57,-54,-53,-51,-52,60,-76,-47,60,-40,-31,-32,60,-44,60,60,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,60,60,60,60,-45,-43,]),'GE':([42,43,46,47,72,81,88,105,111,112,113,114,121,143,144,145,147,],[-79,-61,-78,-59,-56,-55,124,-57,-54,-53,-51,-52,124,-63,-62,-60,-58,]),'FUNC':([0,1,4,6,14,17,19,27,28,33,35,36,37,68,69,78,82,90,129,167,171,172,],[2,-2,2,-3,2,-25,-24,-21,2,-18,-17,2,2,-20,-19,-27,-26,-4,-7,-5,-8,-6,]),'ELSE':([42,43,46,47,56,57,59,65,72,81,83,94,105,111,112,113,114,133,135,136,140,143,144,145,147,148,150,159,160,162,163,170,173,],[-79,-61,-78,-59,-29,-30,-38,-39,-56,-55,-36,-41,-57,-54,-53,-51,-52,-40,-31,-32,164,-63,-62,-60,-58,-35,-28,-33,-34,-37,169,-45,-43,]),'EQ':([42,43,46,47,72,81,88,105,111,112,113,114,121,143,144,145,147,],[-79,-61,-78,-59,-56,-55,128,-57,-54,-53,-51,-52,128,-63,-62,-60,-58,]),'ID':([2,7,8,10,11,14,15,16,17,19,20,27,28,29,30,31,32,33,34,35,36,37,42,43,44,45,46,47,49,51,53,54,56,57,58,59,61,64,65,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,86,87,89,91,93,94,95,96,97,98,99,100,101,102,105,111,112,113,114,117,118,119,122,123,124,125,126,127,128,130,132,133,135,136,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[5,12,-11,12,-14,12,-13,12,-25,-24,-23,-21,12,-12,47,-22,47,-18,63,-17,12,12,-79,-61,47,47,-78,-59,47,47,47,63,-29,-30,63,-38,-46,47,-39,-20,-19,47,47,-56,47,47,47,47,-27,47,47,-55,-26,-36,116,47,47,63,-48,63,-41,47,47,47,47,47,63,63,63,-57,-54,-53,-51,-52,47,63,47,-76,47,47,47,47,47,47,-47,63,-40,-31,-32,63,-44,63,63,-63,-62,-60,47,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,63,63,63,63,-45,-43,]),'IF':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[64,-79,-61,-78,-59,64,-29,-30,64,-38,-46,-39,-56,-55,-36,64,-48,64,-41,64,64,64,-57,-54,-53,-51,-52,64,-76,-47,64,-40,-31,-32,64,-44,64,64,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,64,64,64,64,-45,-43,]),'AND':([42,43,46,47,72,81,85,100,105,111,112,113,114,120,122,143,144,145,147,149,151,152,153,154,155,156,157,158,],[-79,-61,-78,-59,-56,-55,117,117,-57,-54,-53,-51,-52,117,-76,-63,-62,-60,-58,-74,117,-77,-69,-71,-73,-68,-70,-72,]),'FLOAT':([30,32,44,45,49,51,53,64,70,71,74,75,76,77,79,80,86,87,95,96,97,98,99,117,119,123,124,125,126,127,128,146,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'BREAK':([34,42,43,46,47,54,56,57,58,59,61,65,72,81,83,89,91,93,94,100,101,102,105,111,112,113,114,118,122,130,132,133,135,136,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,169,170,173,],[65,-79,-61,-78,-59,65,-29,-30,65,-38,-46,-39,-56,-55,-36,65,-48,65,-41,65,65,65,-57,-54,-53,-51,-52,65,-76,-47,65,-40,-31,-32,65,-44,65,65,-63,-62,-60,-58,-35,-74,-28,-75,-77,-69,-71,-73,-68,-70,-72,-33,-34,-37,-42,65,65,65,65,-45,-43,]),'RSBRACKET':([42,43,46,47,48,50,72,81,105,106,111,112,113,114,137,143,144,145,147,],[-79,-61,-78,-59,78,82,-56,-55,-57,145,-54,-53,-51,-52,161,-63,-62,-60,-58,]),'error':([7,14,17,19,36,37,78,82,],[11,27,-25,-24,27,27,-27,-26,]),'NOT':([53,64,86,87,117,119,],[87,87,87,87,87,87,]),'COMMA':([8,10,11,15,17,19,20,29,31,42,43,46,47,72,78,81,82,105,107,109,111,112,113,114,143,144,145,147,168,],[-11,16,-14,-13,-25,-24,-23,-12,-22,-79,-61,-78,-59,-56,-27,-55,-26,-57,146,-66,-54,-53,-51,-52,-63,-62,-60,-58,-67,]),'OR':([42,43,46,47,72,81,85,100,105,111,112,113,114,120,122,143,144,145,147,149,151,152,153,154,155,156,157,158,],[-79,-61,-78,-59,-56,-55,119,119,-57,-54,-53,-51,-52,119,-76,-63,-62,-60,-58,-74,-75,-77,-69,-71,-73,-68,-70,-72,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,4,14,28,36,37,],[1,6,21,38,21,21,]),'expressions_list':([75,99,],[107,107,]),'ifthenelse':([34,54,58,89,93,100,101,102,118,132,139,141,142,164,165,166,169,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'locals_op':([14,36,37,],[22,66,67,]),'dec_list':([34,58,101,102,],[54,93,141,142,]),'var_dec':([7,10,14,16,28,36,37,],[8,15,23,29,39,23,23,]),'expression':([30,32,44,45,49,51,53,64,70,71,74,75,76,77,79,80,86,87,95,96,97,98,99,117,119,123,124,125,126,127,128,146,],[48,50,72,73,81,83,88,88,103,104,106,109,111,112,113,114,121,88,134,135,136,137,109,88,88,153,154,155,156,157,158,168,]),'locals':([14,36,37,],[28,28,28,]),'number':([30,32,44,45,49,51,53,64,70,71,74,75,76,77,79,80,86,87,95,96,97,98,99,117,119,123,124,125,126,127,128,146,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'argsop':([7,],[9,]),'program':([0,],[3,]),'relation':([53,64,86,87,117,119,],[85,100,120,122,149,151,]),'arguments':([7,],[10,]),'declaration':([34,54,58,89,93,100,101,102,118,132,139,141,142,164,165,166,169,],[61,91,61,130,91,140,61,61,150,130,163,91,91,170,130,130,173,]),'func_list':([0,],[4,]),'ubication':([34,54,58,84,89,93,100,101,102,118,132,139,141,142,164,165,166,169,],[62,62,62,115,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'ifthen':([34,54,58,89,93,100,101,102,118,132,139,141,142,164,165,166,169,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'expressions_listop':([75,99,],[108,138,]),'type':([12,18,24,25,],[20,31,36,37,]),'empty':([7,14,36,37,75,99,],[13,26,26,26,110,110,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_list','program',1,'p_program','mpasparse.py',23),
  ('func_list -> function','func_list',1,'p_func_list','mpasparse.py',27),
  ('func_list -> func_list function','func_list',2,'p_func_list2','mpasparse.py',31),
  ('function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END','function',9,'p_function','mpasparse.py',36),
  ('function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END','function',11,'p_function2','mpasparse.py',40),
  ('function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END','function',12,'p_errorFuncion','mpasparse.py',44),
  ('function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END','function',10,'p_errorFuncion2','mpasparse.py',51),
  ('function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END','function',12,'p_errorFuncion3','mpasparse.py',58),
  ('argsop -> arguments','argsop',1,'p_argsop1','mpasparse.py',66),
  ('argsop -> empty','argsop',1,'p_argsop2','mpasparse.py',70),
  ('arguments -> var_dec','arguments',1,'p_arguments1','mpasparse.py',74),
  ('arguments -> arguments COMMA var_dec','arguments',3,'p_arguments2','mpasparse.py',78),
  ('arguments -> arguments var_dec','arguments',2,'p_arguments3','mpasparse.py',83),
  ('arguments -> error','arguments',1,'p_errorarguments','mpasparse.py',89),
  ('locals_op -> locals','locals_op',1,'p_locals_op1','mpasparse.py',94),
  ('locals_op -> empty','locals_op',1,'p_locals_op2','mpasparse.py',98),
  ('locals -> var_dec SEMICOLON','locals',2,'p_locals1','mpasparse.py',102),
  ('locals -> function SEMICOLON','locals',2,'p_locals2','mpasparse.py',106),
  ('locals -> locals var_dec SEMICOLON','locals',3,'p_locals3','mpasparse.py',110),
  ('locals -> locals function SEMICOLON','locals',3,'p_locals4','mpasparse.py',115),
  ('locals -> error','locals',1,'p_errorlocals1','mpasparse.py',120),
  ('var_dec -> ID COLON type','var_dec',3,'p_var_dec','mpasparse.py',125),
  ('var_dec -> ID type','var_dec',2,'p_errorDefvar','mpasparse.py',129),
  ('type -> INT_TYPE','type',1,'p_tipo1','mpasparse.py',135),
  ('type -> FLOAT_TYPE','type',1,'p_tipo2','mpasparse.py',139),
  ('type -> INT_TYPE LSBRACKET expression RSBRACKET','type',4,'p_tipo3','mpasparse.py',143),
  ('type -> FLOAT_TYPE LSBRACKET expression RSBRACKET','type',4,'p_tipo4','mpasparse.py',147),
  ('declaration -> WHILE relation DO declaration','declaration',4,'p_declaration1','mpasparse.py',153),
  ('declaration -> ifthen','declaration',1,'p_declaration2','mpasparse.py',157),
  ('declaration -> ifthenelse','declaration',1,'p_declaration3','mpasparse.py',161),
  ('declaration -> ubication ASSIGN expression','declaration',3,'p_declaration4','mpasparse.py',165),
  ('declaration -> ubication COLONEQUAL expression','declaration',3,'p_declaration_error','mpasparse.py',169),
  ('declaration -> PRINT LPAREN STRING RPAREN','declaration',4,'p_declaration5','mpasparse.py',173),
  ('declaration -> WRITE LPAREN expression RPAREN','declaration',4,'p_declaration6','mpasparse.py',177),
  ('declaration -> READ LPAREN ubication RPAREN','declaration',4,'p_declaration7','mpasparse.py',181),
  ('declaration -> RETURN expression','declaration',2,'p_declaration8','mpasparse.py',185),
  ('declaration -> ID LPAREN expressions_listop RPAREN','declaration',4,'p_declaration9','mpasparse.py',189),
  ('declaration -> SKIP','declaration',1,'p_declaration10','mpasparse.py',193),
  ('declaration -> BREAK','declaration',1,'p_declaration11','mpasparse.py',197),
  ('declaration -> BEGIN dec_list END','declaration',3,'p_declaration12','mpasparse.py',201),
  ('declaration -> BEGIN END','declaration',2,'p_error_empty_list','mpasparse.py',205),
  ('ifthen -> IF relation THEN declaration','ifthen',4,'p_ifthen','mpasparse.py',210),
  ('ifthenelse -> IF relation THEN declaration ELSE declaration','ifthenelse',6,'p_ifthenelse','mpasparse.py',214),
  ('ifthen -> IF relation declaration','ifthen',3,'p_errorifthen','mpasparse.py',218),
  ('ifthen -> IF relation declaration ELSE declaration','ifthen',5,'p_errorifthenelse','mpasparse.py',223),
  ('dec_list -> declaration','dec_list',1,'p_dec_list1','mpasparse.py',228),
  ('dec_list -> dec_list SEMICOLON declaration','dec_list',3,'p_dec_list2','mpasparse.py',232),
  ('dec_list -> dec_list declaration','dec_list',2,'p_dec_listerror','mpasparse.py',237),
  ('ubication -> ID','ubication',1,'p_ubication1','mpasparse.py',244),
  ('ubication -> ID LSBRACKET expression RSBRACKET','ubication',4,'p_ubication2','mpasparse.py',248),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','mpasparse.py',253),
  ('expression -> expression MINUS expression','expression',3,'p_expression2','mpasparse.py',257),
  ('expression -> expression TIMES expression','expression',3,'p_expression3','mpasparse.py',261),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression4','mpasparse.py',265),
  ('expression -> MINUS expression','expression',2,'p_expression5','mpasparse.py',269),
  ('expression -> PLUS expression','expression',2,'p_expression6','mpasparse.py',273),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression7','mpasparse.py',277),
  ('expression -> ID LPAREN expressions_listop RPAREN','expression',4,'p_expression8','mpasparse.py',281),
  ('expression -> ID','expression',1,'p_expression9','mpasparse.py',285),
  ('expression -> ID LSBRACKET expression RSBRACKET','expression',4,'p_expression10','mpasparse.py',289),
  ('expression -> number','expression',1,'p_expression11','mpasparse.py',293),
  ('expression -> INT_TYPE LPAREN expression RPAREN','expression',4,'p_expression12','mpasparse.py',297),
  ('expression -> FLOAT_TYPE LPAREN expression RPAREN','expression',4,'p_expression13','mpasparse.py',301),
  ('expressions_listop -> expressions_list','expressions_listop',1,'p_expressions_listop1','mpasparse.py',306),
  ('expressions_listop -> empty','expressions_listop',1,'p_expressions_listop2','mpasparse.py',310),
  ('expressions_list -> expression','expressions_list',1,'p_expressions_list1','mpasparse.py',314),
  ('expressions_list -> expressions_list COMMA expression','expressions_list',3,'p_expressions_list2','mpasparse.py',318),
  ('relation -> expression LT expression','relation',3,'p_relation1','mpasparse.py',323),
  ('relation -> expression LE expression','relation',3,'p_relation2','mpasparse.py',327),
  ('relation -> expression GT expression','relation',3,'p_relation3','mpasparse.py',331),
  ('relation -> expression GE expression','relation',3,'p_relation4','mpasparse.py',335),
  ('relation -> expression EQ expression','relation',3,'p_relation5','mpasparse.py',339),
  ('relation -> expression NE expression','relation',3,'p_relation6','mpasparse.py',343),
  ('relation -> relation AND relation','relation',3,'p_relation7','mpasparse.py',347),
  ('relation -> relation OR relation','relation',3,'p_relation8','mpasparse.py',351),
  ('relation -> NOT relation','relation',2,'p_relation9','mpasparse.py',355),
  ('relation -> LPAREN relation RPAREN','relation',3,'p_relation10','mpasparse.py',359),
  ('number -> INTEGER','number',1,'p_number1','mpasparse.py',363),
  ('number -> FLOAT','number',1,'p_number2','mpasparse.py',367),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',371),
]
