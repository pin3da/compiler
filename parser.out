Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CONST
    STRING_TYPE
    EXTERN
    VAR
    BOOLEAN_TYPE
    BOOLEAN

Grammar

Rule 0     S' -> program
Rule 1     program -> func_list
Rule 2     func_list -> function
Rule 3     func_list -> func_list function
Rule 4     function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
Rule 5     function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
Rule 6     function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
Rule 7     function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
Rule 8     function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END
Rule 9     argsop -> arguments
Rule 10    argsop -> empty
Rule 11    arguments -> var_dec
Rule 12    arguments -> arguments COMMA var_dec
Rule 13    arguments -> arguments var_dec
Rule 14    arguments -> error
Rule 15    locals_op -> locals
Rule 16    locals_op -> empty
Rule 17    locals -> var_dec SEMICOLON
Rule 18    locals -> function SEMICOLON
Rule 19    locals -> locals var_dec SEMICOLON
Rule 20    locals -> locals function SEMICOLON
Rule 21    locals -> error
Rule 22    var_dec -> ID COLON type
Rule 23    var_dec -> ID type
Rule 24    type -> INT_TYPE
Rule 25    type -> FLOAT_TYPE
Rule 26    type -> INT_TYPE LSBRACKET expression RSBRACKET
Rule 27    type -> FLOAT_TYPE LSBRACKET expression RSBRACKET
Rule 28    declaration -> WHILE relation DO declaration
Rule 29    declaration -> ifthen
Rule 30    declaration -> ifthenelse
Rule 31    declaration -> ubication ASSIGN expression
Rule 32    declaration -> ubication COLONEQUAL expression
Rule 33    declaration -> PRINT LPAREN STRING RPAREN
Rule 34    declaration -> WRITE LPAREN expression RPAREN
Rule 35    declaration -> READ LPAREN ubication RPAREN
Rule 36    declaration -> RETURN expression
Rule 37    declaration -> ID LPAREN expressions_listop RPAREN
Rule 38    declaration -> SKIP
Rule 39    declaration -> BREAK
Rule 40    declaration -> BEGIN dec_list END
Rule 41    declaration -> BEGIN END
Rule 42    ifthen -> IF relation THEN declaration
Rule 43    ifthenelse -> IF relation THEN declaration ELSE declaration
Rule 44    ifthen -> IF relation declaration
Rule 45    ifthen -> IF relation declaration ELSE declaration
Rule 46    dec_list -> declaration
Rule 47    dec_list -> dec_list SEMICOLON declaration
Rule 48    dec_list -> dec_list declaration
Rule 49    ubication -> ID
Rule 50    ubication -> ID LSBRACKET expression RSBRACKET
Rule 51    expression -> expression PLUS expression
Rule 52    expression -> expression MINUS expression
Rule 53    expression -> expression TIMES expression
Rule 54    expression -> expression DIVIDE expression
Rule 55    expression -> MINUS expression
Rule 56    expression -> PLUS expression
Rule 57    expression -> LPAREN expression RPAREN
Rule 58    expression -> ID LPAREN expressions_listop RPAREN
Rule 59    expression -> ID
Rule 60    expression -> ID LSBRACKET expression RSBRACKET
Rule 61    expression -> number
Rule 62    expression -> INT_TYPE LPAREN expression RPAREN
Rule 63    expression -> FLOAT_TYPE LPAREN expression RPAREN
Rule 64    expressions_listop -> expressions_list
Rule 65    expressions_listop -> empty
Rule 66    expressions_list -> expression
Rule 67    expressions_list -> expressions_list COMMA expression
Rule 68    relation -> expression LT expression
Rule 69    relation -> expression LE expression
Rule 70    relation -> expression GT expression
Rule 71    relation -> expression GE expression
Rule 72    relation -> expression EQ expression
Rule 73    relation -> expression NE expression
Rule 74    relation -> relation AND relation
Rule 75    relation -> relation OR relation
Rule 76    relation -> NOT relation
Rule 77    relation -> LPAREN relation RPAREN
Rule 78    number -> INTEGER
Rule 79    number -> FLOAT
Rule 80    empty -> <empty>

Terminals, with rules where they appear

AND                  : 74
ASSIGN               : 8 31
BEGIN                : 4 5 6 7 8 40 41
BOOLEAN              : 
BOOLEAN_TYPE         : 
BREAK                : 39
COLON                : 5 6 22
COLONEQUAL           : 32
COMMA                : 12 67
CONST                : 
DIVIDE               : 54
DO                   : 28
ELSE                 : 43 45
END                  : 4 5 6 7 8 40 41
EQ                   : 72
EXTERN               : 
FLOAT                : 79
FLOAT_TYPE           : 25 27 63
FUNC                 : 4 5 6 7 8
GE                   : 71
GT                   : 70
ID                   : 4 5 6 7 8 22 23 37 49 50 58 59 60
IF                   : 42 43 44 45
INTEGER              : 78
INT_TYPE             : 24 26 62
LE                   : 69
LPAREN               : 4 5 6 7 8 33 34 35 37 57 58 62 63 77
LSBRACKET            : 26 27 50 60
LT                   : 68
MINUS                : 52 55
NE                   : 73
NOT                  : 76
OR                   : 75
PLUS                 : 51 56
PRINT                : 33
READ                 : 35
RETURN               : 36
RPAREN               : 4 5 6 7 8 33 34 35 37 57 58 62 63 77
RSBRACKET            : 26 27 50 60
SEMICOLON            : 6 7 8 17 18 19 20 47
SKIP                 : 38
STRING               : 33
STRING_TYPE          : 
THEN                 : 42 43
TIMES                : 53
VAR                  : 
WHILE                : 28
WRITE                : 34
error                : 14 21

Nonterminals, with rules where they appear

argsop               : 4 5 6 7 8
arguments            : 9 12 13
dec_list             : 4 5 6 7 8 40 47 48
declaration          : 28 42 43 43 44 45 45 46 47 48
empty                : 10 16 65
expression           : 26 27 31 32 34 36 50 51 51 52 52 53 53 54 54 55 56 57 60 62 63 66 67 68 68 69 69 70 70 71 71 72 72 73 73
expressions_list     : 64 67
expressions_listop   : 37 58
func_list            : 1 3
function             : 2 3 18 20
ifthen               : 29
ifthenelse           : 30
locals               : 15 19 20
locals_op            : 4 5 6 7 8
number               : 61
program              : 0
relation             : 28 42 43 44 45 74 74 75 75 76 77
type                 : 5 6 8 22 23
ubication            : 31 32 35
var_dec              : 11 12 13 17 19

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . func_list
    (2) func_list -> . function
    (3) func_list -> . func_list function
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> . FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    FUNC            shift and go to state 2

    function                       shift and go to state 1
    program                        shift and go to state 3
    func_list                      shift and go to state 4

state 1

    (2) func_list -> function .

    FUNC            reduce using rule 2 (func_list -> function .)
    $end            reduce using rule 2 (func_list -> function .)


state 2

    (4) function -> FUNC . ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC . ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> FUNC . ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> FUNC . ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> FUNC . ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    ID              shift and go to state 5


state 3

    (0) S' -> program .



state 4

    (1) program -> func_list .
    (3) func_list -> func_list . function
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> . FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    $end            reduce using rule 1 (program -> func_list .)
    FUNC            shift and go to state 2

    function                       shift and go to state 6

state 5

    (4) function -> FUNC ID . LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC ID . LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> FUNC ID . LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> FUNC ID . LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> FUNC ID . LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    LPAREN          shift and go to state 7


state 6

    (3) func_list -> func_list function .

    FUNC            reduce using rule 3 (func_list -> func_list function .)
    $end            reduce using rule 3 (func_list -> func_list function .)


state 7

    (4) function -> FUNC ID LPAREN . argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC ID LPAREN . argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> FUNC ID LPAREN . argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> FUNC ID LPAREN . argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> FUNC ID LPAREN . argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END
    (9) argsop -> . arguments
    (10) argsop -> . empty
    (11) arguments -> . var_dec
    (12) arguments -> . arguments COMMA var_dec
    (13) arguments -> . arguments var_dec
    (14) arguments -> . error
    (80) empty -> .
    (22) var_dec -> . ID COLON type
    (23) var_dec -> . ID type

    error           shift and go to state 11
    RPAREN          reduce using rule 80 (empty -> .)
    ID              shift and go to state 12

    var_dec                        shift and go to state 8
    argsop                         shift and go to state 9
    arguments                      shift and go to state 10
    empty                          shift and go to state 13

state 8

    (11) arguments -> var_dec .

    COMMA           reduce using rule 11 (arguments -> var_dec .)
    ID              reduce using rule 11 (arguments -> var_dec .)
    RPAREN          reduce using rule 11 (arguments -> var_dec .)


state 9

    (4) function -> FUNC ID LPAREN argsop . RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC ID LPAREN argsop . RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> FUNC ID LPAREN argsop . RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> FUNC ID LPAREN argsop . RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> FUNC ID LPAREN argsop . RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    RPAREN          shift and go to state 14


state 10

    (9) argsop -> arguments .
    (12) arguments -> arguments . COMMA var_dec
    (13) arguments -> arguments . var_dec
    (22) var_dec -> . ID COLON type
    (23) var_dec -> . ID type

    RPAREN          reduce using rule 9 (argsop -> arguments .)
    COMMA           shift and go to state 16
    ID              shift and go to state 12

    var_dec                        shift and go to state 15

state 11

    (14) arguments -> error .

    COMMA           reduce using rule 14 (arguments -> error .)
    ID              reduce using rule 14 (arguments -> error .)
    RPAREN          reduce using rule 14 (arguments -> error .)


state 12

    (22) var_dec -> ID . COLON type
    (23) var_dec -> ID . type
    (24) type -> . INT_TYPE
    (25) type -> . FLOAT_TYPE
    (26) type -> . INT_TYPE LSBRACKET expression RSBRACKET
    (27) type -> . FLOAT_TYPE LSBRACKET expression RSBRACKET

    COLON           shift and go to state 18
    INT_TYPE        shift and go to state 19
    FLOAT_TYPE      shift and go to state 17

    type                           shift and go to state 20

state 13

    (10) argsop -> empty .

    RPAREN          reduce using rule 10 (argsop -> empty .)


state 14

    (4) function -> FUNC ID LPAREN argsop RPAREN . locals_op BEGIN dec_list END
    (5) function -> FUNC ID LPAREN argsop RPAREN . COLON type locals_op BEGIN dec_list END
    (6) function -> FUNC ID LPAREN argsop RPAREN . COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> FUNC ID LPAREN argsop RPAREN . locals_op BEGIN dec_list SEMICOLON END
    (8) function -> FUNC ID LPAREN argsop RPAREN . ASSIGN type locals_op BEGIN dec_list SEMICOLON END
    (15) locals_op -> . locals
    (16) locals_op -> . empty
    (17) locals -> . var_dec SEMICOLON
    (18) locals -> . function SEMICOLON
    (19) locals -> . locals var_dec SEMICOLON
    (20) locals -> . locals function SEMICOLON
    (21) locals -> . error
    (80) empty -> .
    (22) var_dec -> . ID COLON type
    (23) var_dec -> . ID type
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> . FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    COLON           shift and go to state 25
    ASSIGN          shift and go to state 24
    error           shift and go to state 27
    BEGIN           reduce using rule 80 (empty -> .)
    ID              shift and go to state 12
    FUNC            shift and go to state 2

    function                       shift and go to state 21
    locals_op                      shift and go to state 22
    var_dec                        shift and go to state 23
    locals                         shift and go to state 28
    empty                          shift and go to state 26

state 15

    (13) arguments -> arguments var_dec .

    COMMA           reduce using rule 13 (arguments -> arguments var_dec .)
    ID              reduce using rule 13 (arguments -> arguments var_dec .)
    RPAREN          reduce using rule 13 (arguments -> arguments var_dec .)


state 16

    (12) arguments -> arguments COMMA . var_dec
    (22) var_dec -> . ID COLON type
    (23) var_dec -> . ID type

    ID              shift and go to state 12

    var_dec                        shift and go to state 29

state 17

    (25) type -> FLOAT_TYPE .
    (27) type -> FLOAT_TYPE . LSBRACKET expression RSBRACKET

    error           reduce using rule 25 (type -> FLOAT_TYPE .)
    ID              reduce using rule 25 (type -> FLOAT_TYPE .)
    FUNC            reduce using rule 25 (type -> FLOAT_TYPE .)
    BEGIN           reduce using rule 25 (type -> FLOAT_TYPE .)
    COMMA           reduce using rule 25 (type -> FLOAT_TYPE .)
    RPAREN          reduce using rule 25 (type -> FLOAT_TYPE .)
    SEMICOLON       reduce using rule 25 (type -> FLOAT_TYPE .)
    LSBRACKET       shift and go to state 30


state 18

    (22) var_dec -> ID COLON . type
    (24) type -> . INT_TYPE
    (25) type -> . FLOAT_TYPE
    (26) type -> . INT_TYPE LSBRACKET expression RSBRACKET
    (27) type -> . FLOAT_TYPE LSBRACKET expression RSBRACKET

    INT_TYPE        shift and go to state 19
    FLOAT_TYPE      shift and go to state 17

    type                           shift and go to state 31

state 19

    (24) type -> INT_TYPE .
    (26) type -> INT_TYPE . LSBRACKET expression RSBRACKET

    error           reduce using rule 24 (type -> INT_TYPE .)
    ID              reduce using rule 24 (type -> INT_TYPE .)
    FUNC            reduce using rule 24 (type -> INT_TYPE .)
    BEGIN           reduce using rule 24 (type -> INT_TYPE .)
    COMMA           reduce using rule 24 (type -> INT_TYPE .)
    RPAREN          reduce using rule 24 (type -> INT_TYPE .)
    SEMICOLON       reduce using rule 24 (type -> INT_TYPE .)
    LSBRACKET       shift and go to state 32


state 20

    (23) var_dec -> ID type .

    COMMA           reduce using rule 23 (var_dec -> ID type .)
    ID              reduce using rule 23 (var_dec -> ID type .)
    RPAREN          reduce using rule 23 (var_dec -> ID type .)
    SEMICOLON       reduce using rule 23 (var_dec -> ID type .)


state 21

    (18) locals -> function . SEMICOLON

    SEMICOLON       shift and go to state 33


state 22

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op . BEGIN dec_list END
    (7) function -> FUNC ID LPAREN argsop RPAREN locals_op . BEGIN dec_list SEMICOLON END

    BEGIN           shift and go to state 34


state 23

    (17) locals -> var_dec . SEMICOLON

    SEMICOLON       shift and go to state 35


state 24

    (8) function -> FUNC ID LPAREN argsop RPAREN ASSIGN . type locals_op BEGIN dec_list SEMICOLON END
    (24) type -> . INT_TYPE
    (25) type -> . FLOAT_TYPE
    (26) type -> . INT_TYPE LSBRACKET expression RSBRACKET
    (27) type -> . FLOAT_TYPE LSBRACKET expression RSBRACKET

    INT_TYPE        shift and go to state 19
    FLOAT_TYPE      shift and go to state 17

    type                           shift and go to state 36

state 25

    (5) function -> FUNC ID LPAREN argsop RPAREN COLON . type locals_op BEGIN dec_list END
    (6) function -> FUNC ID LPAREN argsop RPAREN COLON . type locals_op BEGIN dec_list SEMICOLON END
    (24) type -> . INT_TYPE
    (25) type -> . FLOAT_TYPE
    (26) type -> . INT_TYPE LSBRACKET expression RSBRACKET
    (27) type -> . FLOAT_TYPE LSBRACKET expression RSBRACKET

    INT_TYPE        shift and go to state 19
    FLOAT_TYPE      shift and go to state 17

    type                           shift and go to state 37

state 26

    (16) locals_op -> empty .

    BEGIN           reduce using rule 16 (locals_op -> empty .)


state 27

    (21) locals -> error .

    ID              reduce using rule 21 (locals -> error .)
    FUNC            reduce using rule 21 (locals -> error .)
    BEGIN           reduce using rule 21 (locals -> error .)


state 28

    (15) locals_op -> locals .
    (19) locals -> locals . var_dec SEMICOLON
    (20) locals -> locals . function SEMICOLON
    (22) var_dec -> . ID COLON type
    (23) var_dec -> . ID type
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> . FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    BEGIN           reduce using rule 15 (locals_op -> locals .)
    ID              shift and go to state 12
    FUNC            shift and go to state 2

    function                       shift and go to state 38
    var_dec                        shift and go to state 39

state 29

    (12) arguments -> arguments COMMA var_dec .

    COMMA           reduce using rule 12 (arguments -> arguments COMMA var_dec .)
    ID              reduce using rule 12 (arguments -> arguments COMMA var_dec .)
    RPAREN          reduce using rule 12 (arguments -> arguments COMMA var_dec .)


state 30

    (27) type -> FLOAT_TYPE LSBRACKET . expression RSBRACKET
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 48
    number                         shift and go to state 43

state 31

    (22) var_dec -> ID COLON type .

    COMMA           reduce using rule 22 (var_dec -> ID COLON type .)
    ID              reduce using rule 22 (var_dec -> ID COLON type .)
    RPAREN          reduce using rule 22 (var_dec -> ID COLON type .)
    SEMICOLON       reduce using rule 22 (var_dec -> ID COLON type .)


state 32

    (26) type -> INT_TYPE LSBRACKET . expression RSBRACKET
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 50
    number                         shift and go to state 43

state 33

    (18) locals -> function SEMICOLON .

    ID              reduce using rule 18 (locals -> function SEMICOLON .)
    FUNC            reduce using rule 18 (locals -> function SEMICOLON .)
    BEGIN           reduce using rule 18 (locals -> function SEMICOLON .)


state 34

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN . dec_list END
    (7) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN . dec_list SEMICOLON END
    (46) dec_list -> . declaration
    (47) dec_list -> . dec_list SEMICOLON declaration
    (48) dec_list -> . dec_list declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    dec_list                       shift and go to state 54
    declaration                    shift and go to state 61
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 35

    (17) locals -> var_dec SEMICOLON .

    ID              reduce using rule 17 (locals -> var_dec SEMICOLON .)
    FUNC            reduce using rule 17 (locals -> var_dec SEMICOLON .)
    BEGIN           reduce using rule 17 (locals -> var_dec SEMICOLON .)


state 36

    (8) function -> FUNC ID LPAREN argsop RPAREN ASSIGN type . locals_op BEGIN dec_list SEMICOLON END
    (15) locals_op -> . locals
    (16) locals_op -> . empty
    (17) locals -> . var_dec SEMICOLON
    (18) locals -> . function SEMICOLON
    (19) locals -> . locals var_dec SEMICOLON
    (20) locals -> . locals function SEMICOLON
    (21) locals -> . error
    (80) empty -> .
    (22) var_dec -> . ID COLON type
    (23) var_dec -> . ID type
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> . FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    error           shift and go to state 27
    BEGIN           reduce using rule 80 (empty -> .)
    ID              shift and go to state 12
    FUNC            shift and go to state 2

    function                       shift and go to state 21
    locals_op                      shift and go to state 66
    var_dec                        shift and go to state 23
    locals                         shift and go to state 28
    empty                          shift and go to state 26

state 37

    (5) function -> FUNC ID LPAREN argsop RPAREN COLON type . locals_op BEGIN dec_list END
    (6) function -> FUNC ID LPAREN argsop RPAREN COLON type . locals_op BEGIN dec_list SEMICOLON END
    (15) locals_op -> . locals
    (16) locals_op -> . empty
    (17) locals -> . var_dec SEMICOLON
    (18) locals -> . function SEMICOLON
    (19) locals -> . locals var_dec SEMICOLON
    (20) locals -> . locals function SEMICOLON
    (21) locals -> . error
    (80) empty -> .
    (22) var_dec -> . ID COLON type
    (23) var_dec -> . ID type
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END
    (6) function -> . FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END
    (7) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (8) function -> . FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END

    error           shift and go to state 27
    BEGIN           reduce using rule 80 (empty -> .)
    ID              shift and go to state 12
    FUNC            shift and go to state 2

    function                       shift and go to state 21
    locals_op                      shift and go to state 67
    var_dec                        shift and go to state 23
    locals                         shift and go to state 28
    empty                          shift and go to state 26

state 38

    (20) locals -> locals function . SEMICOLON

    SEMICOLON       shift and go to state 68


state 39

    (19) locals -> locals var_dec . SEMICOLON

    SEMICOLON       shift and go to state 69


state 40

    (63) expression -> FLOAT_TYPE . LPAREN expression RPAREN

    LPAREN          shift and go to state 70


state 41

    (62) expression -> INT_TYPE . LPAREN expression RPAREN

    LPAREN          shift and go to state 71


state 42

    (79) number -> FLOAT .

    RPAREN          reduce using rule 79 (number -> FLOAT .)
    PLUS            reduce using rule 79 (number -> FLOAT .)
    MINUS           reduce using rule 79 (number -> FLOAT .)
    TIMES           reduce using rule 79 (number -> FLOAT .)
    DIVIDE          reduce using rule 79 (number -> FLOAT .)
    RSBRACKET       reduce using rule 79 (number -> FLOAT .)
    END             reduce using rule 79 (number -> FLOAT .)
    SEMICOLON       reduce using rule 79 (number -> FLOAT .)
    WHILE           reduce using rule 79 (number -> FLOAT .)
    PRINT           reduce using rule 79 (number -> FLOAT .)
    WRITE           reduce using rule 79 (number -> FLOAT .)
    READ            reduce using rule 79 (number -> FLOAT .)
    RETURN          reduce using rule 79 (number -> FLOAT .)
    ID              reduce using rule 79 (number -> FLOAT .)
    SKIP            reduce using rule 79 (number -> FLOAT .)
    BREAK           reduce using rule 79 (number -> FLOAT .)
    BEGIN           reduce using rule 79 (number -> FLOAT .)
    IF              reduce using rule 79 (number -> FLOAT .)
    ELSE            reduce using rule 79 (number -> FLOAT .)
    DO              reduce using rule 79 (number -> FLOAT .)
    AND             reduce using rule 79 (number -> FLOAT .)
    OR              reduce using rule 79 (number -> FLOAT .)
    THEN            reduce using rule 79 (number -> FLOAT .)
    COMMA           reduce using rule 79 (number -> FLOAT .)
    LT              reduce using rule 79 (number -> FLOAT .)
    LE              reduce using rule 79 (number -> FLOAT .)
    GT              reduce using rule 79 (number -> FLOAT .)
    GE              reduce using rule 79 (number -> FLOAT .)
    EQ              reduce using rule 79 (number -> FLOAT .)
    NE              reduce using rule 79 (number -> FLOAT .)


state 43

    (61) expression -> number .

    RPAREN          reduce using rule 61 (expression -> number .)
    PLUS            reduce using rule 61 (expression -> number .)
    MINUS           reduce using rule 61 (expression -> number .)
    TIMES           reduce using rule 61 (expression -> number .)
    DIVIDE          reduce using rule 61 (expression -> number .)
    LT              reduce using rule 61 (expression -> number .)
    LE              reduce using rule 61 (expression -> number .)
    GT              reduce using rule 61 (expression -> number .)
    GE              reduce using rule 61 (expression -> number .)
    EQ              reduce using rule 61 (expression -> number .)
    NE              reduce using rule 61 (expression -> number .)
    COMMA           reduce using rule 61 (expression -> number .)
    DO              reduce using rule 61 (expression -> number .)
    AND             reduce using rule 61 (expression -> number .)
    OR              reduce using rule 61 (expression -> number .)
    THEN            reduce using rule 61 (expression -> number .)
    WHILE           reduce using rule 61 (expression -> number .)
    PRINT           reduce using rule 61 (expression -> number .)
    WRITE           reduce using rule 61 (expression -> number .)
    READ            reduce using rule 61 (expression -> number .)
    RETURN          reduce using rule 61 (expression -> number .)
    ID              reduce using rule 61 (expression -> number .)
    SKIP            reduce using rule 61 (expression -> number .)
    BREAK           reduce using rule 61 (expression -> number .)
    BEGIN           reduce using rule 61 (expression -> number .)
    IF              reduce using rule 61 (expression -> number .)
    RSBRACKET       reduce using rule 61 (expression -> number .)
    END             reduce using rule 61 (expression -> number .)
    SEMICOLON       reduce using rule 61 (expression -> number .)
    ELSE            reduce using rule 61 (expression -> number .)


state 44

    (56) expression -> PLUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 72
    number                         shift and go to state 43

state 45

    (57) expression -> LPAREN . expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 73
    number                         shift and go to state 43

state 46

    (78) number -> INTEGER .

    RPAREN          reduce using rule 78 (number -> INTEGER .)
    PLUS            reduce using rule 78 (number -> INTEGER .)
    MINUS           reduce using rule 78 (number -> INTEGER .)
    TIMES           reduce using rule 78 (number -> INTEGER .)
    DIVIDE          reduce using rule 78 (number -> INTEGER .)
    RSBRACKET       reduce using rule 78 (number -> INTEGER .)
    END             reduce using rule 78 (number -> INTEGER .)
    SEMICOLON       reduce using rule 78 (number -> INTEGER .)
    WHILE           reduce using rule 78 (number -> INTEGER .)
    PRINT           reduce using rule 78 (number -> INTEGER .)
    WRITE           reduce using rule 78 (number -> INTEGER .)
    READ            reduce using rule 78 (number -> INTEGER .)
    RETURN          reduce using rule 78 (number -> INTEGER .)
    ID              reduce using rule 78 (number -> INTEGER .)
    SKIP            reduce using rule 78 (number -> INTEGER .)
    BREAK           reduce using rule 78 (number -> INTEGER .)
    BEGIN           reduce using rule 78 (number -> INTEGER .)
    IF              reduce using rule 78 (number -> INTEGER .)
    ELSE            reduce using rule 78 (number -> INTEGER .)
    DO              reduce using rule 78 (number -> INTEGER .)
    AND             reduce using rule 78 (number -> INTEGER .)
    OR              reduce using rule 78 (number -> INTEGER .)
    THEN            reduce using rule 78 (number -> INTEGER .)
    COMMA           reduce using rule 78 (number -> INTEGER .)
    LT              reduce using rule 78 (number -> INTEGER .)
    LE              reduce using rule 78 (number -> INTEGER .)
    GT              reduce using rule 78 (number -> INTEGER .)
    GE              reduce using rule 78 (number -> INTEGER .)
    EQ              reduce using rule 78 (number -> INTEGER .)
    NE              reduce using rule 78 (number -> INTEGER .)


state 47

    (58) expression -> ID . LPAREN expressions_listop RPAREN
    (59) expression -> ID .
    (60) expression -> ID . LSBRACKET expression RSBRACKET

    LPAREN          shift and go to state 75
    RPAREN          reduce using rule 59 (expression -> ID .)
    PLUS            reduce using rule 59 (expression -> ID .)
    MINUS           reduce using rule 59 (expression -> ID .)
    TIMES           reduce using rule 59 (expression -> ID .)
    DIVIDE          reduce using rule 59 (expression -> ID .)
    LT              reduce using rule 59 (expression -> ID .)
    LE              reduce using rule 59 (expression -> ID .)
    GT              reduce using rule 59 (expression -> ID .)
    GE              reduce using rule 59 (expression -> ID .)
    EQ              reduce using rule 59 (expression -> ID .)
    NE              reduce using rule 59 (expression -> ID .)
    COMMA           reduce using rule 59 (expression -> ID .)
    DO              reduce using rule 59 (expression -> ID .)
    AND             reduce using rule 59 (expression -> ID .)
    OR              reduce using rule 59 (expression -> ID .)
    THEN            reduce using rule 59 (expression -> ID .)
    WHILE           reduce using rule 59 (expression -> ID .)
    PRINT           reduce using rule 59 (expression -> ID .)
    WRITE           reduce using rule 59 (expression -> ID .)
    READ            reduce using rule 59 (expression -> ID .)
    RETURN          reduce using rule 59 (expression -> ID .)
    ID              reduce using rule 59 (expression -> ID .)
    SKIP            reduce using rule 59 (expression -> ID .)
    BREAK           reduce using rule 59 (expression -> ID .)
    BEGIN           reduce using rule 59 (expression -> ID .)
    IF              reduce using rule 59 (expression -> ID .)
    RSBRACKET       reduce using rule 59 (expression -> ID .)
    END             reduce using rule 59 (expression -> ID .)
    SEMICOLON       reduce using rule 59 (expression -> ID .)
    ELSE            reduce using rule 59 (expression -> ID .)
    LSBRACKET       shift and go to state 74


state 48

    (27) type -> FLOAT_TYPE LSBRACKET expression . RSBRACKET
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 49

    (55) expression -> MINUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 81
    number                         shift and go to state 43

state 50

    (26) type -> INT_TYPE LSBRACKET expression . RSBRACKET
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 51

    (36) declaration -> RETURN . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 83
    number                         shift and go to state 43

state 52

    (35) declaration -> READ . LPAREN ubication RPAREN

    LPAREN          shift and go to state 84


state 53

    (28) declaration -> WHILE . relation DO declaration
    (68) relation -> . expression LT expression
    (69) relation -> . expression LE expression
    (70) relation -> . expression GT expression
    (71) relation -> . expression GE expression
    (72) relation -> . expression EQ expression
    (73) relation -> . expression NE expression
    (74) relation -> . relation AND relation
    (75) relation -> . relation OR relation
    (76) relation -> . NOT relation
    (77) relation -> . LPAREN relation RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    NOT             shift and go to state 87
    LPAREN          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 88
    relation                       shift and go to state 85
    number                         shift and go to state 43

state 54

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list . END
    (7) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list . SEMICOLON END
    (47) dec_list -> dec_list . SEMICOLON declaration
    (48) dec_list -> dec_list . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 90
    SEMICOLON       shift and go to state 89
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 91
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 55

    (33) declaration -> PRINT . LPAREN STRING RPAREN

    LPAREN          shift and go to state 92


state 56

    (29) declaration -> ifthen .

    END             reduce using rule 29 (declaration -> ifthen .)
    SEMICOLON       reduce using rule 29 (declaration -> ifthen .)
    WHILE           reduce using rule 29 (declaration -> ifthen .)
    PRINT           reduce using rule 29 (declaration -> ifthen .)
    WRITE           reduce using rule 29 (declaration -> ifthen .)
    READ            reduce using rule 29 (declaration -> ifthen .)
    RETURN          reduce using rule 29 (declaration -> ifthen .)
    ID              reduce using rule 29 (declaration -> ifthen .)
    SKIP            reduce using rule 29 (declaration -> ifthen .)
    BREAK           reduce using rule 29 (declaration -> ifthen .)
    BEGIN           reduce using rule 29 (declaration -> ifthen .)
    IF              reduce using rule 29 (declaration -> ifthen .)
    ELSE            reduce using rule 29 (declaration -> ifthen .)


state 57

    (30) declaration -> ifthenelse .

    END             reduce using rule 30 (declaration -> ifthenelse .)
    SEMICOLON       reduce using rule 30 (declaration -> ifthenelse .)
    WHILE           reduce using rule 30 (declaration -> ifthenelse .)
    PRINT           reduce using rule 30 (declaration -> ifthenelse .)
    WRITE           reduce using rule 30 (declaration -> ifthenelse .)
    READ            reduce using rule 30 (declaration -> ifthenelse .)
    RETURN          reduce using rule 30 (declaration -> ifthenelse .)
    ID              reduce using rule 30 (declaration -> ifthenelse .)
    SKIP            reduce using rule 30 (declaration -> ifthenelse .)
    BREAK           reduce using rule 30 (declaration -> ifthenelse .)
    BEGIN           reduce using rule 30 (declaration -> ifthenelse .)
    IF              reduce using rule 30 (declaration -> ifthenelse .)
    ELSE            reduce using rule 30 (declaration -> ifthenelse .)


state 58

    (40) declaration -> BEGIN . dec_list END
    (41) declaration -> BEGIN . END
    (46) dec_list -> . declaration
    (47) dec_list -> . dec_list SEMICOLON declaration
    (48) dec_list -> . dec_list declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 94
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    dec_list                       shift and go to state 93
    declaration                    shift and go to state 61
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 59

    (38) declaration -> SKIP .

    END             reduce using rule 38 (declaration -> SKIP .)
    SEMICOLON       reduce using rule 38 (declaration -> SKIP .)
    WHILE           reduce using rule 38 (declaration -> SKIP .)
    PRINT           reduce using rule 38 (declaration -> SKIP .)
    WRITE           reduce using rule 38 (declaration -> SKIP .)
    READ            reduce using rule 38 (declaration -> SKIP .)
    RETURN          reduce using rule 38 (declaration -> SKIP .)
    ID              reduce using rule 38 (declaration -> SKIP .)
    SKIP            reduce using rule 38 (declaration -> SKIP .)
    BREAK           reduce using rule 38 (declaration -> SKIP .)
    BEGIN           reduce using rule 38 (declaration -> SKIP .)
    IF              reduce using rule 38 (declaration -> SKIP .)
    ELSE            reduce using rule 38 (declaration -> SKIP .)


state 60

    (34) declaration -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 95


state 61

    (46) dec_list -> declaration .

    END             reduce using rule 46 (dec_list -> declaration .)
    SEMICOLON       reduce using rule 46 (dec_list -> declaration .)
    WHILE           reduce using rule 46 (dec_list -> declaration .)
    PRINT           reduce using rule 46 (dec_list -> declaration .)
    WRITE           reduce using rule 46 (dec_list -> declaration .)
    READ            reduce using rule 46 (dec_list -> declaration .)
    RETURN          reduce using rule 46 (dec_list -> declaration .)
    ID              reduce using rule 46 (dec_list -> declaration .)
    SKIP            reduce using rule 46 (dec_list -> declaration .)
    BREAK           reduce using rule 46 (dec_list -> declaration .)
    BEGIN           reduce using rule 46 (dec_list -> declaration .)
    IF              reduce using rule 46 (dec_list -> declaration .)


state 62

    (31) declaration -> ubication . ASSIGN expression
    (32) declaration -> ubication . COLONEQUAL expression

    ASSIGN          shift and go to state 96
    COLONEQUAL      shift and go to state 97


state 63

    (37) declaration -> ID . LPAREN expressions_listop RPAREN
    (49) ubication -> ID .
    (50) ubication -> ID . LSBRACKET expression RSBRACKET

    LPAREN          shift and go to state 99
    ASSIGN          reduce using rule 49 (ubication -> ID .)
    COLONEQUAL      reduce using rule 49 (ubication -> ID .)
    LSBRACKET       shift and go to state 98


state 64

    (42) ifthen -> IF . relation THEN declaration
    (44) ifthen -> IF . relation declaration
    (45) ifthen -> IF . relation declaration ELSE declaration
    (43) ifthenelse -> IF . relation THEN declaration ELSE declaration
    (68) relation -> . expression LT expression
    (69) relation -> . expression LE expression
    (70) relation -> . expression GT expression
    (71) relation -> . expression GE expression
    (72) relation -> . expression EQ expression
    (73) relation -> . expression NE expression
    (74) relation -> . relation AND relation
    (75) relation -> . relation OR relation
    (76) relation -> . NOT relation
    (77) relation -> . LPAREN relation RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    NOT             shift and go to state 87
    LPAREN          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 88
    relation                       shift and go to state 100
    number                         shift and go to state 43

state 65

    (39) declaration -> BREAK .

    END             reduce using rule 39 (declaration -> BREAK .)
    SEMICOLON       reduce using rule 39 (declaration -> BREAK .)
    WHILE           reduce using rule 39 (declaration -> BREAK .)
    PRINT           reduce using rule 39 (declaration -> BREAK .)
    WRITE           reduce using rule 39 (declaration -> BREAK .)
    READ            reduce using rule 39 (declaration -> BREAK .)
    RETURN          reduce using rule 39 (declaration -> BREAK .)
    ID              reduce using rule 39 (declaration -> BREAK .)
    SKIP            reduce using rule 39 (declaration -> BREAK .)
    BREAK           reduce using rule 39 (declaration -> BREAK .)
    BEGIN           reduce using rule 39 (declaration -> BREAK .)
    IF              reduce using rule 39 (declaration -> BREAK .)
    ELSE            reduce using rule 39 (declaration -> BREAK .)


state 66

    (8) function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op . BEGIN dec_list SEMICOLON END

    BEGIN           shift and go to state 101


state 67

    (5) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op . BEGIN dec_list END
    (6) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op . BEGIN dec_list SEMICOLON END

    BEGIN           shift and go to state 102


state 68

    (20) locals -> locals function SEMICOLON .

    ID              reduce using rule 20 (locals -> locals function SEMICOLON .)
    FUNC            reduce using rule 20 (locals -> locals function SEMICOLON .)
    BEGIN           reduce using rule 20 (locals -> locals function SEMICOLON .)


state 69

    (19) locals -> locals var_dec SEMICOLON .

    ID              reduce using rule 19 (locals -> locals var_dec SEMICOLON .)
    FUNC            reduce using rule 19 (locals -> locals var_dec SEMICOLON .)
    BEGIN           reduce using rule 19 (locals -> locals var_dec SEMICOLON .)


state 70

    (63) expression -> FLOAT_TYPE LPAREN . expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 103
    number                         shift and go to state 43

state 71

    (62) expression -> INT_TYPE LPAREN . expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 104
    number                         shift and go to state 43

state 72

    (56) expression -> PLUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 56 (expression -> PLUS expression .)
    PLUS            reduce using rule 56 (expression -> PLUS expression .)
    MINUS           reduce using rule 56 (expression -> PLUS expression .)
    LT              reduce using rule 56 (expression -> PLUS expression .)
    LE              reduce using rule 56 (expression -> PLUS expression .)
    GT              reduce using rule 56 (expression -> PLUS expression .)
    GE              reduce using rule 56 (expression -> PLUS expression .)
    EQ              reduce using rule 56 (expression -> PLUS expression .)
    NE              reduce using rule 56 (expression -> PLUS expression .)
    COMMA           reduce using rule 56 (expression -> PLUS expression .)
    DO              reduce using rule 56 (expression -> PLUS expression .)
    AND             reduce using rule 56 (expression -> PLUS expression .)
    OR              reduce using rule 56 (expression -> PLUS expression .)
    THEN            reduce using rule 56 (expression -> PLUS expression .)
    WHILE           reduce using rule 56 (expression -> PLUS expression .)
    PRINT           reduce using rule 56 (expression -> PLUS expression .)
    WRITE           reduce using rule 56 (expression -> PLUS expression .)
    READ            reduce using rule 56 (expression -> PLUS expression .)
    RETURN          reduce using rule 56 (expression -> PLUS expression .)
    ID              reduce using rule 56 (expression -> PLUS expression .)
    SKIP            reduce using rule 56 (expression -> PLUS expression .)
    BREAK           reduce using rule 56 (expression -> PLUS expression .)
    BEGIN           reduce using rule 56 (expression -> PLUS expression .)
    IF              reduce using rule 56 (expression -> PLUS expression .)
    RSBRACKET       reduce using rule 56 (expression -> PLUS expression .)
    END             reduce using rule 56 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 56 (expression -> PLUS expression .)
    ELSE            reduce using rule 56 (expression -> PLUS expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76

  ! TIMES           [ reduce using rule 56 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 73

    (57) expression -> LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 74

    (60) expression -> ID LSBRACKET . expression RSBRACKET
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 106
    number                         shift and go to state 43

state 75

    (58) expression -> ID LPAREN . expressions_listop RPAREN
    (64) expressions_listop -> . expressions_list
    (65) expressions_listop -> . empty
    (66) expressions_list -> . expression
    (67) expressions_list -> . expressions_list COMMA expression
    (80) empty -> .
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    RPAREN          reduce using rule 80 (empty -> .)
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 109
    expressions_listop             shift and go to state 108
    expressions_list               shift and go to state 107
    number                         shift and go to state 43
    empty                          shift and go to state 110

state 76

    (54) expression -> expression DIVIDE . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 111
    number                         shift and go to state 43

state 77

    (53) expression -> expression TIMES . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 112
    number                         shift and go to state 43

state 78

    (27) type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .

    error           reduce using rule 27 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    ID              reduce using rule 27 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    FUNC            reduce using rule 27 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    BEGIN           reduce using rule 27 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    COMMA           reduce using rule 27 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    RPAREN          reduce using rule 27 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    SEMICOLON       reduce using rule 27 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)


state 79

    (51) expression -> expression PLUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 113
    number                         shift and go to state 43

state 80

    (52) expression -> expression MINUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 114
    number                         shift and go to state 43

state 81

    (55) expression -> MINUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 55 (expression -> MINUS expression .)
    PLUS            reduce using rule 55 (expression -> MINUS expression .)
    MINUS           reduce using rule 55 (expression -> MINUS expression .)
    TIMES           reduce using rule 55 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 55 (expression -> MINUS expression .)
    LT              reduce using rule 55 (expression -> MINUS expression .)
    LE              reduce using rule 55 (expression -> MINUS expression .)
    GT              reduce using rule 55 (expression -> MINUS expression .)
    GE              reduce using rule 55 (expression -> MINUS expression .)
    EQ              reduce using rule 55 (expression -> MINUS expression .)
    NE              reduce using rule 55 (expression -> MINUS expression .)
    COMMA           reduce using rule 55 (expression -> MINUS expression .)
    DO              reduce using rule 55 (expression -> MINUS expression .)
    AND             reduce using rule 55 (expression -> MINUS expression .)
    OR              reduce using rule 55 (expression -> MINUS expression .)
    THEN            reduce using rule 55 (expression -> MINUS expression .)
    WHILE           reduce using rule 55 (expression -> MINUS expression .)
    PRINT           reduce using rule 55 (expression -> MINUS expression .)
    WRITE           reduce using rule 55 (expression -> MINUS expression .)
    READ            reduce using rule 55 (expression -> MINUS expression .)
    RETURN          reduce using rule 55 (expression -> MINUS expression .)
    ID              reduce using rule 55 (expression -> MINUS expression .)
    SKIP            reduce using rule 55 (expression -> MINUS expression .)
    BREAK           reduce using rule 55 (expression -> MINUS expression .)
    BEGIN           reduce using rule 55 (expression -> MINUS expression .)
    IF              reduce using rule 55 (expression -> MINUS expression .)
    RSBRACKET       reduce using rule 55 (expression -> MINUS expression .)
    END             reduce using rule 55 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 55 (expression -> MINUS expression .)
    ELSE            reduce using rule 55 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]
  ! TIMES           [ shift and go to state 77 ]
  ! DIVIDE          [ shift and go to state 76 ]


state 82

    (26) type -> INT_TYPE LSBRACKET expression RSBRACKET .

    error           reduce using rule 26 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    ID              reduce using rule 26 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    FUNC            reduce using rule 26 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    BEGIN           reduce using rule 26 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    COMMA           reduce using rule 26 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    RPAREN          reduce using rule 26 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    SEMICOLON       reduce using rule 26 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)


state 83

    (36) declaration -> RETURN expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    END             reduce using rule 36 (declaration -> RETURN expression .)
    SEMICOLON       reduce using rule 36 (declaration -> RETURN expression .)
    WHILE           reduce using rule 36 (declaration -> RETURN expression .)
    PRINT           reduce using rule 36 (declaration -> RETURN expression .)
    WRITE           reduce using rule 36 (declaration -> RETURN expression .)
    READ            reduce using rule 36 (declaration -> RETURN expression .)
    RETURN          reduce using rule 36 (declaration -> RETURN expression .)
    ID              reduce using rule 36 (declaration -> RETURN expression .)
    SKIP            reduce using rule 36 (declaration -> RETURN expression .)
    BREAK           reduce using rule 36 (declaration -> RETURN expression .)
    BEGIN           reduce using rule 36 (declaration -> RETURN expression .)
    IF              reduce using rule 36 (declaration -> RETURN expression .)
    ELSE            reduce using rule 36 (declaration -> RETURN expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 84

    (35) declaration -> READ LPAREN . ubication RPAREN
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    ID              shift and go to state 116

    ubication                      shift and go to state 115

state 85

    (28) declaration -> WHILE relation . DO declaration
    (74) relation -> relation . AND relation
    (75) relation -> relation . OR relation

    DO              shift and go to state 118
    AND             shift and go to state 117
    OR              shift and go to state 119


state 86

    (77) relation -> LPAREN . relation RPAREN
    (57) expression -> LPAREN . expression RPAREN
    (68) relation -> . expression LT expression
    (69) relation -> . expression LE expression
    (70) relation -> . expression GT expression
    (71) relation -> . expression GE expression
    (72) relation -> . expression EQ expression
    (73) relation -> . expression NE expression
    (74) relation -> . relation AND relation
    (75) relation -> . relation OR relation
    (76) relation -> . NOT relation
    (77) relation -> . LPAREN relation RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    NOT             shift and go to state 87
    LPAREN          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 121
    relation                       shift and go to state 120
    number                         shift and go to state 43

state 87

    (76) relation -> NOT . relation
    (68) relation -> . expression LT expression
    (69) relation -> . expression LE expression
    (70) relation -> . expression GT expression
    (71) relation -> . expression GE expression
    (72) relation -> . expression EQ expression
    (73) relation -> . expression NE expression
    (74) relation -> . relation AND relation
    (75) relation -> . relation OR relation
    (76) relation -> . NOT relation
    (77) relation -> . LPAREN relation RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    NOT             shift and go to state 87
    LPAREN          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 88
    relation                       shift and go to state 122
    number                         shift and go to state 43

state 88

    (68) relation -> expression . LT expression
    (69) relation -> expression . LE expression
    (70) relation -> expression . GT expression
    (71) relation -> expression . GE expression
    (72) relation -> expression . EQ expression
    (73) relation -> expression . NE expression
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    LT              shift and go to state 126
    LE              shift and go to state 123
    GT              shift and go to state 127
    GE              shift and go to state 124
    EQ              shift and go to state 128
    NE              shift and go to state 125
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 89

    (7) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON . END
    (47) dec_list -> dec_list SEMICOLON . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 129
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 130
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 90

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .

    SEMICOLON       reduce using rule 4 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .)
    FUNC            reduce using rule 4 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .)
    $end            reduce using rule 4 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .)


state 91

    (48) dec_list -> dec_list declaration .

    END             reduce using rule 48 (dec_list -> dec_list declaration .)
    SEMICOLON       reduce using rule 48 (dec_list -> dec_list declaration .)
    WHILE           reduce using rule 48 (dec_list -> dec_list declaration .)
    PRINT           reduce using rule 48 (dec_list -> dec_list declaration .)
    WRITE           reduce using rule 48 (dec_list -> dec_list declaration .)
    READ            reduce using rule 48 (dec_list -> dec_list declaration .)
    RETURN          reduce using rule 48 (dec_list -> dec_list declaration .)
    ID              reduce using rule 48 (dec_list -> dec_list declaration .)
    SKIP            reduce using rule 48 (dec_list -> dec_list declaration .)
    BREAK           reduce using rule 48 (dec_list -> dec_list declaration .)
    BEGIN           reduce using rule 48 (dec_list -> dec_list declaration .)
    IF              reduce using rule 48 (dec_list -> dec_list declaration .)


state 92

    (33) declaration -> PRINT LPAREN . STRING RPAREN

    STRING          shift and go to state 131


state 93

    (40) declaration -> BEGIN dec_list . END
    (47) dec_list -> dec_list . SEMICOLON declaration
    (48) dec_list -> dec_list . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 133
    SEMICOLON       shift and go to state 132
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 91
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 94

    (41) declaration -> BEGIN END .

    END             reduce using rule 41 (declaration -> BEGIN END .)
    SEMICOLON       reduce using rule 41 (declaration -> BEGIN END .)
    WHILE           reduce using rule 41 (declaration -> BEGIN END .)
    PRINT           reduce using rule 41 (declaration -> BEGIN END .)
    WRITE           reduce using rule 41 (declaration -> BEGIN END .)
    READ            reduce using rule 41 (declaration -> BEGIN END .)
    RETURN          reduce using rule 41 (declaration -> BEGIN END .)
    ID              reduce using rule 41 (declaration -> BEGIN END .)
    SKIP            reduce using rule 41 (declaration -> BEGIN END .)
    BREAK           reduce using rule 41 (declaration -> BEGIN END .)
    BEGIN           reduce using rule 41 (declaration -> BEGIN END .)
    IF              reduce using rule 41 (declaration -> BEGIN END .)
    ELSE            reduce using rule 41 (declaration -> BEGIN END .)


state 95

    (34) declaration -> WRITE LPAREN . expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 134
    number                         shift and go to state 43

state 96

    (31) declaration -> ubication ASSIGN . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 135
    number                         shift and go to state 43

state 97

    (32) declaration -> ubication COLONEQUAL . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 136
    number                         shift and go to state 43

state 98

    (50) ubication -> ID LSBRACKET . expression RSBRACKET
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 137
    number                         shift and go to state 43

state 99

    (37) declaration -> ID LPAREN . expressions_listop RPAREN
    (64) expressions_listop -> . expressions_list
    (65) expressions_listop -> . empty
    (66) expressions_list -> . expression
    (67) expressions_list -> . expressions_list COMMA expression
    (80) empty -> .
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    RPAREN          reduce using rule 80 (empty -> .)
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 109
    expressions_listop             shift and go to state 138
    expressions_list               shift and go to state 107
    number                         shift and go to state 43
    empty                          shift and go to state 110

state 100

    (42) ifthen -> IF relation . THEN declaration
    (44) ifthen -> IF relation . declaration
    (45) ifthen -> IF relation . declaration ELSE declaration
    (43) ifthenelse -> IF relation . THEN declaration ELSE declaration
    (74) relation -> relation . AND relation
    (75) relation -> relation . OR relation
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    THEN            shift and go to state 139
    AND             shift and go to state 117
    OR              shift and go to state 119
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 140
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 101

    (8) function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN . dec_list SEMICOLON END
    (46) dec_list -> . declaration
    (47) dec_list -> . dec_list SEMICOLON declaration
    (48) dec_list -> . dec_list declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    dec_list                       shift and go to state 141
    declaration                    shift and go to state 61
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 102

    (5) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN . dec_list END
    (6) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN . dec_list SEMICOLON END
    (46) dec_list -> . declaration
    (47) dec_list -> . dec_list SEMICOLON declaration
    (48) dec_list -> . dec_list declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    dec_list                       shift and go to state 142
    declaration                    shift and go to state 61
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 103

    (63) expression -> FLOAT_TYPE LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 143
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 104

    (62) expression -> INT_TYPE LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 144
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 105

    (57) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    WRITE           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    READ            reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    SKIP            reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    BEGIN           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    RSBRACKET       reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 57 (expression -> LPAREN expression RPAREN .)


state 106

    (60) expression -> ID LSBRACKET expression . RSBRACKET
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 145
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 107

    (64) expressions_listop -> expressions_list .
    (67) expressions_list -> expressions_list . COMMA expression

    RPAREN          reduce using rule 64 (expressions_listop -> expressions_list .)
    COMMA           shift and go to state 146


state 108

    (58) expression -> ID LPAREN expressions_listop . RPAREN

    RPAREN          shift and go to state 147


state 109

    (66) expressions_list -> expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 66 (expressions_list -> expression .)
    RPAREN          reduce using rule 66 (expressions_list -> expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 110

    (65) expressions_listop -> empty .

    RPAREN          reduce using rule 65 (expressions_listop -> empty .)


state 111

    (54) expression -> expression DIVIDE expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 54 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 54 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 54 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 54 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 54 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 54 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 54 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 54 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 54 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 54 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 54 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 54 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 54 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 54 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 54 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 54 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 54 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 54 (expression -> expression DIVIDE expression .)
    WRITE           reduce using rule 54 (expression -> expression DIVIDE expression .)
    READ            reduce using rule 54 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 54 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 54 (expression -> expression DIVIDE expression .)
    SKIP            reduce using rule 54 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 54 (expression -> expression DIVIDE expression .)
    BEGIN           reduce using rule 54 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 54 (expression -> expression DIVIDE expression .)
    RSBRACKET       reduce using rule 54 (expression -> expression DIVIDE expression .)
    END             reduce using rule 54 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 54 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]
  ! TIMES           [ shift and go to state 77 ]
  ! DIVIDE          [ shift and go to state 76 ]


state 112

    (53) expression -> expression TIMES expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 53 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 53 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 53 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 53 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 53 (expression -> expression TIMES expression .)
    LT              reduce using rule 53 (expression -> expression TIMES expression .)
    LE              reduce using rule 53 (expression -> expression TIMES expression .)
    GT              reduce using rule 53 (expression -> expression TIMES expression .)
    GE              reduce using rule 53 (expression -> expression TIMES expression .)
    EQ              reduce using rule 53 (expression -> expression TIMES expression .)
    NE              reduce using rule 53 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 53 (expression -> expression TIMES expression .)
    DO              reduce using rule 53 (expression -> expression TIMES expression .)
    AND             reduce using rule 53 (expression -> expression TIMES expression .)
    OR              reduce using rule 53 (expression -> expression TIMES expression .)
    THEN            reduce using rule 53 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 53 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 53 (expression -> expression TIMES expression .)
    WRITE           reduce using rule 53 (expression -> expression TIMES expression .)
    READ            reduce using rule 53 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 53 (expression -> expression TIMES expression .)
    ID              reduce using rule 53 (expression -> expression TIMES expression .)
    SKIP            reduce using rule 53 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 53 (expression -> expression TIMES expression .)
    BEGIN           reduce using rule 53 (expression -> expression TIMES expression .)
    IF              reduce using rule 53 (expression -> expression TIMES expression .)
    RSBRACKET       reduce using rule 53 (expression -> expression TIMES expression .)
    END             reduce using rule 53 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 53 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]
  ! TIMES           [ shift and go to state 77 ]
  ! DIVIDE          [ shift and go to state 76 ]


state 113

    (51) expression -> expression PLUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 51 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 51 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 51 (expression -> expression PLUS expression .)
    LT              reduce using rule 51 (expression -> expression PLUS expression .)
    LE              reduce using rule 51 (expression -> expression PLUS expression .)
    GT              reduce using rule 51 (expression -> expression PLUS expression .)
    GE              reduce using rule 51 (expression -> expression PLUS expression .)
    EQ              reduce using rule 51 (expression -> expression PLUS expression .)
    NE              reduce using rule 51 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 51 (expression -> expression PLUS expression .)
    DO              reduce using rule 51 (expression -> expression PLUS expression .)
    AND             reduce using rule 51 (expression -> expression PLUS expression .)
    OR              reduce using rule 51 (expression -> expression PLUS expression .)
    THEN            reduce using rule 51 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 51 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 51 (expression -> expression PLUS expression .)
    WRITE           reduce using rule 51 (expression -> expression PLUS expression .)
    READ            reduce using rule 51 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 51 (expression -> expression PLUS expression .)
    ID              reduce using rule 51 (expression -> expression PLUS expression .)
    SKIP            reduce using rule 51 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 51 (expression -> expression PLUS expression .)
    BEGIN           reduce using rule 51 (expression -> expression PLUS expression .)
    IF              reduce using rule 51 (expression -> expression PLUS expression .)
    RSBRACKET       reduce using rule 51 (expression -> expression PLUS expression .)
    END             reduce using rule 51 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 51 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76

  ! TIMES           [ reduce using rule 51 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 114

    (52) expression -> expression MINUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 52 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 52 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 52 (expression -> expression MINUS expression .)
    LT              reduce using rule 52 (expression -> expression MINUS expression .)
    LE              reduce using rule 52 (expression -> expression MINUS expression .)
    GT              reduce using rule 52 (expression -> expression MINUS expression .)
    GE              reduce using rule 52 (expression -> expression MINUS expression .)
    EQ              reduce using rule 52 (expression -> expression MINUS expression .)
    NE              reduce using rule 52 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 52 (expression -> expression MINUS expression .)
    DO              reduce using rule 52 (expression -> expression MINUS expression .)
    AND             reduce using rule 52 (expression -> expression MINUS expression .)
    OR              reduce using rule 52 (expression -> expression MINUS expression .)
    THEN            reduce using rule 52 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 52 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 52 (expression -> expression MINUS expression .)
    WRITE           reduce using rule 52 (expression -> expression MINUS expression .)
    READ            reduce using rule 52 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 52 (expression -> expression MINUS expression .)
    ID              reduce using rule 52 (expression -> expression MINUS expression .)
    SKIP            reduce using rule 52 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 52 (expression -> expression MINUS expression .)
    BEGIN           reduce using rule 52 (expression -> expression MINUS expression .)
    IF              reduce using rule 52 (expression -> expression MINUS expression .)
    RSBRACKET       reduce using rule 52 (expression -> expression MINUS expression .)
    END             reduce using rule 52 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 52 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76

  ! TIMES           [ reduce using rule 52 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 115

    (35) declaration -> READ LPAREN ubication . RPAREN

    RPAREN          shift and go to state 148


state 116

    (49) ubication -> ID .
    (50) ubication -> ID . LSBRACKET expression RSBRACKET

    RPAREN          reduce using rule 49 (ubication -> ID .)
    LSBRACKET       shift and go to state 98


state 117

    (74) relation -> relation AND . relation
    (68) relation -> . expression LT expression
    (69) relation -> . expression LE expression
    (70) relation -> . expression GT expression
    (71) relation -> . expression GE expression
    (72) relation -> . expression EQ expression
    (73) relation -> . expression NE expression
    (74) relation -> . relation AND relation
    (75) relation -> . relation OR relation
    (76) relation -> . NOT relation
    (77) relation -> . LPAREN relation RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    NOT             shift and go to state 87
    LPAREN          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 88
    relation                       shift and go to state 149
    number                         shift and go to state 43

state 118

    (28) declaration -> WHILE relation DO . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 150
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 119

    (75) relation -> relation OR . relation
    (68) relation -> . expression LT expression
    (69) relation -> . expression LE expression
    (70) relation -> . expression GT expression
    (71) relation -> . expression GE expression
    (72) relation -> . expression EQ expression
    (73) relation -> . expression NE expression
    (74) relation -> . relation AND relation
    (75) relation -> . relation OR relation
    (76) relation -> . NOT relation
    (77) relation -> . LPAREN relation RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    NOT             shift and go to state 87
    LPAREN          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 88
    relation                       shift and go to state 151
    number                         shift and go to state 43

state 120

    (77) relation -> LPAREN relation . RPAREN
    (74) relation -> relation . AND relation
    (75) relation -> relation . OR relation

    RPAREN          shift and go to state 152
    AND             shift and go to state 117
    OR              shift and go to state 119


state 121

    (57) expression -> LPAREN expression . RPAREN
    (68) relation -> expression . LT expression
    (69) relation -> expression . LE expression
    (70) relation -> expression . GT expression
    (71) relation -> expression . GE expression
    (72) relation -> expression . EQ expression
    (73) relation -> expression . NE expression
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 105
    LT              shift and go to state 126
    LE              shift and go to state 123
    GT              shift and go to state 127
    GE              shift and go to state 124
    EQ              shift and go to state 128
    NE              shift and go to state 125
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 122

    (76) relation -> NOT relation .
    (74) relation -> relation . AND relation
    (75) relation -> relation . OR relation

    DO              reduce using rule 76 (relation -> NOT relation .)
    AND             reduce using rule 76 (relation -> NOT relation .)
    OR              reduce using rule 76 (relation -> NOT relation .)
    THEN            reduce using rule 76 (relation -> NOT relation .)
    WHILE           reduce using rule 76 (relation -> NOT relation .)
    PRINT           reduce using rule 76 (relation -> NOT relation .)
    WRITE           reduce using rule 76 (relation -> NOT relation .)
    READ            reduce using rule 76 (relation -> NOT relation .)
    RETURN          reduce using rule 76 (relation -> NOT relation .)
    ID              reduce using rule 76 (relation -> NOT relation .)
    SKIP            reduce using rule 76 (relation -> NOT relation .)
    BREAK           reduce using rule 76 (relation -> NOT relation .)
    BEGIN           reduce using rule 76 (relation -> NOT relation .)
    IF              reduce using rule 76 (relation -> NOT relation .)
    RPAREN          reduce using rule 76 (relation -> NOT relation .)

  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 119 ]


state 123

    (69) relation -> expression LE . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 153
    number                         shift and go to state 43

state 124

    (71) relation -> expression GE . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 154
    number                         shift and go to state 43

state 125

    (73) relation -> expression NE . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 155
    number                         shift and go to state 43

state 126

    (68) relation -> expression LT . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 156
    number                         shift and go to state 43

state 127

    (70) relation -> expression GT . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 157
    number                         shift and go to state 43

state 128

    (72) relation -> expression EQ . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 158
    number                         shift and go to state 43

state 129

    (7) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .

    SEMICOLON       reduce using rule 7 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .)
    FUNC            reduce using rule 7 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .)
    $end            reduce using rule 7 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .)


state 130

    (47) dec_list -> dec_list SEMICOLON declaration .

    END             reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    SEMICOLON       reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    WHILE           reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    PRINT           reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    WRITE           reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    READ            reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    RETURN          reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    ID              reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    SKIP            reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    BREAK           reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    BEGIN           reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)
    IF              reduce using rule 47 (dec_list -> dec_list SEMICOLON declaration .)


state 131

    (33) declaration -> PRINT LPAREN STRING . RPAREN

    RPAREN          shift and go to state 159


state 132

    (47) dec_list -> dec_list SEMICOLON . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 130
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 133

    (40) declaration -> BEGIN dec_list END .

    END             reduce using rule 40 (declaration -> BEGIN dec_list END .)
    SEMICOLON       reduce using rule 40 (declaration -> BEGIN dec_list END .)
    WHILE           reduce using rule 40 (declaration -> BEGIN dec_list END .)
    PRINT           reduce using rule 40 (declaration -> BEGIN dec_list END .)
    WRITE           reduce using rule 40 (declaration -> BEGIN dec_list END .)
    READ            reduce using rule 40 (declaration -> BEGIN dec_list END .)
    RETURN          reduce using rule 40 (declaration -> BEGIN dec_list END .)
    ID              reduce using rule 40 (declaration -> BEGIN dec_list END .)
    SKIP            reduce using rule 40 (declaration -> BEGIN dec_list END .)
    BREAK           reduce using rule 40 (declaration -> BEGIN dec_list END .)
    BEGIN           reduce using rule 40 (declaration -> BEGIN dec_list END .)
    IF              reduce using rule 40 (declaration -> BEGIN dec_list END .)
    ELSE            reduce using rule 40 (declaration -> BEGIN dec_list END .)


state 134

    (34) declaration -> WRITE LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 135

    (31) declaration -> ubication ASSIGN expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    END             reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    SEMICOLON       reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    WHILE           reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    PRINT           reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    WRITE           reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    READ            reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    RETURN          reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    ID              reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    SKIP            reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    BREAK           reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    BEGIN           reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    IF              reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    ELSE            reduce using rule 31 (declaration -> ubication ASSIGN expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 136

    (32) declaration -> ubication COLONEQUAL expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    END             reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    SEMICOLON       reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    WHILE           reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    PRINT           reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    WRITE           reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    READ            reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    RETURN          reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    ID              reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    SKIP            reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    BREAK           reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    BEGIN           reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    IF              reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    ELSE            reduce using rule 32 (declaration -> ubication COLONEQUAL expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 137

    (50) ubication -> ID LSBRACKET expression . RSBRACKET
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 161
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 138

    (37) declaration -> ID LPAREN expressions_listop . RPAREN

    RPAREN          shift and go to state 162


state 139

    (42) ifthen -> IF relation THEN . declaration
    (43) ifthenelse -> IF relation THEN . declaration ELSE declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 163
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 140

    (44) ifthen -> IF relation declaration .
    (45) ifthen -> IF relation declaration . ELSE declaration

    END             reduce using rule 44 (ifthen -> IF relation declaration .)
    SEMICOLON       reduce using rule 44 (ifthen -> IF relation declaration .)
    WHILE           reduce using rule 44 (ifthen -> IF relation declaration .)
    PRINT           reduce using rule 44 (ifthen -> IF relation declaration .)
    WRITE           reduce using rule 44 (ifthen -> IF relation declaration .)
    READ            reduce using rule 44 (ifthen -> IF relation declaration .)
    RETURN          reduce using rule 44 (ifthen -> IF relation declaration .)
    ID              reduce using rule 44 (ifthen -> IF relation declaration .)
    SKIP            reduce using rule 44 (ifthen -> IF relation declaration .)
    BREAK           reduce using rule 44 (ifthen -> IF relation declaration .)
    BEGIN           reduce using rule 44 (ifthen -> IF relation declaration .)
    IF              reduce using rule 44 (ifthen -> IF relation declaration .)
    ELSE            shift and go to state 164

  ! ELSE            [ reduce using rule 44 (ifthen -> IF relation declaration .) ]


state 141

    (8) function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list . SEMICOLON END
    (47) dec_list -> dec_list . SEMICOLON declaration
    (48) dec_list -> dec_list . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    SEMICOLON       shift and go to state 165
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 91
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 142

    (5) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list . END
    (6) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list . SEMICOLON END
    (47) dec_list -> dec_list . SEMICOLON declaration
    (48) dec_list -> dec_list . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 167
    SEMICOLON       shift and go to state 166
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 91
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 143

    (63) expression -> FLOAT_TYPE LPAREN expression RPAREN .

    RPAREN          reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    PLUS            reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    MINUS           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    TIMES           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    LT              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    LE              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    GT              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    GE              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    EQ              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    NE              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    COMMA           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    DO              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    AND             reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    OR              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    THEN            reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    WHILE           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    PRINT           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    WRITE           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    READ            reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    RETURN          reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    ID              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    SKIP            reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    BREAK           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    BEGIN           reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    IF              reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    RSBRACKET       reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    END             reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    ELSE            reduce using rule 63 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)


state 144

    (62) expression -> INT_TYPE LPAREN expression RPAREN .

    RPAREN          reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    PLUS            reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    MINUS           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    TIMES           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    LT              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    LE              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    GT              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    GE              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    EQ              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    NE              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    COMMA           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    DO              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    AND             reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    OR              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    THEN            reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    WHILE           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    PRINT           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    WRITE           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    READ            reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    RETURN          reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    ID              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    SKIP            reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    BREAK           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    BEGIN           reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    IF              reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    RSBRACKET       reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    END             reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)
    ELSE            reduce using rule 62 (expression -> INT_TYPE LPAREN expression RPAREN .)


state 145

    (60) expression -> ID LSBRACKET expression RSBRACKET .

    RPAREN          reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    PLUS            reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    MINUS           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    TIMES           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    DIVIDE          reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    LT              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    LE              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    GT              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    GE              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    EQ              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    NE              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    COMMA           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    DO              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    AND             reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    OR              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    THEN            reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    WHILE           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    PRINT           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    WRITE           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    READ            reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    RETURN          reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    ID              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    SKIP            reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    BREAK           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    BEGIN           reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    IF              reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    RSBRACKET       reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    END             reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    SEMICOLON       reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)
    ELSE            reduce using rule 60 (expression -> ID LSBRACKET expression RSBRACKET .)


state 146

    (67) expressions_list -> expressions_list COMMA . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . MINUS expression
    (56) expression -> . PLUS expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . ID LPAREN expressions_listop RPAREN
    (59) expression -> . ID
    (60) expression -> . ID LSBRACKET expression RSBRACKET
    (61) expression -> . number
    (62) expression -> . INT_TYPE LPAREN expression RPAREN
    (63) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (78) number -> . INTEGER
    (79) number -> . FLOAT

    MINUS           shift and go to state 49
    PLUS            shift and go to state 44
    LPAREN          shift and go to state 45
    ID              shift and go to state 47
    INT_TYPE        shift and go to state 41
    FLOAT_TYPE      shift and go to state 40
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 42

    expression                     shift and go to state 168
    number                         shift and go to state 43

state 147

    (58) expression -> ID LPAREN expressions_listop RPAREN .

    RPAREN          reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    PLUS            reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    MINUS           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    TIMES           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    DIVIDE          reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    LT              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    LE              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    GT              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    GE              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    EQ              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    NE              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    COMMA           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    DO              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    AND             reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    OR              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    THEN            reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    WHILE           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    PRINT           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    WRITE           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    READ            reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    RETURN          reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    ID              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    SKIP            reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    BREAK           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    BEGIN           reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    IF              reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    RSBRACKET       reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    END             reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    SEMICOLON       reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)
    ELSE            reduce using rule 58 (expression -> ID LPAREN expressions_listop RPAREN .)


state 148

    (35) declaration -> READ LPAREN ubication RPAREN .

    END             reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    SEMICOLON       reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    WHILE           reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    PRINT           reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    WRITE           reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    READ            reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    RETURN          reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    ID              reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    SKIP            reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    BREAK           reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    BEGIN           reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    IF              reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)
    ELSE            reduce using rule 35 (declaration -> READ LPAREN ubication RPAREN .)


state 149

    (74) relation -> relation AND relation .
    (74) relation -> relation . AND relation
    (75) relation -> relation . OR relation

    DO              reduce using rule 74 (relation -> relation AND relation .)
    AND             reduce using rule 74 (relation -> relation AND relation .)
    OR              reduce using rule 74 (relation -> relation AND relation .)
    THEN            reduce using rule 74 (relation -> relation AND relation .)
    WHILE           reduce using rule 74 (relation -> relation AND relation .)
    PRINT           reduce using rule 74 (relation -> relation AND relation .)
    WRITE           reduce using rule 74 (relation -> relation AND relation .)
    READ            reduce using rule 74 (relation -> relation AND relation .)
    RETURN          reduce using rule 74 (relation -> relation AND relation .)
    ID              reduce using rule 74 (relation -> relation AND relation .)
    SKIP            reduce using rule 74 (relation -> relation AND relation .)
    BREAK           reduce using rule 74 (relation -> relation AND relation .)
    BEGIN           reduce using rule 74 (relation -> relation AND relation .)
    IF              reduce using rule 74 (relation -> relation AND relation .)
    RPAREN          reduce using rule 74 (relation -> relation AND relation .)

  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 119 ]


state 150

    (28) declaration -> WHILE relation DO declaration .

    END             reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    SEMICOLON       reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    WHILE           reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    PRINT           reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    WRITE           reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    READ            reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    RETURN          reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    ID              reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    SKIP            reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    BREAK           reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    BEGIN           reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    IF              reduce using rule 28 (declaration -> WHILE relation DO declaration .)
    ELSE            reduce using rule 28 (declaration -> WHILE relation DO declaration .)


state 151

    (75) relation -> relation OR relation .
    (74) relation -> relation . AND relation
    (75) relation -> relation . OR relation

    DO              reduce using rule 75 (relation -> relation OR relation .)
    OR              reduce using rule 75 (relation -> relation OR relation .)
    THEN            reduce using rule 75 (relation -> relation OR relation .)
    WHILE           reduce using rule 75 (relation -> relation OR relation .)
    PRINT           reduce using rule 75 (relation -> relation OR relation .)
    WRITE           reduce using rule 75 (relation -> relation OR relation .)
    READ            reduce using rule 75 (relation -> relation OR relation .)
    RETURN          reduce using rule 75 (relation -> relation OR relation .)
    ID              reduce using rule 75 (relation -> relation OR relation .)
    SKIP            reduce using rule 75 (relation -> relation OR relation .)
    BREAK           reduce using rule 75 (relation -> relation OR relation .)
    BEGIN           reduce using rule 75 (relation -> relation OR relation .)
    IF              reduce using rule 75 (relation -> relation OR relation .)
    RPAREN          reduce using rule 75 (relation -> relation OR relation .)
    AND             shift and go to state 117

  ! AND             [ reduce using rule 75 (relation -> relation OR relation .) ]
  ! OR              [ shift and go to state 119 ]


state 152

    (77) relation -> LPAREN relation RPAREN .

    DO              reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    AND             reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    OR              reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    THEN            reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    WHILE           reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    PRINT           reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    WRITE           reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    READ            reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    RETURN          reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    ID              reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    SKIP            reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    BREAK           reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    BEGIN           reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    IF              reduce using rule 77 (relation -> LPAREN relation RPAREN .)
    RPAREN          reduce using rule 77 (relation -> LPAREN relation RPAREN .)


state 153

    (69) relation -> expression LE expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    DO              reduce using rule 69 (relation -> expression LE expression .)
    AND             reduce using rule 69 (relation -> expression LE expression .)
    OR              reduce using rule 69 (relation -> expression LE expression .)
    THEN            reduce using rule 69 (relation -> expression LE expression .)
    WHILE           reduce using rule 69 (relation -> expression LE expression .)
    PRINT           reduce using rule 69 (relation -> expression LE expression .)
    WRITE           reduce using rule 69 (relation -> expression LE expression .)
    READ            reduce using rule 69 (relation -> expression LE expression .)
    RETURN          reduce using rule 69 (relation -> expression LE expression .)
    ID              reduce using rule 69 (relation -> expression LE expression .)
    SKIP            reduce using rule 69 (relation -> expression LE expression .)
    BREAK           reduce using rule 69 (relation -> expression LE expression .)
    BEGIN           reduce using rule 69 (relation -> expression LE expression .)
    IF              reduce using rule 69 (relation -> expression LE expression .)
    RPAREN          reduce using rule 69 (relation -> expression LE expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 154

    (71) relation -> expression GE expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    DO              reduce using rule 71 (relation -> expression GE expression .)
    AND             reduce using rule 71 (relation -> expression GE expression .)
    OR              reduce using rule 71 (relation -> expression GE expression .)
    THEN            reduce using rule 71 (relation -> expression GE expression .)
    WHILE           reduce using rule 71 (relation -> expression GE expression .)
    PRINT           reduce using rule 71 (relation -> expression GE expression .)
    WRITE           reduce using rule 71 (relation -> expression GE expression .)
    READ            reduce using rule 71 (relation -> expression GE expression .)
    RETURN          reduce using rule 71 (relation -> expression GE expression .)
    ID              reduce using rule 71 (relation -> expression GE expression .)
    SKIP            reduce using rule 71 (relation -> expression GE expression .)
    BREAK           reduce using rule 71 (relation -> expression GE expression .)
    BEGIN           reduce using rule 71 (relation -> expression GE expression .)
    IF              reduce using rule 71 (relation -> expression GE expression .)
    RPAREN          reduce using rule 71 (relation -> expression GE expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 155

    (73) relation -> expression NE expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    DO              reduce using rule 73 (relation -> expression NE expression .)
    AND             reduce using rule 73 (relation -> expression NE expression .)
    OR              reduce using rule 73 (relation -> expression NE expression .)
    THEN            reduce using rule 73 (relation -> expression NE expression .)
    WHILE           reduce using rule 73 (relation -> expression NE expression .)
    PRINT           reduce using rule 73 (relation -> expression NE expression .)
    WRITE           reduce using rule 73 (relation -> expression NE expression .)
    READ            reduce using rule 73 (relation -> expression NE expression .)
    RETURN          reduce using rule 73 (relation -> expression NE expression .)
    ID              reduce using rule 73 (relation -> expression NE expression .)
    SKIP            reduce using rule 73 (relation -> expression NE expression .)
    BREAK           reduce using rule 73 (relation -> expression NE expression .)
    BEGIN           reduce using rule 73 (relation -> expression NE expression .)
    IF              reduce using rule 73 (relation -> expression NE expression .)
    RPAREN          reduce using rule 73 (relation -> expression NE expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 156

    (68) relation -> expression LT expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    DO              reduce using rule 68 (relation -> expression LT expression .)
    AND             reduce using rule 68 (relation -> expression LT expression .)
    OR              reduce using rule 68 (relation -> expression LT expression .)
    THEN            reduce using rule 68 (relation -> expression LT expression .)
    WHILE           reduce using rule 68 (relation -> expression LT expression .)
    PRINT           reduce using rule 68 (relation -> expression LT expression .)
    WRITE           reduce using rule 68 (relation -> expression LT expression .)
    READ            reduce using rule 68 (relation -> expression LT expression .)
    RETURN          reduce using rule 68 (relation -> expression LT expression .)
    ID              reduce using rule 68 (relation -> expression LT expression .)
    SKIP            reduce using rule 68 (relation -> expression LT expression .)
    BREAK           reduce using rule 68 (relation -> expression LT expression .)
    BEGIN           reduce using rule 68 (relation -> expression LT expression .)
    IF              reduce using rule 68 (relation -> expression LT expression .)
    RPAREN          reduce using rule 68 (relation -> expression LT expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 157

    (70) relation -> expression GT expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    DO              reduce using rule 70 (relation -> expression GT expression .)
    AND             reduce using rule 70 (relation -> expression GT expression .)
    OR              reduce using rule 70 (relation -> expression GT expression .)
    THEN            reduce using rule 70 (relation -> expression GT expression .)
    WHILE           reduce using rule 70 (relation -> expression GT expression .)
    PRINT           reduce using rule 70 (relation -> expression GT expression .)
    WRITE           reduce using rule 70 (relation -> expression GT expression .)
    READ            reduce using rule 70 (relation -> expression GT expression .)
    RETURN          reduce using rule 70 (relation -> expression GT expression .)
    ID              reduce using rule 70 (relation -> expression GT expression .)
    SKIP            reduce using rule 70 (relation -> expression GT expression .)
    BREAK           reduce using rule 70 (relation -> expression GT expression .)
    BEGIN           reduce using rule 70 (relation -> expression GT expression .)
    IF              reduce using rule 70 (relation -> expression GT expression .)
    RPAREN          reduce using rule 70 (relation -> expression GT expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 158

    (72) relation -> expression EQ expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    DO              reduce using rule 72 (relation -> expression EQ expression .)
    AND             reduce using rule 72 (relation -> expression EQ expression .)
    OR              reduce using rule 72 (relation -> expression EQ expression .)
    THEN            reduce using rule 72 (relation -> expression EQ expression .)
    WHILE           reduce using rule 72 (relation -> expression EQ expression .)
    PRINT           reduce using rule 72 (relation -> expression EQ expression .)
    WRITE           reduce using rule 72 (relation -> expression EQ expression .)
    READ            reduce using rule 72 (relation -> expression EQ expression .)
    RETURN          reduce using rule 72 (relation -> expression EQ expression .)
    ID              reduce using rule 72 (relation -> expression EQ expression .)
    SKIP            reduce using rule 72 (relation -> expression EQ expression .)
    BREAK           reduce using rule 72 (relation -> expression EQ expression .)
    BEGIN           reduce using rule 72 (relation -> expression EQ expression .)
    IF              reduce using rule 72 (relation -> expression EQ expression .)
    RPAREN          reduce using rule 72 (relation -> expression EQ expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 159

    (33) declaration -> PRINT LPAREN STRING RPAREN .

    END             reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    SEMICOLON       reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    WHILE           reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    PRINT           reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    WRITE           reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    READ            reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    RETURN          reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    ID              reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    SKIP            reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    BREAK           reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    BEGIN           reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    IF              reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)
    ELSE            reduce using rule 33 (declaration -> PRINT LPAREN STRING RPAREN .)


state 160

    (34) declaration -> WRITE LPAREN expression RPAREN .

    END             reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    WHILE           reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    PRINT           reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    WRITE           reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    READ            reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    RETURN          reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    ID              reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    SKIP            reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    BREAK           reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    BEGIN           reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    IF              reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)
    ELSE            reduce using rule 34 (declaration -> WRITE LPAREN expression RPAREN .)


state 161

    (50) ubication -> ID LSBRACKET expression RSBRACKET .

    RPAREN          reduce using rule 50 (ubication -> ID LSBRACKET expression RSBRACKET .)
    ASSIGN          reduce using rule 50 (ubication -> ID LSBRACKET expression RSBRACKET .)
    COLONEQUAL      reduce using rule 50 (ubication -> ID LSBRACKET expression RSBRACKET .)


state 162

    (37) declaration -> ID LPAREN expressions_listop RPAREN .

    END             reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    SEMICOLON       reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    WHILE           reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    PRINT           reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    WRITE           reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    READ            reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    RETURN          reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    ID              reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    SKIP            reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    BREAK           reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    BEGIN           reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    IF              reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)
    ELSE            reduce using rule 37 (declaration -> ID LPAREN expressions_listop RPAREN .)


state 163

    (42) ifthen -> IF relation THEN declaration .
    (43) ifthenelse -> IF relation THEN declaration . ELSE declaration

    END             reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    SEMICOLON       reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    WHILE           reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    PRINT           reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    WRITE           reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    READ            reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    RETURN          reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    ID              reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    SKIP            reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    BREAK           reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    BEGIN           reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    IF              reduce using rule 42 (ifthen -> IF relation THEN declaration .)
    ELSE            shift and go to state 169

  ! ELSE            [ reduce using rule 42 (ifthen -> IF relation THEN declaration .) ]


state 164

    (45) ifthen -> IF relation declaration ELSE . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 170
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 165

    (8) function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON . END
    (47) dec_list -> dec_list SEMICOLON . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 171
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 130
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 166

    (6) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON . END
    (47) dec_list -> dec_list SEMICOLON . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 172
    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 130
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 167

    (5) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END .

    SEMICOLON       reduce using rule 5 (function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END .)
    FUNC            reduce using rule 5 (function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END .)
    $end            reduce using rule 5 (function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list END .)


state 168

    (67) expressions_list -> expressions_list COMMA expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 67 (expressions_list -> expressions_list COMMA expression .)
    RPAREN          reduce using rule 67 (expressions_list -> expressions_list COMMA expression .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 76


state 169

    (43) ifthenelse -> IF relation THEN declaration ELSE . declaration
    (28) declaration -> . WHILE relation DO declaration
    (29) declaration -> . ifthen
    (30) declaration -> . ifthenelse
    (31) declaration -> . ubication ASSIGN expression
    (32) declaration -> . ubication COLONEQUAL expression
    (33) declaration -> . PRINT LPAREN STRING RPAREN
    (34) declaration -> . WRITE LPAREN expression RPAREN
    (35) declaration -> . READ LPAREN ubication RPAREN
    (36) declaration -> . RETURN expression
    (37) declaration -> . ID LPAREN expressions_listop RPAREN
    (38) declaration -> . SKIP
    (39) declaration -> . BREAK
    (40) declaration -> . BEGIN dec_list END
    (41) declaration -> . BEGIN END
    (42) ifthen -> . IF relation THEN declaration
    (44) ifthen -> . IF relation declaration
    (45) ifthen -> . IF relation declaration ELSE declaration
    (43) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (49) ubication -> . ID
    (50) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 53
    PRINT           shift and go to state 55
    WRITE           shift and go to state 60
    READ            shift and go to state 52
    RETURN          shift and go to state 51
    ID              shift and go to state 63
    SKIP            shift and go to state 59
    BREAK           shift and go to state 65
    BEGIN           shift and go to state 58
    IF              shift and go to state 64

    ifthenelse                     shift and go to state 57
    declaration                    shift and go to state 173
    ubication                      shift and go to state 62
    ifthen                         shift and go to state 56

state 170

    (45) ifthen -> IF relation declaration ELSE declaration .

    ELSE            reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    END             reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    SEMICOLON       reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    WHILE           reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    PRINT           reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    WRITE           reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    READ            reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    RETURN          reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    ID              reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    SKIP            reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    BREAK           reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    BEGIN           reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)
    IF              reduce using rule 45 (ifthen -> IF relation declaration ELSE declaration .)


state 171

    (8) function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END .

    SEMICOLON       reduce using rule 8 (function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END .)
    FUNC            reduce using rule 8 (function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END .)
    $end            reduce using rule 8 (function -> FUNC ID LPAREN argsop RPAREN ASSIGN type locals_op BEGIN dec_list SEMICOLON END .)


state 172

    (6) function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END .

    SEMICOLON       reduce using rule 6 (function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END .)
    FUNC            reduce using rule 6 (function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END .)
    $end            reduce using rule 6 (function -> FUNC ID LPAREN argsop RPAREN COLON type locals_op BEGIN dec_list SEMICOLON END .)


state 173

    (43) ifthenelse -> IF relation THEN declaration ELSE declaration .

    END             reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    SEMICOLON       reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    WHILE           reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    PRINT           reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    WRITE           reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    READ            reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    RETURN          reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    ID              reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    SKIP            reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    BREAK           reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    BEGIN           reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    IF              reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    ELSE            reduce using rule 43 (ifthenelse -> IF relation THEN declaration ELSE declaration .)

