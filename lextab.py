# lextab.py. This file automatically created by PLY (version 3.4). Don't edit!
_tabversion   = '3.4'
_lextokens    = {'DO': 1, 'LNOT': 1, 'CONST': 1, 'FUNC': 1, 'THEN': 1, 'LSBRACKET': 1, 'STRING_TYPE': 1, 'LOR': 1, 'EXTERN': 1, 'WHILE': 1, 'INT_TYPE': 1, 'PRINT': 1, 'MINUS': 1, 'STRING': 1, 'BEGIN': 1, 'LE': 1, 'RPAREN': 1, 'SEMI': 1, 'FLOAT_TYPE': 1, 'NE': 1, 'PLUS': 1, 'LT': 1, 'COMMA': 1, 'COLON': 1, 'ASSIGN': 1, 'GT': 1, 'DIVIDE': 1, 'COLONEQUAL': 1, 'ELSE': 1, 'GE': 1, 'LAND': 1, 'LPAREN': 1, 'INTEGER': 1, 'VAR': 1, 'TIMES': 1, 'EQ': 1, 'ID': 1, 'IF': 1, 'BOOLEAN_TYPE': 1, 'FLOAT': 1, 'RSBRACKET': 1, 'BOOLEAN': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_newline>\\n+)|(?P<t_COMMENT>/\\*(.|\\n|\\r|\\t)*\\*/)|(?P<t_PASCALCOMMENT>\\{(.|\\n|\\r|\\t)*\\})|(?P<t_CPPCOMMENT>//.*\\n)|(?P<t_FLOAT>((\\d*\\.\\d+)([eE][-+]?\\d+)?)|(\\d+\\.\\d*)|(\\d+)([eE][-+]?\\d+))|(?P<t_INTEGER>(?:0[xX]?)?\\d+)|(?P<t_STRING>"[^\\n]*?(?<!\\\\)")|(?P<t_BOOLEAN>(true|false))|(?P<t_ID>[a-zA-Z_]\\w*)|(?P<t_COMMENT_UNTERM>/\\*[.\\n]*(?!\\*/))|(?P<t_STRING_UNTERM>"((\\\\")|[^"])*)|(?P<t_LOR>\\|\\|)|(?P<t_RSBRACKET>\\])|(?P<t_LE><=)|(?P<t_LPAREN>\\()|(?P<t_NE>!=)|(?P<t_TIMES>\\*)|(?P<t_LSBRACKET>\\[)|(?P<t_GE>>=)|(?P<t_COLONEQUAL>:=)|(?P<t_RPAREN>\\))|(?P<t_LAND>&&)|(?P<t_EQ>==)|(?P<t_PLUS>\\+)|(?P<t_COLON>:)|(?P<t_COMMA>,)|(?P<t_DIVIDE>/)|(?P<t_LT><)|(?P<t_LNOT>!)|(?P<t_ASSIGN>=)|(?P<t_SEMI>;)|(?P<t_MINUS>-)|(?P<t_GT>>)', [None, ('t_newline', 'newline'), ('t_COMMENT', 'COMMENT'), None, ('t_PASCALCOMMENT', 'PASCALCOMMENT'), None, ('t_CPPCOMMENT', 'CPPCOMMENT'), ('t_FLOAT', 'FLOAT'), None, None, None, None, None, None, ('t_INTEGER', 'INTEGER'), ('t_STRING', 'STRING'), ('t_BOOLEAN', 'BOOLEAN'), None, ('t_ID', 'ID'), ('t_COMMENT_UNTERM', 'COMMENT_UNTERM'), ('t_STRING_UNTERM', 'STRING_UNTERM'), None, None, (None, 'LOR'), (None, 'RSBRACKET'), (None, 'LE'), (None, 'LPAREN'), (None, 'NE'), (None, 'TIMES'), (None, 'LSBRACKET'), (None, 'GE'), (None, 'COLONEQUAL'), (None, 'RPAREN'), (None, 'LAND'), (None, 'EQ'), (None, 'PLUS'), (None, 'COLON'), (None, 'COMMA'), (None, 'DIVIDE'), (None, 'LT'), (None, 'LNOT'), (None, 'ASSIGN'), (None, 'SEMI'), (None, 'MINUS'), (None, 'GT')])]}
_lexstateignore = {'INITIAL': ' \t\r'}
_lexstateerrorf = {'INITIAL': 't_error'}
