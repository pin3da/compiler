Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CONST
    STRING_TYPE
    EXTERN
    COLONEQUAL
    BOOLEAN_TYPE
    VAR
    UMINUS
    BOOLEAN

Grammar

Rule 0     S' -> program
Rule 1     program -> func_list
Rule 2     func_list -> function
Rule 3     func_list -> func_list function
Rule 4     function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
Rule 5     function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
Rule 6     argsop -> arguments
Rule 7     argsop -> empty
Rule 8     arguments -> var_dec
Rule 9     arguments -> arguments COMMA var_dec
Rule 10    arguments -> arguments var_dec
Rule 11    arguments -> error
Rule 12    locals_op -> locals
Rule 13    locals_op -> empty
Rule 14    locals -> var_dec SEMICOLON
Rule 15    locals -> function SEMICOLON
Rule 16    locals -> locals var_dec SEMICOLON
Rule 17    locals -> locals function SEMICOLON
Rule 18    locals -> error
Rule 19    var_dec -> ID COLON type
Rule 20    var_dec -> ID type
Rule 21    type -> INT_TYPE
Rule 22    type -> FLOAT_TYPE
Rule 23    type -> INT_TYPE LSBRACKET expression RSBRACKET
Rule 24    type -> FLOAT_TYPE LSBRACKET expression RSBRACKET
Rule 25    declaration -> WHILE relation DO declaration
Rule 26    declaration -> ifthen
Rule 27    declaration -> ifthenelse
Rule 28    declaration -> ubication ASSIGN expression
Rule 29    declaration -> PRINT LPAREN STRING RPAREN
Rule 30    declaration -> WRITE LPAREN expression RPAREN
Rule 31    declaration -> READ LPAREN ubication RPAREN
Rule 32    declaration -> RETURN expression
Rule 33    declaration -> ID LPAREN expressions_listop RPAREN
Rule 34    declaration -> SKIP
Rule 35    declaration -> BREAK
Rule 36    declaration -> BEGIN dec_list END
Rule 37    declaration -> BEGIN END
Rule 38    ifthen -> IF relation THEN declaration
Rule 39    ifthenelse -> IF relation THEN declaration ELSE declaration
Rule 40    ifthen -> IF relation declaration
Rule 41    ifthen -> IF relation declaration ELSE declaration
Rule 42    dec_list -> declaration
Rule 43    dec_list -> dec_list SEMICOLON declaration
Rule 44    dec_list -> dec_list declaration
Rule 45    ubication -> ID
Rule 46    ubication -> ID LSBRACKET expression RSBRACKET
Rule 47    expression -> expression PLUS expression
Rule 48    expression -> expression MINUS expression
Rule 49    expression -> expression TIMES expression
Rule 50    expression -> expression DIVIDE expression
Rule 51    expression -> MINUS expression
Rule 52    expression -> PLUS expression
Rule 53    expression -> LPAREN expression RPAREN
Rule 54    expression -> ID LPAREN expressions_listop RPAREN
Rule 55    expression -> ID
Rule 56    expression -> ID LSBRACKET expression RSBRACKET
Rule 57    expression -> number
Rule 58    expression -> INT_TYPE LPAREN expression RPAREN
Rule 59    expression -> FLOAT_TYPE LPAREN expression RPAREN
Rule 60    expressions_listop -> expressions_list
Rule 61    expressions_listop -> empty
Rule 62    expressions_list -> expression
Rule 63    expressions_list -> expressions_list COMMA expression
Rule 64    relation -> expression LT expression
Rule 65    relation -> expression LE expression
Rule 66    relation -> expression GT expression
Rule 67    relation -> expression GE expression
Rule 68    relation -> expression EQ expression
Rule 69    relation -> expression NE expression
Rule 70    relation -> relation AND relation
Rule 71    relation -> relation OR relation
Rule 72    relation -> NOT relation
Rule 73    relation -> LPAREN relation RPAREN
Rule 74    relation -> error
Rule 75    number -> INTEGER
Rule 76    number -> FLOAT
Rule 77    empty -> <empty>

Terminals, with rules where they appear

AND                  : 70
ASSIGN               : 28
BEGIN                : 4 5 36 37
BOOLEAN              : 
BOOLEAN_TYPE         : 
BREAK                : 35
COLON                : 19
COLONEQUAL           : 
COMMA                : 9 63
CONST                : 
DIVIDE               : 50
DO                   : 25
ELSE                 : 39 41
END                  : 4 5 36 37
EQ                   : 68
EXTERN               : 
FLOAT                : 76
FLOAT_TYPE           : 22 24 59
FUNC                 : 4 5
GE                   : 67
GT                   : 66
ID                   : 4 5 19 20 33 45 46 54 55 56
IF                   : 38 39 40 41
INTEGER              : 75
INT_TYPE             : 21 23 58
LE                   : 65
LPAREN               : 4 5 29 30 31 33 53 54 58 59 73
LSBRACKET            : 23 24 46 56
LT                   : 64
MINUS                : 48 51
NE                   : 69
NOT                  : 72
OR                   : 71
PLUS                 : 47 52
PRINT                : 29
READ                 : 31
RETURN               : 32
RPAREN               : 4 5 29 30 31 33 53 54 58 59 73
RSBRACKET            : 23 24 46 56
SEMICOLON            : 5 14 15 16 17 43
SKIP                 : 34
STRING               : 29
STRING_TYPE          : 
THEN                 : 38 39
TIMES                : 49
UMINUS               : 
VAR                  : 
WHILE                : 25
WRITE                : 30
error                : 11 18 74

Nonterminals, with rules where they appear

argsop               : 4 5
arguments            : 6 9 10
dec_list             : 4 5 36 43 44
declaration          : 25 38 39 39 40 41 41 42 43 44
empty                : 7 13 61
expression           : 23 24 28 30 32 46 47 47 48 48 49 49 50 50 51 52 53 56 58 59 62 63 64 64 65 65 66 66 67 67 68 68 69 69
expressions_list     : 60 63
expressions_listop   : 33 54
func_list            : 1 3
function             : 2 3 15 17
ifthen               : 26
ifthenelse           : 27
locals               : 12 16 17
locals_op            : 4 5
number               : 57
program              : 0
relation             : 25 38 39 40 41 70 70 71 71 72 73
type                 : 19 20
ubication            : 28 31
var_dec              : 8 9 10 14 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . func_list
    (2) func_list -> . function
    (3) func_list -> . func_list function
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END

    FUNC            shift and go to state 2

    function                       shift and go to state 1
    program                        shift and go to state 3
    func_list                      shift and go to state 4

state 1

    (2) func_list -> function .

    FUNC            reduce using rule 2 (func_list -> function .)
    $end            reduce using rule 2 (func_list -> function .)


state 2

    (4) function -> FUNC . ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC . ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END

    ID              shift and go to state 5


state 3

    (0) S' -> program .



state 4

    (1) program -> func_list .
    (3) func_list -> func_list . function
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END

    $end            reduce using rule 1 (program -> func_list .)
    FUNC            shift and go to state 2

    function                       shift and go to state 6

state 5

    (4) function -> FUNC ID . LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC ID . LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END

    LPAREN          shift and go to state 7


state 6

    (3) func_list -> func_list function .

    FUNC            reduce using rule 3 (func_list -> func_list function .)
    $end            reduce using rule 3 (func_list -> func_list function .)


state 7

    (4) function -> FUNC ID LPAREN . argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC ID LPAREN . argsop RPAREN locals_op BEGIN dec_list SEMICOLON END
    (6) argsop -> . arguments
    (7) argsop -> . empty
    (8) arguments -> . var_dec
    (9) arguments -> . arguments COMMA var_dec
    (10) arguments -> . arguments var_dec
    (11) arguments -> . error
    (77) empty -> .
    (19) var_dec -> . ID COLON type
    (20) var_dec -> . ID type

    error           shift and go to state 11
    RPAREN          reduce using rule 77 (empty -> .)
    ID              shift and go to state 12

    var_dec                        shift and go to state 8
    argsop                         shift and go to state 9
    arguments                      shift and go to state 10
    empty                          shift and go to state 13

state 8

    (8) arguments -> var_dec .

    COMMA           reduce using rule 8 (arguments -> var_dec .)
    ID              reduce using rule 8 (arguments -> var_dec .)
    RPAREN          reduce using rule 8 (arguments -> var_dec .)


state 9

    (4) function -> FUNC ID LPAREN argsop . RPAREN locals_op BEGIN dec_list END
    (5) function -> FUNC ID LPAREN argsop . RPAREN locals_op BEGIN dec_list SEMICOLON END

    RPAREN          shift and go to state 14


state 10

    (6) argsop -> arguments .
    (9) arguments -> arguments . COMMA var_dec
    (10) arguments -> arguments . var_dec
    (19) var_dec -> . ID COLON type
    (20) var_dec -> . ID type

    RPAREN          reduce using rule 6 (argsop -> arguments .)
    COMMA           shift and go to state 16
    ID              shift and go to state 12

    var_dec                        shift and go to state 15

state 11

    (11) arguments -> error .

    COMMA           reduce using rule 11 (arguments -> error .)
    ID              reduce using rule 11 (arguments -> error .)
    RPAREN          reduce using rule 11 (arguments -> error .)


state 12

    (19) var_dec -> ID . COLON type
    (20) var_dec -> ID . type
    (21) type -> . INT_TYPE
    (22) type -> . FLOAT_TYPE
    (23) type -> . INT_TYPE LSBRACKET expression RSBRACKET
    (24) type -> . FLOAT_TYPE LSBRACKET expression RSBRACKET

    COLON           shift and go to state 18
    INT_TYPE        shift and go to state 19
    FLOAT_TYPE      shift and go to state 17

    type                           shift and go to state 20

state 13

    (7) argsop -> empty .

    RPAREN          reduce using rule 7 (argsop -> empty .)


state 14

    (4) function -> FUNC ID LPAREN argsop RPAREN . locals_op BEGIN dec_list END
    (5) function -> FUNC ID LPAREN argsop RPAREN . locals_op BEGIN dec_list SEMICOLON END
    (12) locals_op -> . locals
    (13) locals_op -> . empty
    (14) locals -> . var_dec SEMICOLON
    (15) locals -> . function SEMICOLON
    (16) locals -> . locals var_dec SEMICOLON
    (17) locals -> . locals function SEMICOLON
    (18) locals -> . error
    (77) empty -> .
    (19) var_dec -> . ID COLON type
    (20) var_dec -> . ID type
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END

    error           shift and go to state 25
    BEGIN           reduce using rule 77 (empty -> .)
    ID              shift and go to state 12
    FUNC            shift and go to state 2

    function                       shift and go to state 21
    locals_op                      shift and go to state 22
    var_dec                        shift and go to state 23
    locals                         shift and go to state 26
    empty                          shift and go to state 24

state 15

    (10) arguments -> arguments var_dec .

    COMMA           reduce using rule 10 (arguments -> arguments var_dec .)
    ID              reduce using rule 10 (arguments -> arguments var_dec .)
    RPAREN          reduce using rule 10 (arguments -> arguments var_dec .)


state 16

    (9) arguments -> arguments COMMA . var_dec
    (19) var_dec -> . ID COLON type
    (20) var_dec -> . ID type

    ID              shift and go to state 12

    var_dec                        shift and go to state 27

state 17

    (22) type -> FLOAT_TYPE .
    (24) type -> FLOAT_TYPE . LSBRACKET expression RSBRACKET

    COMMA           reduce using rule 22 (type -> FLOAT_TYPE .)
    ID              reduce using rule 22 (type -> FLOAT_TYPE .)
    RPAREN          reduce using rule 22 (type -> FLOAT_TYPE .)
    SEMICOLON       reduce using rule 22 (type -> FLOAT_TYPE .)
    LSBRACKET       shift and go to state 28


state 18

    (19) var_dec -> ID COLON . type
    (21) type -> . INT_TYPE
    (22) type -> . FLOAT_TYPE
    (23) type -> . INT_TYPE LSBRACKET expression RSBRACKET
    (24) type -> . FLOAT_TYPE LSBRACKET expression RSBRACKET

    INT_TYPE        shift and go to state 19
    FLOAT_TYPE      shift and go to state 17

    type                           shift and go to state 29

state 19

    (21) type -> INT_TYPE .
    (23) type -> INT_TYPE . LSBRACKET expression RSBRACKET

    COMMA           reduce using rule 21 (type -> INT_TYPE .)
    ID              reduce using rule 21 (type -> INT_TYPE .)
    RPAREN          reduce using rule 21 (type -> INT_TYPE .)
    SEMICOLON       reduce using rule 21 (type -> INT_TYPE .)
    LSBRACKET       shift and go to state 30


state 20

    (20) var_dec -> ID type .

    SEMICOLON       reduce using rule 20 (var_dec -> ID type .)
    COMMA           reduce using rule 20 (var_dec -> ID type .)
    ID              reduce using rule 20 (var_dec -> ID type .)
    RPAREN          reduce using rule 20 (var_dec -> ID type .)


state 21

    (15) locals -> function . SEMICOLON

    SEMICOLON       shift and go to state 31


state 22

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op . BEGIN dec_list END
    (5) function -> FUNC ID LPAREN argsop RPAREN locals_op . BEGIN dec_list SEMICOLON END

    BEGIN           shift and go to state 32


state 23

    (14) locals -> var_dec . SEMICOLON

    SEMICOLON       shift and go to state 33


state 24

    (13) locals_op -> empty .

    BEGIN           reduce using rule 13 (locals_op -> empty .)


state 25

    (18) locals -> error .

    ID              reduce using rule 18 (locals -> error .)
    FUNC            reduce using rule 18 (locals -> error .)
    BEGIN           reduce using rule 18 (locals -> error .)


state 26

    (12) locals_op -> locals .
    (16) locals -> locals . var_dec SEMICOLON
    (17) locals -> locals . function SEMICOLON
    (19) var_dec -> . ID COLON type
    (20) var_dec -> . ID type
    (4) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END
    (5) function -> . FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END

    BEGIN           reduce using rule 12 (locals_op -> locals .)
    ID              shift and go to state 12
    FUNC            shift and go to state 2

    function                       shift and go to state 34
    var_dec                        shift and go to state 35

state 27

    (9) arguments -> arguments COMMA var_dec .

    COMMA           reduce using rule 9 (arguments -> arguments COMMA var_dec .)
    ID              reduce using rule 9 (arguments -> arguments COMMA var_dec .)
    RPAREN          reduce using rule 9 (arguments -> arguments COMMA var_dec .)


state 28

    (24) type -> FLOAT_TYPE LSBRACKET . expression RSBRACKET
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 44
    number                         shift and go to state 39

state 29

    (19) var_dec -> ID COLON type .

    SEMICOLON       reduce using rule 19 (var_dec -> ID COLON type .)
    COMMA           reduce using rule 19 (var_dec -> ID COLON type .)
    ID              reduce using rule 19 (var_dec -> ID COLON type .)
    RPAREN          reduce using rule 19 (var_dec -> ID COLON type .)


state 30

    (23) type -> INT_TYPE LSBRACKET . expression RSBRACKET
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 46
    number                         shift and go to state 39

state 31

    (15) locals -> function SEMICOLON .

    ID              reduce using rule 15 (locals -> function SEMICOLON .)
    FUNC            reduce using rule 15 (locals -> function SEMICOLON .)
    BEGIN           reduce using rule 15 (locals -> function SEMICOLON .)


state 32

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN . dec_list END
    (5) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN . dec_list SEMICOLON END
    (42) dec_list -> . declaration
    (43) dec_list -> . dec_list SEMICOLON declaration
    (44) dec_list -> . dec_list declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    dec_list                       shift and go to state 50
    declaration                    shift and go to state 57
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 33

    (14) locals -> var_dec SEMICOLON .

    ID              reduce using rule 14 (locals -> var_dec SEMICOLON .)
    FUNC            reduce using rule 14 (locals -> var_dec SEMICOLON .)
    BEGIN           reduce using rule 14 (locals -> var_dec SEMICOLON .)


state 34

    (17) locals -> locals function . SEMICOLON

    SEMICOLON       shift and go to state 62


state 35

    (16) locals -> locals var_dec . SEMICOLON

    SEMICOLON       shift and go to state 63


state 36

    (59) expression -> FLOAT_TYPE . LPAREN expression RPAREN

    LPAREN          shift and go to state 64


state 37

    (58) expression -> INT_TYPE . LPAREN expression RPAREN

    LPAREN          shift and go to state 65


state 38

    (76) number -> FLOAT .

    RPAREN          reduce using rule 76 (number -> FLOAT .)
    PLUS            reduce using rule 76 (number -> FLOAT .)
    MINUS           reduce using rule 76 (number -> FLOAT .)
    TIMES           reduce using rule 76 (number -> FLOAT .)
    DIVIDE          reduce using rule 76 (number -> FLOAT .)
    DO              reduce using rule 76 (number -> FLOAT .)
    AND             reduce using rule 76 (number -> FLOAT .)
    OR              reduce using rule 76 (number -> FLOAT .)
    THEN            reduce using rule 76 (number -> FLOAT .)
    WHILE           reduce using rule 76 (number -> FLOAT .)
    PRINT           reduce using rule 76 (number -> FLOAT .)
    WRITE           reduce using rule 76 (number -> FLOAT .)
    READ            reduce using rule 76 (number -> FLOAT .)
    RETURN          reduce using rule 76 (number -> FLOAT .)
    ID              reduce using rule 76 (number -> FLOAT .)
    SKIP            reduce using rule 76 (number -> FLOAT .)
    BREAK           reduce using rule 76 (number -> FLOAT .)
    BEGIN           reduce using rule 76 (number -> FLOAT .)
    IF              reduce using rule 76 (number -> FLOAT .)
    RSBRACKET       reduce using rule 76 (number -> FLOAT .)
    END             reduce using rule 76 (number -> FLOAT .)
    SEMICOLON       reduce using rule 76 (number -> FLOAT .)
    ELSE            reduce using rule 76 (number -> FLOAT .)
    LT              reduce using rule 76 (number -> FLOAT .)
    LE              reduce using rule 76 (number -> FLOAT .)
    GT              reduce using rule 76 (number -> FLOAT .)
    GE              reduce using rule 76 (number -> FLOAT .)
    EQ              reduce using rule 76 (number -> FLOAT .)
    NE              reduce using rule 76 (number -> FLOAT .)
    COMMA           reduce using rule 76 (number -> FLOAT .)


state 39

    (57) expression -> number .

    PLUS            reduce using rule 57 (expression -> number .)
    MINUS           reduce using rule 57 (expression -> number .)
    TIMES           reduce using rule 57 (expression -> number .)
    DIVIDE          reduce using rule 57 (expression -> number .)
    RSBRACKET       reduce using rule 57 (expression -> number .)
    RPAREN          reduce using rule 57 (expression -> number .)
    END             reduce using rule 57 (expression -> number .)
    SEMICOLON       reduce using rule 57 (expression -> number .)
    WHILE           reduce using rule 57 (expression -> number .)
    PRINT           reduce using rule 57 (expression -> number .)
    WRITE           reduce using rule 57 (expression -> number .)
    READ            reduce using rule 57 (expression -> number .)
    RETURN          reduce using rule 57 (expression -> number .)
    ID              reduce using rule 57 (expression -> number .)
    SKIP            reduce using rule 57 (expression -> number .)
    BREAK           reduce using rule 57 (expression -> number .)
    BEGIN           reduce using rule 57 (expression -> number .)
    IF              reduce using rule 57 (expression -> number .)
    ELSE            reduce using rule 57 (expression -> number .)
    LT              reduce using rule 57 (expression -> number .)
    LE              reduce using rule 57 (expression -> number .)
    GT              reduce using rule 57 (expression -> number .)
    GE              reduce using rule 57 (expression -> number .)
    EQ              reduce using rule 57 (expression -> number .)
    NE              reduce using rule 57 (expression -> number .)
    COMMA           reduce using rule 57 (expression -> number .)
    DO              reduce using rule 57 (expression -> number .)
    AND             reduce using rule 57 (expression -> number .)
    OR              reduce using rule 57 (expression -> number .)
    THEN            reduce using rule 57 (expression -> number .)


state 40

    (52) expression -> PLUS . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 66
    number                         shift and go to state 39

state 41

    (53) expression -> LPAREN . expression RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 67
    number                         shift and go to state 39

state 42

    (75) number -> INTEGER .

    RPAREN          reduce using rule 75 (number -> INTEGER .)
    PLUS            reduce using rule 75 (number -> INTEGER .)
    MINUS           reduce using rule 75 (number -> INTEGER .)
    TIMES           reduce using rule 75 (number -> INTEGER .)
    DIVIDE          reduce using rule 75 (number -> INTEGER .)
    DO              reduce using rule 75 (number -> INTEGER .)
    AND             reduce using rule 75 (number -> INTEGER .)
    OR              reduce using rule 75 (number -> INTEGER .)
    THEN            reduce using rule 75 (number -> INTEGER .)
    WHILE           reduce using rule 75 (number -> INTEGER .)
    PRINT           reduce using rule 75 (number -> INTEGER .)
    WRITE           reduce using rule 75 (number -> INTEGER .)
    READ            reduce using rule 75 (number -> INTEGER .)
    RETURN          reduce using rule 75 (number -> INTEGER .)
    ID              reduce using rule 75 (number -> INTEGER .)
    SKIP            reduce using rule 75 (number -> INTEGER .)
    BREAK           reduce using rule 75 (number -> INTEGER .)
    BEGIN           reduce using rule 75 (number -> INTEGER .)
    IF              reduce using rule 75 (number -> INTEGER .)
    RSBRACKET       reduce using rule 75 (number -> INTEGER .)
    END             reduce using rule 75 (number -> INTEGER .)
    SEMICOLON       reduce using rule 75 (number -> INTEGER .)
    ELSE            reduce using rule 75 (number -> INTEGER .)
    LT              reduce using rule 75 (number -> INTEGER .)
    LE              reduce using rule 75 (number -> INTEGER .)
    GT              reduce using rule 75 (number -> INTEGER .)
    GE              reduce using rule 75 (number -> INTEGER .)
    EQ              reduce using rule 75 (number -> INTEGER .)
    NE              reduce using rule 75 (number -> INTEGER .)
    COMMA           reduce using rule 75 (number -> INTEGER .)


state 43

    (54) expression -> ID . LPAREN expressions_listop RPAREN
    (55) expression -> ID .
    (56) expression -> ID . LSBRACKET expression RSBRACKET

    LPAREN          shift and go to state 69
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    RSBRACKET       reduce using rule 55 (expression -> ID .)
    RPAREN          reduce using rule 55 (expression -> ID .)
    END             reduce using rule 55 (expression -> ID .)
    SEMICOLON       reduce using rule 55 (expression -> ID .)
    WHILE           reduce using rule 55 (expression -> ID .)
    PRINT           reduce using rule 55 (expression -> ID .)
    WRITE           reduce using rule 55 (expression -> ID .)
    READ            reduce using rule 55 (expression -> ID .)
    RETURN          reduce using rule 55 (expression -> ID .)
    ID              reduce using rule 55 (expression -> ID .)
    SKIP            reduce using rule 55 (expression -> ID .)
    BREAK           reduce using rule 55 (expression -> ID .)
    BEGIN           reduce using rule 55 (expression -> ID .)
    IF              reduce using rule 55 (expression -> ID .)
    ELSE            reduce using rule 55 (expression -> ID .)
    LT              reduce using rule 55 (expression -> ID .)
    LE              reduce using rule 55 (expression -> ID .)
    GT              reduce using rule 55 (expression -> ID .)
    GE              reduce using rule 55 (expression -> ID .)
    EQ              reduce using rule 55 (expression -> ID .)
    NE              reduce using rule 55 (expression -> ID .)
    COMMA           reduce using rule 55 (expression -> ID .)
    DO              reduce using rule 55 (expression -> ID .)
    AND             reduce using rule 55 (expression -> ID .)
    OR              reduce using rule 55 (expression -> ID .)
    THEN            reduce using rule 55 (expression -> ID .)
    LSBRACKET       shift and go to state 68


state 44

    (24) type -> FLOAT_TYPE LSBRACKET expression . RSBRACKET
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 45

    (51) expression -> MINUS . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 75
    number                         shift and go to state 39

state 46

    (23) type -> INT_TYPE LSBRACKET expression . RSBRACKET
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 47

    (32) declaration -> RETURN . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 77
    number                         shift and go to state 39

state 48

    (31) declaration -> READ . LPAREN ubication RPAREN

    LPAREN          shift and go to state 78


state 49

    (25) declaration -> WHILE . relation DO declaration
    (64) relation -> . expression LT expression
    (65) relation -> . expression LE expression
    (66) relation -> . expression GT expression
    (67) relation -> . expression GE expression
    (68) relation -> . expression EQ expression
    (69) relation -> . expression NE expression
    (70) relation -> . relation AND relation
    (71) relation -> . relation OR relation
    (72) relation -> . NOT relation
    (73) relation -> . LPAREN relation RPAREN
    (74) relation -> . error
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    NOT             shift and go to state 82
    LPAREN          shift and go to state 80
    error           shift and go to state 81
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 83
    relation                       shift and go to state 79
    number                         shift and go to state 39

state 50

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list . END
    (5) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list . SEMICOLON END
    (43) dec_list -> dec_list . SEMICOLON declaration
    (44) dec_list -> dec_list . declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 85
    SEMICOLON       shift and go to state 84
    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 86
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 51

    (29) declaration -> PRINT . LPAREN STRING RPAREN

    LPAREN          shift and go to state 87


state 52

    (26) declaration -> ifthen .

    ELSE            reduce using rule 26 (declaration -> ifthen .)
    END             reduce using rule 26 (declaration -> ifthen .)
    SEMICOLON       reduce using rule 26 (declaration -> ifthen .)
    WHILE           reduce using rule 26 (declaration -> ifthen .)
    PRINT           reduce using rule 26 (declaration -> ifthen .)
    WRITE           reduce using rule 26 (declaration -> ifthen .)
    READ            reduce using rule 26 (declaration -> ifthen .)
    RETURN          reduce using rule 26 (declaration -> ifthen .)
    ID              reduce using rule 26 (declaration -> ifthen .)
    SKIP            reduce using rule 26 (declaration -> ifthen .)
    BREAK           reduce using rule 26 (declaration -> ifthen .)
    BEGIN           reduce using rule 26 (declaration -> ifthen .)
    IF              reduce using rule 26 (declaration -> ifthen .)


state 53

    (27) declaration -> ifthenelse .

    ELSE            reduce using rule 27 (declaration -> ifthenelse .)
    END             reduce using rule 27 (declaration -> ifthenelse .)
    SEMICOLON       reduce using rule 27 (declaration -> ifthenelse .)
    WHILE           reduce using rule 27 (declaration -> ifthenelse .)
    PRINT           reduce using rule 27 (declaration -> ifthenelse .)
    WRITE           reduce using rule 27 (declaration -> ifthenelse .)
    READ            reduce using rule 27 (declaration -> ifthenelse .)
    RETURN          reduce using rule 27 (declaration -> ifthenelse .)
    ID              reduce using rule 27 (declaration -> ifthenelse .)
    SKIP            reduce using rule 27 (declaration -> ifthenelse .)
    BREAK           reduce using rule 27 (declaration -> ifthenelse .)
    BEGIN           reduce using rule 27 (declaration -> ifthenelse .)
    IF              reduce using rule 27 (declaration -> ifthenelse .)


state 54

    (36) declaration -> BEGIN . dec_list END
    (37) declaration -> BEGIN . END
    (42) dec_list -> . declaration
    (43) dec_list -> . dec_list SEMICOLON declaration
    (44) dec_list -> . dec_list declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 89
    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    dec_list                       shift and go to state 88
    declaration                    shift and go to state 57
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 55

    (34) declaration -> SKIP .

    ELSE            reduce using rule 34 (declaration -> SKIP .)
    END             reduce using rule 34 (declaration -> SKIP .)
    SEMICOLON       reduce using rule 34 (declaration -> SKIP .)
    WHILE           reduce using rule 34 (declaration -> SKIP .)
    PRINT           reduce using rule 34 (declaration -> SKIP .)
    WRITE           reduce using rule 34 (declaration -> SKIP .)
    READ            reduce using rule 34 (declaration -> SKIP .)
    RETURN          reduce using rule 34 (declaration -> SKIP .)
    ID              reduce using rule 34 (declaration -> SKIP .)
    SKIP            reduce using rule 34 (declaration -> SKIP .)
    BREAK           reduce using rule 34 (declaration -> SKIP .)
    BEGIN           reduce using rule 34 (declaration -> SKIP .)
    IF              reduce using rule 34 (declaration -> SKIP .)


state 56

    (30) declaration -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 90


state 57

    (42) dec_list -> declaration .

    END             reduce using rule 42 (dec_list -> declaration .)
    SEMICOLON       reduce using rule 42 (dec_list -> declaration .)
    WHILE           reduce using rule 42 (dec_list -> declaration .)
    PRINT           reduce using rule 42 (dec_list -> declaration .)
    WRITE           reduce using rule 42 (dec_list -> declaration .)
    READ            reduce using rule 42 (dec_list -> declaration .)
    RETURN          reduce using rule 42 (dec_list -> declaration .)
    ID              reduce using rule 42 (dec_list -> declaration .)
    SKIP            reduce using rule 42 (dec_list -> declaration .)
    BREAK           reduce using rule 42 (dec_list -> declaration .)
    BEGIN           reduce using rule 42 (dec_list -> declaration .)
    IF              reduce using rule 42 (dec_list -> declaration .)


state 58

    (28) declaration -> ubication . ASSIGN expression

    ASSIGN          shift and go to state 91


state 59

    (33) declaration -> ID . LPAREN expressions_listop RPAREN
    (45) ubication -> ID .
    (46) ubication -> ID . LSBRACKET expression RSBRACKET

    LPAREN          shift and go to state 93
    ASSIGN          reduce using rule 45 (ubication -> ID .)
    LSBRACKET       shift and go to state 92


state 60

    (38) ifthen -> IF . relation THEN declaration
    (40) ifthen -> IF . relation declaration
    (41) ifthen -> IF . relation declaration ELSE declaration
    (39) ifthenelse -> IF . relation THEN declaration ELSE declaration
    (64) relation -> . expression LT expression
    (65) relation -> . expression LE expression
    (66) relation -> . expression GT expression
    (67) relation -> . expression GE expression
    (68) relation -> . expression EQ expression
    (69) relation -> . expression NE expression
    (70) relation -> . relation AND relation
    (71) relation -> . relation OR relation
    (72) relation -> . NOT relation
    (73) relation -> . LPAREN relation RPAREN
    (74) relation -> . error
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    NOT             shift and go to state 82
    LPAREN          shift and go to state 80
    error           shift and go to state 81
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 83
    relation                       shift and go to state 94
    number                         shift and go to state 39

state 61

    (35) declaration -> BREAK .

    ELSE            reduce using rule 35 (declaration -> BREAK .)
    END             reduce using rule 35 (declaration -> BREAK .)
    SEMICOLON       reduce using rule 35 (declaration -> BREAK .)
    WHILE           reduce using rule 35 (declaration -> BREAK .)
    PRINT           reduce using rule 35 (declaration -> BREAK .)
    WRITE           reduce using rule 35 (declaration -> BREAK .)
    READ            reduce using rule 35 (declaration -> BREAK .)
    RETURN          reduce using rule 35 (declaration -> BREAK .)
    ID              reduce using rule 35 (declaration -> BREAK .)
    SKIP            reduce using rule 35 (declaration -> BREAK .)
    BREAK           reduce using rule 35 (declaration -> BREAK .)
    BEGIN           reduce using rule 35 (declaration -> BREAK .)
    IF              reduce using rule 35 (declaration -> BREAK .)


state 62

    (17) locals -> locals function SEMICOLON .

    ID              reduce using rule 17 (locals -> locals function SEMICOLON .)
    FUNC            reduce using rule 17 (locals -> locals function SEMICOLON .)
    BEGIN           reduce using rule 17 (locals -> locals function SEMICOLON .)


state 63

    (16) locals -> locals var_dec SEMICOLON .

    ID              reduce using rule 16 (locals -> locals var_dec SEMICOLON .)
    FUNC            reduce using rule 16 (locals -> locals var_dec SEMICOLON .)
    BEGIN           reduce using rule 16 (locals -> locals var_dec SEMICOLON .)


state 64

    (59) expression -> FLOAT_TYPE LPAREN . expression RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 95
    number                         shift and go to state 39

state 65

    (58) expression -> INT_TYPE LPAREN . expression RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 96
    number                         shift and go to state 39

state 66

    (52) expression -> PLUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 52 (expression -> PLUS expression .)
    MINUS           reduce using rule 52 (expression -> PLUS expression .)
    RSBRACKET       reduce using rule 52 (expression -> PLUS expression .)
    RPAREN          reduce using rule 52 (expression -> PLUS expression .)
    END             reduce using rule 52 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 52 (expression -> PLUS expression .)
    WHILE           reduce using rule 52 (expression -> PLUS expression .)
    PRINT           reduce using rule 52 (expression -> PLUS expression .)
    WRITE           reduce using rule 52 (expression -> PLUS expression .)
    READ            reduce using rule 52 (expression -> PLUS expression .)
    RETURN          reduce using rule 52 (expression -> PLUS expression .)
    ID              reduce using rule 52 (expression -> PLUS expression .)
    SKIP            reduce using rule 52 (expression -> PLUS expression .)
    BREAK           reduce using rule 52 (expression -> PLUS expression .)
    BEGIN           reduce using rule 52 (expression -> PLUS expression .)
    IF              reduce using rule 52 (expression -> PLUS expression .)
    ELSE            reduce using rule 52 (expression -> PLUS expression .)
    LT              reduce using rule 52 (expression -> PLUS expression .)
    LE              reduce using rule 52 (expression -> PLUS expression .)
    GT              reduce using rule 52 (expression -> PLUS expression .)
    GE              reduce using rule 52 (expression -> PLUS expression .)
    EQ              reduce using rule 52 (expression -> PLUS expression .)
    NE              reduce using rule 52 (expression -> PLUS expression .)
    COMMA           reduce using rule 52 (expression -> PLUS expression .)
    DO              reduce using rule 52 (expression -> PLUS expression .)
    AND             reduce using rule 52 (expression -> PLUS expression .)
    OR              reduce using rule 52 (expression -> PLUS expression .)
    THEN            reduce using rule 52 (expression -> PLUS expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 52 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 67

    (53) expression -> LPAREN expression . RPAREN
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 97
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 68

    (56) expression -> ID LSBRACKET . expression RSBRACKET
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 98
    number                         shift and go to state 39

state 69

    (54) expression -> ID LPAREN . expressions_listop RPAREN
    (60) expressions_listop -> . expressions_list
    (61) expressions_listop -> . empty
    (62) expressions_list -> . expression
    (63) expressions_list -> . expressions_list COMMA expression
    (77) empty -> .
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    RPAREN          reduce using rule 77 (empty -> .)
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 101
    expressions_listop             shift and go to state 100
    expressions_list               shift and go to state 99
    number                         shift and go to state 39
    empty                          shift and go to state 102

state 70

    (50) expression -> expression DIVIDE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 103
    number                         shift and go to state 39

state 71

    (49) expression -> expression TIMES . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 104
    number                         shift and go to state 39

state 72

    (24) type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .

    COMMA           reduce using rule 24 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    ID              reduce using rule 24 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    RPAREN          reduce using rule 24 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)
    SEMICOLON       reduce using rule 24 (type -> FLOAT_TYPE LSBRACKET expression RSBRACKET .)


state 73

    (47) expression -> expression PLUS . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 105
    number                         shift and go to state 39

state 74

    (48) expression -> expression MINUS . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 106
    number                         shift and go to state 39

state 75

    (51) expression -> MINUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    TIMES           reduce using rule 51 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 51 (expression -> MINUS expression .)
    RSBRACKET       reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)
    END             reduce using rule 51 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 51 (expression -> MINUS expression .)
    WHILE           reduce using rule 51 (expression -> MINUS expression .)
    PRINT           reduce using rule 51 (expression -> MINUS expression .)
    WRITE           reduce using rule 51 (expression -> MINUS expression .)
    READ            reduce using rule 51 (expression -> MINUS expression .)
    RETURN          reduce using rule 51 (expression -> MINUS expression .)
    ID              reduce using rule 51 (expression -> MINUS expression .)
    SKIP            reduce using rule 51 (expression -> MINUS expression .)
    BREAK           reduce using rule 51 (expression -> MINUS expression .)
    BEGIN           reduce using rule 51 (expression -> MINUS expression .)
    IF              reduce using rule 51 (expression -> MINUS expression .)
    ELSE            reduce using rule 51 (expression -> MINUS expression .)
    LT              reduce using rule 51 (expression -> MINUS expression .)
    LE              reduce using rule 51 (expression -> MINUS expression .)
    GT              reduce using rule 51 (expression -> MINUS expression .)
    GE              reduce using rule 51 (expression -> MINUS expression .)
    EQ              reduce using rule 51 (expression -> MINUS expression .)
    NE              reduce using rule 51 (expression -> MINUS expression .)
    COMMA           reduce using rule 51 (expression -> MINUS expression .)
    DO              reduce using rule 51 (expression -> MINUS expression .)
    AND             reduce using rule 51 (expression -> MINUS expression .)
    OR              reduce using rule 51 (expression -> MINUS expression .)
    THEN            reduce using rule 51 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 70 ]


state 76

    (23) type -> INT_TYPE LSBRACKET expression RSBRACKET .

    COMMA           reduce using rule 23 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    ID              reduce using rule 23 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    RPAREN          reduce using rule 23 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)
    SEMICOLON       reduce using rule 23 (type -> INT_TYPE LSBRACKET expression RSBRACKET .)


state 77

    (32) declaration -> RETURN expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    ELSE            reduce using rule 32 (declaration -> RETURN expression .)
    END             reduce using rule 32 (declaration -> RETURN expression .)
    SEMICOLON       reduce using rule 32 (declaration -> RETURN expression .)
    WHILE           reduce using rule 32 (declaration -> RETURN expression .)
    PRINT           reduce using rule 32 (declaration -> RETURN expression .)
    WRITE           reduce using rule 32 (declaration -> RETURN expression .)
    READ            reduce using rule 32 (declaration -> RETURN expression .)
    RETURN          reduce using rule 32 (declaration -> RETURN expression .)
    ID              reduce using rule 32 (declaration -> RETURN expression .)
    SKIP            reduce using rule 32 (declaration -> RETURN expression .)
    BREAK           reduce using rule 32 (declaration -> RETURN expression .)
    BEGIN           reduce using rule 32 (declaration -> RETURN expression .)
    IF              reduce using rule 32 (declaration -> RETURN expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 78

    (31) declaration -> READ LPAREN . ubication RPAREN
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    ID              shift and go to state 108

    ubication                      shift and go to state 107

state 79

    (25) declaration -> WHILE relation . DO declaration
    (70) relation -> relation . AND relation
    (71) relation -> relation . OR relation

    DO              shift and go to state 110
    AND             shift and go to state 109
    OR              shift and go to state 111


state 80

    (73) relation -> LPAREN . relation RPAREN
    (53) expression -> LPAREN . expression RPAREN
    (64) relation -> . expression LT expression
    (65) relation -> . expression LE expression
    (66) relation -> . expression GT expression
    (67) relation -> . expression GE expression
    (68) relation -> . expression EQ expression
    (69) relation -> . expression NE expression
    (70) relation -> . relation AND relation
    (71) relation -> . relation OR relation
    (72) relation -> . NOT relation
    (73) relation -> . LPAREN relation RPAREN
    (74) relation -> . error
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    NOT             shift and go to state 82
    LPAREN          shift and go to state 80
    error           shift and go to state 81
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 113
    relation                       shift and go to state 112
    number                         shift and go to state 39

state 81

    (74) relation -> error .

    THEN            reduce using rule 74 (relation -> error .)
    AND             reduce using rule 74 (relation -> error .)
    OR              reduce using rule 74 (relation -> error .)
    WHILE           reduce using rule 74 (relation -> error .)
    PRINT           reduce using rule 74 (relation -> error .)
    WRITE           reduce using rule 74 (relation -> error .)
    READ            reduce using rule 74 (relation -> error .)
    RETURN          reduce using rule 74 (relation -> error .)
    ID              reduce using rule 74 (relation -> error .)
    SKIP            reduce using rule 74 (relation -> error .)
    BREAK           reduce using rule 74 (relation -> error .)
    BEGIN           reduce using rule 74 (relation -> error .)
    IF              reduce using rule 74 (relation -> error .)
    DO              reduce using rule 74 (relation -> error .)
    RPAREN          reduce using rule 74 (relation -> error .)


state 82

    (72) relation -> NOT . relation
    (64) relation -> . expression LT expression
    (65) relation -> . expression LE expression
    (66) relation -> . expression GT expression
    (67) relation -> . expression GE expression
    (68) relation -> . expression EQ expression
    (69) relation -> . expression NE expression
    (70) relation -> . relation AND relation
    (71) relation -> . relation OR relation
    (72) relation -> . NOT relation
    (73) relation -> . LPAREN relation RPAREN
    (74) relation -> . error
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    NOT             shift and go to state 82
    LPAREN          shift and go to state 80
    error           shift and go to state 81
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 83
    relation                       shift and go to state 114
    number                         shift and go to state 39

state 83

    (64) relation -> expression . LT expression
    (65) relation -> expression . LE expression
    (66) relation -> expression . GT expression
    (67) relation -> expression . GE expression
    (68) relation -> expression . EQ expression
    (69) relation -> expression . NE expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    LT              shift and go to state 118
    LE              shift and go to state 115
    GT              shift and go to state 119
    GE              shift and go to state 116
    EQ              shift and go to state 120
    NE              shift and go to state 117
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 84

    (5) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON . END
    (43) dec_list -> dec_list SEMICOLON . declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 121
    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 122
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 85

    (4) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .

    SEMICOLON       reduce using rule 4 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .)
    FUNC            reduce using rule 4 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .)
    $end            reduce using rule 4 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list END .)


state 86

    (44) dec_list -> dec_list declaration .

    END             reduce using rule 44 (dec_list -> dec_list declaration .)
    SEMICOLON       reduce using rule 44 (dec_list -> dec_list declaration .)
    WHILE           reduce using rule 44 (dec_list -> dec_list declaration .)
    PRINT           reduce using rule 44 (dec_list -> dec_list declaration .)
    WRITE           reduce using rule 44 (dec_list -> dec_list declaration .)
    READ            reduce using rule 44 (dec_list -> dec_list declaration .)
    RETURN          reduce using rule 44 (dec_list -> dec_list declaration .)
    ID              reduce using rule 44 (dec_list -> dec_list declaration .)
    SKIP            reduce using rule 44 (dec_list -> dec_list declaration .)
    BREAK           reduce using rule 44 (dec_list -> dec_list declaration .)
    BEGIN           reduce using rule 44 (dec_list -> dec_list declaration .)
    IF              reduce using rule 44 (dec_list -> dec_list declaration .)


state 87

    (29) declaration -> PRINT LPAREN . STRING RPAREN

    STRING          shift and go to state 123


state 88

    (36) declaration -> BEGIN dec_list . END
    (43) dec_list -> dec_list . SEMICOLON declaration
    (44) dec_list -> dec_list . declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    END             shift and go to state 125
    SEMICOLON       shift and go to state 124
    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 86
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 89

    (37) declaration -> BEGIN END .

    ELSE            reduce using rule 37 (declaration -> BEGIN END .)
    END             reduce using rule 37 (declaration -> BEGIN END .)
    SEMICOLON       reduce using rule 37 (declaration -> BEGIN END .)
    WHILE           reduce using rule 37 (declaration -> BEGIN END .)
    PRINT           reduce using rule 37 (declaration -> BEGIN END .)
    WRITE           reduce using rule 37 (declaration -> BEGIN END .)
    READ            reduce using rule 37 (declaration -> BEGIN END .)
    RETURN          reduce using rule 37 (declaration -> BEGIN END .)
    ID              reduce using rule 37 (declaration -> BEGIN END .)
    SKIP            reduce using rule 37 (declaration -> BEGIN END .)
    BREAK           reduce using rule 37 (declaration -> BEGIN END .)
    BEGIN           reduce using rule 37 (declaration -> BEGIN END .)
    IF              reduce using rule 37 (declaration -> BEGIN END .)


state 90

    (30) declaration -> WRITE LPAREN . expression RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 126
    number                         shift and go to state 39

state 91

    (28) declaration -> ubication ASSIGN . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 127
    number                         shift and go to state 39

state 92

    (46) ubication -> ID LSBRACKET . expression RSBRACKET
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 128
    number                         shift and go to state 39

state 93

    (33) declaration -> ID LPAREN . expressions_listop RPAREN
    (60) expressions_listop -> . expressions_list
    (61) expressions_listop -> . empty
    (62) expressions_list -> . expression
    (63) expressions_list -> . expressions_list COMMA expression
    (77) empty -> .
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    RPAREN          reduce using rule 77 (empty -> .)
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 101
    expressions_listop             shift and go to state 129
    expressions_list               shift and go to state 99
    number                         shift and go to state 39
    empty                          shift and go to state 102

state 94

    (38) ifthen -> IF relation . THEN declaration
    (40) ifthen -> IF relation . declaration
    (41) ifthen -> IF relation . declaration ELSE declaration
    (39) ifthenelse -> IF relation . THEN declaration ELSE declaration
    (70) relation -> relation . AND relation
    (71) relation -> relation . OR relation
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    THEN            shift and go to state 130
    AND             shift and go to state 109
    OR              shift and go to state 111
    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 131
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 95

    (59) expression -> FLOAT_TYPE LPAREN expression . RPAREN
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 132
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 96

    (58) expression -> INT_TYPE LPAREN expression . RPAREN
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 133
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 97

    (53) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    RSBRACKET       reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    WRITE           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    READ            reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    SKIP            reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    BEGIN           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 53 (expression -> LPAREN expression RPAREN .)


state 98

    (56) expression -> ID LSBRACKET expression . RSBRACKET
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 134
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 99

    (60) expressions_listop -> expressions_list .
    (63) expressions_list -> expressions_list . COMMA expression

    RPAREN          reduce using rule 60 (expressions_listop -> expressions_list .)
    COMMA           shift and go to state 135


state 100

    (54) expression -> ID LPAREN expressions_listop . RPAREN

    RPAREN          shift and go to state 136


state 101

    (62) expressions_list -> expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 62 (expressions_list -> expression .)
    RPAREN          reduce using rule 62 (expressions_list -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 102

    (61) expressions_listop -> empty .

    RPAREN          reduce using rule 61 (expressions_listop -> empty .)


state 103

    (50) expression -> expression DIVIDE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 50 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 50 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 50 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 50 (expression -> expression DIVIDE expression .)
    RSBRACKET       reduce using rule 50 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 50 (expression -> expression DIVIDE expression .)
    END             reduce using rule 50 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 50 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 50 (expression -> expression DIVIDE expression .)
    WRITE           reduce using rule 50 (expression -> expression DIVIDE expression .)
    READ            reduce using rule 50 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 50 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 50 (expression -> expression DIVIDE expression .)
    SKIP            reduce using rule 50 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 50 (expression -> expression DIVIDE expression .)
    BEGIN           reduce using rule 50 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 50 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 50 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 50 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 50 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 50 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 50 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 50 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 50 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 50 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 50 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 50 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 50 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 50 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 70 ]


state 104

    (49) expression -> expression TIMES expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 49 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 49 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 49 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 49 (expression -> expression TIMES expression .)
    RSBRACKET       reduce using rule 49 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 49 (expression -> expression TIMES expression .)
    END             reduce using rule 49 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 49 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 49 (expression -> expression TIMES expression .)
    WRITE           reduce using rule 49 (expression -> expression TIMES expression .)
    READ            reduce using rule 49 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 49 (expression -> expression TIMES expression .)
    ID              reduce using rule 49 (expression -> expression TIMES expression .)
    SKIP            reduce using rule 49 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 49 (expression -> expression TIMES expression .)
    BEGIN           reduce using rule 49 (expression -> expression TIMES expression .)
    IF              reduce using rule 49 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 49 (expression -> expression TIMES expression .)
    LT              reduce using rule 49 (expression -> expression TIMES expression .)
    LE              reduce using rule 49 (expression -> expression TIMES expression .)
    GT              reduce using rule 49 (expression -> expression TIMES expression .)
    GE              reduce using rule 49 (expression -> expression TIMES expression .)
    EQ              reduce using rule 49 (expression -> expression TIMES expression .)
    NE              reduce using rule 49 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 49 (expression -> expression TIMES expression .)
    DO              reduce using rule 49 (expression -> expression TIMES expression .)
    AND             reduce using rule 49 (expression -> expression TIMES expression .)
    OR              reduce using rule 49 (expression -> expression TIMES expression .)
    THEN            reduce using rule 49 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 70 ]


state 105

    (47) expression -> expression PLUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 47 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 47 (expression -> expression PLUS expression .)
    RSBRACKET       reduce using rule 47 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 47 (expression -> expression PLUS expression .)
    END             reduce using rule 47 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 47 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 47 (expression -> expression PLUS expression .)
    WRITE           reduce using rule 47 (expression -> expression PLUS expression .)
    READ            reduce using rule 47 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 47 (expression -> expression PLUS expression .)
    ID              reduce using rule 47 (expression -> expression PLUS expression .)
    SKIP            reduce using rule 47 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 47 (expression -> expression PLUS expression .)
    BEGIN           reduce using rule 47 (expression -> expression PLUS expression .)
    IF              reduce using rule 47 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 47 (expression -> expression PLUS expression .)
    LT              reduce using rule 47 (expression -> expression PLUS expression .)
    LE              reduce using rule 47 (expression -> expression PLUS expression .)
    GT              reduce using rule 47 (expression -> expression PLUS expression .)
    GE              reduce using rule 47 (expression -> expression PLUS expression .)
    EQ              reduce using rule 47 (expression -> expression PLUS expression .)
    NE              reduce using rule 47 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 47 (expression -> expression PLUS expression .)
    DO              reduce using rule 47 (expression -> expression PLUS expression .)
    AND             reduce using rule 47 (expression -> expression PLUS expression .)
    OR              reduce using rule 47 (expression -> expression PLUS expression .)
    THEN            reduce using rule 47 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 106

    (48) expression -> expression MINUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 48 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 48 (expression -> expression MINUS expression .)
    RSBRACKET       reduce using rule 48 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> expression MINUS expression .)
    END             reduce using rule 48 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 48 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 48 (expression -> expression MINUS expression .)
    WRITE           reduce using rule 48 (expression -> expression MINUS expression .)
    READ            reduce using rule 48 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 48 (expression -> expression MINUS expression .)
    ID              reduce using rule 48 (expression -> expression MINUS expression .)
    SKIP            reduce using rule 48 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 48 (expression -> expression MINUS expression .)
    BEGIN           reduce using rule 48 (expression -> expression MINUS expression .)
    IF              reduce using rule 48 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 48 (expression -> expression MINUS expression .)
    LT              reduce using rule 48 (expression -> expression MINUS expression .)
    LE              reduce using rule 48 (expression -> expression MINUS expression .)
    GT              reduce using rule 48 (expression -> expression MINUS expression .)
    GE              reduce using rule 48 (expression -> expression MINUS expression .)
    EQ              reduce using rule 48 (expression -> expression MINUS expression .)
    NE              reduce using rule 48 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 48 (expression -> expression MINUS expression .)
    DO              reduce using rule 48 (expression -> expression MINUS expression .)
    AND             reduce using rule 48 (expression -> expression MINUS expression .)
    OR              reduce using rule 48 (expression -> expression MINUS expression .)
    THEN            reduce using rule 48 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 107

    (31) declaration -> READ LPAREN ubication . RPAREN

    RPAREN          shift and go to state 137


state 108

    (45) ubication -> ID .
    (46) ubication -> ID . LSBRACKET expression RSBRACKET

    RPAREN          reduce using rule 45 (ubication -> ID .)
    LSBRACKET       shift and go to state 92


state 109

    (70) relation -> relation AND . relation
    (64) relation -> . expression LT expression
    (65) relation -> . expression LE expression
    (66) relation -> . expression GT expression
    (67) relation -> . expression GE expression
    (68) relation -> . expression EQ expression
    (69) relation -> . expression NE expression
    (70) relation -> . relation AND relation
    (71) relation -> . relation OR relation
    (72) relation -> . NOT relation
    (73) relation -> . LPAREN relation RPAREN
    (74) relation -> . error
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    NOT             shift and go to state 82
    LPAREN          shift and go to state 80
    error           shift and go to state 81
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 83
    relation                       shift and go to state 138
    number                         shift and go to state 39

state 110

    (25) declaration -> WHILE relation DO . declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 139
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 111

    (71) relation -> relation OR . relation
    (64) relation -> . expression LT expression
    (65) relation -> . expression LE expression
    (66) relation -> . expression GT expression
    (67) relation -> . expression GE expression
    (68) relation -> . expression EQ expression
    (69) relation -> . expression NE expression
    (70) relation -> . relation AND relation
    (71) relation -> . relation OR relation
    (72) relation -> . NOT relation
    (73) relation -> . LPAREN relation RPAREN
    (74) relation -> . error
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    NOT             shift and go to state 82
    LPAREN          shift and go to state 80
    error           shift and go to state 81
    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 83
    relation                       shift and go to state 140
    number                         shift and go to state 39

state 112

    (73) relation -> LPAREN relation . RPAREN
    (70) relation -> relation . AND relation
    (71) relation -> relation . OR relation

    RPAREN          shift and go to state 141
    AND             shift and go to state 109
    OR              shift and go to state 111


state 113

    (53) expression -> LPAREN expression . RPAREN
    (64) relation -> expression . LT expression
    (65) relation -> expression . LE expression
    (66) relation -> expression . GT expression
    (67) relation -> expression . GE expression
    (68) relation -> expression . EQ expression
    (69) relation -> expression . NE expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 97
    LT              shift and go to state 118
    LE              shift and go to state 115
    GT              shift and go to state 119
    GE              shift and go to state 116
    EQ              shift and go to state 120
    NE              shift and go to state 117
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 114

    (72) relation -> NOT relation .
    (70) relation -> relation . AND relation
    (71) relation -> relation . OR relation

    THEN            reduce using rule 72 (relation -> NOT relation .)
    AND             reduce using rule 72 (relation -> NOT relation .)
    OR              reduce using rule 72 (relation -> NOT relation .)
    WHILE           reduce using rule 72 (relation -> NOT relation .)
    PRINT           reduce using rule 72 (relation -> NOT relation .)
    WRITE           reduce using rule 72 (relation -> NOT relation .)
    READ            reduce using rule 72 (relation -> NOT relation .)
    RETURN          reduce using rule 72 (relation -> NOT relation .)
    ID              reduce using rule 72 (relation -> NOT relation .)
    SKIP            reduce using rule 72 (relation -> NOT relation .)
    BREAK           reduce using rule 72 (relation -> NOT relation .)
    BEGIN           reduce using rule 72 (relation -> NOT relation .)
    IF              reduce using rule 72 (relation -> NOT relation .)
    DO              reduce using rule 72 (relation -> NOT relation .)
    RPAREN          reduce using rule 72 (relation -> NOT relation .)

  ! AND             [ shift and go to state 109 ]
  ! OR              [ shift and go to state 111 ]


state 115

    (65) relation -> expression LE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 142
    number                         shift and go to state 39

state 116

    (67) relation -> expression GE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 143
    number                         shift and go to state 39

state 117

    (69) relation -> expression NE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 144
    number                         shift and go to state 39

state 118

    (64) relation -> expression LT . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 145
    number                         shift and go to state 39

state 119

    (66) relation -> expression GT . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 146
    number                         shift and go to state 39

state 120

    (68) relation -> expression EQ . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 147
    number                         shift and go to state 39

state 121

    (5) function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .

    SEMICOLON       reduce using rule 5 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .)
    FUNC            reduce using rule 5 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .)
    $end            reduce using rule 5 (function -> FUNC ID LPAREN argsop RPAREN locals_op BEGIN dec_list SEMICOLON END .)


state 122

    (43) dec_list -> dec_list SEMICOLON declaration .

    END             reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    SEMICOLON       reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    WHILE           reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    PRINT           reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    WRITE           reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    READ            reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    RETURN          reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    ID              reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    SKIP            reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    BREAK           reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    BEGIN           reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)
    IF              reduce using rule 43 (dec_list -> dec_list SEMICOLON declaration .)


state 123

    (29) declaration -> PRINT LPAREN STRING . RPAREN

    RPAREN          shift and go to state 148


state 124

    (43) dec_list -> dec_list SEMICOLON . declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 122
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 125

    (36) declaration -> BEGIN dec_list END .

    ELSE            reduce using rule 36 (declaration -> BEGIN dec_list END .)
    END             reduce using rule 36 (declaration -> BEGIN dec_list END .)
    SEMICOLON       reduce using rule 36 (declaration -> BEGIN dec_list END .)
    WHILE           reduce using rule 36 (declaration -> BEGIN dec_list END .)
    PRINT           reduce using rule 36 (declaration -> BEGIN dec_list END .)
    WRITE           reduce using rule 36 (declaration -> BEGIN dec_list END .)
    READ            reduce using rule 36 (declaration -> BEGIN dec_list END .)
    RETURN          reduce using rule 36 (declaration -> BEGIN dec_list END .)
    ID              reduce using rule 36 (declaration -> BEGIN dec_list END .)
    SKIP            reduce using rule 36 (declaration -> BEGIN dec_list END .)
    BREAK           reduce using rule 36 (declaration -> BEGIN dec_list END .)
    BEGIN           reduce using rule 36 (declaration -> BEGIN dec_list END .)
    IF              reduce using rule 36 (declaration -> BEGIN dec_list END .)


state 126

    (30) declaration -> WRITE LPAREN expression . RPAREN
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 149
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 127

    (28) declaration -> ubication ASSIGN expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    ELSE            reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    END             reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    SEMICOLON       reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    WHILE           reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    PRINT           reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    WRITE           reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    READ            reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    RETURN          reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    ID              reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    SKIP            reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    BREAK           reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    BEGIN           reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    IF              reduce using rule 28 (declaration -> ubication ASSIGN expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 128

    (46) ubication -> ID LSBRACKET expression . RSBRACKET
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    RSBRACKET       shift and go to state 150
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 129

    (33) declaration -> ID LPAREN expressions_listop . RPAREN

    RPAREN          shift and go to state 151


state 130

    (38) ifthen -> IF relation THEN . declaration
    (39) ifthenelse -> IF relation THEN . declaration ELSE declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 152
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 131

    (40) ifthen -> IF relation declaration .
    (41) ifthen -> IF relation declaration . ELSE declaration

    END             reduce using rule 40 (ifthen -> IF relation declaration .)
    SEMICOLON       reduce using rule 40 (ifthen -> IF relation declaration .)
    WHILE           reduce using rule 40 (ifthen -> IF relation declaration .)
    PRINT           reduce using rule 40 (ifthen -> IF relation declaration .)
    WRITE           reduce using rule 40 (ifthen -> IF relation declaration .)
    READ            reduce using rule 40 (ifthen -> IF relation declaration .)
    RETURN          reduce using rule 40 (ifthen -> IF relation declaration .)
    ID              reduce using rule 40 (ifthen -> IF relation declaration .)
    SKIP            reduce using rule 40 (ifthen -> IF relation declaration .)
    BREAK           reduce using rule 40 (ifthen -> IF relation declaration .)
    BEGIN           reduce using rule 40 (ifthen -> IF relation declaration .)
    IF              reduce using rule 40 (ifthen -> IF relation declaration .)
    ELSE            shift and go to state 153

  ! ELSE            [ reduce using rule 40 (ifthen -> IF relation declaration .) ]


state 132

    (59) expression -> FLOAT_TYPE LPAREN expression RPAREN .

    PLUS            reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    MINUS           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    TIMES           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    RSBRACKET       reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    END             reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    WHILE           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    PRINT           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    WRITE           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    READ            reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    RETURN          reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    ID              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    SKIP            reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    BREAK           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    BEGIN           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    IF              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    ELSE            reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    LT              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    LE              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    GT              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    GE              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    EQ              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    NE              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    COMMA           reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    DO              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    AND             reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    OR              reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)
    THEN            reduce using rule 59 (expression -> FLOAT_TYPE LPAREN expression RPAREN .)


state 133

    (58) expression -> INT_TYPE LPAREN expression RPAREN .

    PLUS            reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    MINUS           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    TIMES           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    RSBRACKET       reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    END             reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    WHILE           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    PRINT           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    WRITE           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    READ            reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    RETURN          reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    ID              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    SKIP            reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    BREAK           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    BEGIN           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    IF              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    ELSE            reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    LT              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    LE              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    GT              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    GE              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    EQ              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    NE              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    COMMA           reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    DO              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    AND             reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    OR              reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)
    THEN            reduce using rule 58 (expression -> INT_TYPE LPAREN expression RPAREN .)


state 134

    (56) expression -> ID LSBRACKET expression RSBRACKET .

    PLUS            reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    MINUS           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    TIMES           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    DIVIDE          reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    RSBRACKET       reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    RPAREN          reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    END             reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    SEMICOLON       reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    WHILE           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    PRINT           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    WRITE           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    READ            reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    RETURN          reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    ID              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    SKIP            reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    BREAK           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    BEGIN           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    IF              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    ELSE            reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    LT              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    LE              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    GT              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    GE              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    EQ              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    NE              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    COMMA           reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    DO              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    AND             reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    OR              reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)
    THEN            reduce using rule 56 (expression -> ID LSBRACKET expression RSBRACKET .)


state 135

    (63) expressions_list -> expressions_list COMMA . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression TIMES expression
    (50) expression -> . expression DIVIDE expression
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . LPAREN expression RPAREN
    (54) expression -> . ID LPAREN expressions_listop RPAREN
    (55) expression -> . ID
    (56) expression -> . ID LSBRACKET expression RSBRACKET
    (57) expression -> . number
    (58) expression -> . INT_TYPE LPAREN expression RPAREN
    (59) expression -> . FLOAT_TYPE LPAREN expression RPAREN
    (75) number -> . INTEGER
    (76) number -> . FLOAT

    MINUS           shift and go to state 45
    PLUS            shift and go to state 40
    LPAREN          shift and go to state 41
    ID              shift and go to state 43
    INT_TYPE        shift and go to state 37
    FLOAT_TYPE      shift and go to state 36
    INTEGER         shift and go to state 42
    FLOAT           shift and go to state 38

    expression                     shift and go to state 154
    number                         shift and go to state 39

state 136

    (54) expression -> ID LPAREN expressions_listop RPAREN .

    PLUS            reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    MINUS           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    TIMES           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    DIVIDE          reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    RSBRACKET       reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    RPAREN          reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    END             reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    SEMICOLON       reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    WHILE           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    PRINT           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    WRITE           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    READ            reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    RETURN          reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    ID              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    SKIP            reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    BREAK           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    BEGIN           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    IF              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    ELSE            reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    LT              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    LE              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    GT              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    GE              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    EQ              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    NE              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    COMMA           reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    DO              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    AND             reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    OR              reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)
    THEN            reduce using rule 54 (expression -> ID LPAREN expressions_listop RPAREN .)


state 137

    (31) declaration -> READ LPAREN ubication RPAREN .

    ELSE            reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    END             reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    SEMICOLON       reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    WHILE           reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    PRINT           reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    WRITE           reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    READ            reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    RETURN          reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    ID              reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    SKIP            reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    BREAK           reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    BEGIN           reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)
    IF              reduce using rule 31 (declaration -> READ LPAREN ubication RPAREN .)


state 138

    (70) relation -> relation AND relation .
    (70) relation -> relation . AND relation
    (71) relation -> relation . OR relation

    THEN            reduce using rule 70 (relation -> relation AND relation .)
    AND             reduce using rule 70 (relation -> relation AND relation .)
    OR              reduce using rule 70 (relation -> relation AND relation .)
    WHILE           reduce using rule 70 (relation -> relation AND relation .)
    PRINT           reduce using rule 70 (relation -> relation AND relation .)
    WRITE           reduce using rule 70 (relation -> relation AND relation .)
    READ            reduce using rule 70 (relation -> relation AND relation .)
    RETURN          reduce using rule 70 (relation -> relation AND relation .)
    ID              reduce using rule 70 (relation -> relation AND relation .)
    SKIP            reduce using rule 70 (relation -> relation AND relation .)
    BREAK           reduce using rule 70 (relation -> relation AND relation .)
    BEGIN           reduce using rule 70 (relation -> relation AND relation .)
    IF              reduce using rule 70 (relation -> relation AND relation .)
    DO              reduce using rule 70 (relation -> relation AND relation .)
    RPAREN          reduce using rule 70 (relation -> relation AND relation .)

  ! AND             [ shift and go to state 109 ]
  ! OR              [ shift and go to state 111 ]


state 139

    (25) declaration -> WHILE relation DO declaration .

    ELSE            reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    END             reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    SEMICOLON       reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    WHILE           reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    PRINT           reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    WRITE           reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    READ            reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    RETURN          reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    ID              reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    SKIP            reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    BREAK           reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    BEGIN           reduce using rule 25 (declaration -> WHILE relation DO declaration .)
    IF              reduce using rule 25 (declaration -> WHILE relation DO declaration .)


state 140

    (71) relation -> relation OR relation .
    (70) relation -> relation . AND relation
    (71) relation -> relation . OR relation

    THEN            reduce using rule 71 (relation -> relation OR relation .)
    OR              reduce using rule 71 (relation -> relation OR relation .)
    WHILE           reduce using rule 71 (relation -> relation OR relation .)
    PRINT           reduce using rule 71 (relation -> relation OR relation .)
    WRITE           reduce using rule 71 (relation -> relation OR relation .)
    READ            reduce using rule 71 (relation -> relation OR relation .)
    RETURN          reduce using rule 71 (relation -> relation OR relation .)
    ID              reduce using rule 71 (relation -> relation OR relation .)
    SKIP            reduce using rule 71 (relation -> relation OR relation .)
    BREAK           reduce using rule 71 (relation -> relation OR relation .)
    BEGIN           reduce using rule 71 (relation -> relation OR relation .)
    IF              reduce using rule 71 (relation -> relation OR relation .)
    DO              reduce using rule 71 (relation -> relation OR relation .)
    RPAREN          reduce using rule 71 (relation -> relation OR relation .)
    AND             shift and go to state 109

  ! AND             [ reduce using rule 71 (relation -> relation OR relation .) ]
  ! OR              [ shift and go to state 111 ]


state 141

    (73) relation -> LPAREN relation RPAREN .

    THEN            reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    AND             reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    OR              reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    WHILE           reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    PRINT           reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    WRITE           reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    READ            reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    RETURN          reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    ID              reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    SKIP            reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    BREAK           reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    BEGIN           reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    IF              reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    DO              reduce using rule 73 (relation -> LPAREN relation RPAREN .)
    RPAREN          reduce using rule 73 (relation -> LPAREN relation RPAREN .)


state 142

    (65) relation -> expression LE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    THEN            reduce using rule 65 (relation -> expression LE expression .)
    AND             reduce using rule 65 (relation -> expression LE expression .)
    OR              reduce using rule 65 (relation -> expression LE expression .)
    WHILE           reduce using rule 65 (relation -> expression LE expression .)
    PRINT           reduce using rule 65 (relation -> expression LE expression .)
    WRITE           reduce using rule 65 (relation -> expression LE expression .)
    READ            reduce using rule 65 (relation -> expression LE expression .)
    RETURN          reduce using rule 65 (relation -> expression LE expression .)
    ID              reduce using rule 65 (relation -> expression LE expression .)
    SKIP            reduce using rule 65 (relation -> expression LE expression .)
    BREAK           reduce using rule 65 (relation -> expression LE expression .)
    BEGIN           reduce using rule 65 (relation -> expression LE expression .)
    IF              reduce using rule 65 (relation -> expression LE expression .)
    DO              reduce using rule 65 (relation -> expression LE expression .)
    RPAREN          reduce using rule 65 (relation -> expression LE expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 143

    (67) relation -> expression GE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    THEN            reduce using rule 67 (relation -> expression GE expression .)
    AND             reduce using rule 67 (relation -> expression GE expression .)
    OR              reduce using rule 67 (relation -> expression GE expression .)
    WHILE           reduce using rule 67 (relation -> expression GE expression .)
    PRINT           reduce using rule 67 (relation -> expression GE expression .)
    WRITE           reduce using rule 67 (relation -> expression GE expression .)
    READ            reduce using rule 67 (relation -> expression GE expression .)
    RETURN          reduce using rule 67 (relation -> expression GE expression .)
    ID              reduce using rule 67 (relation -> expression GE expression .)
    SKIP            reduce using rule 67 (relation -> expression GE expression .)
    BREAK           reduce using rule 67 (relation -> expression GE expression .)
    BEGIN           reduce using rule 67 (relation -> expression GE expression .)
    IF              reduce using rule 67 (relation -> expression GE expression .)
    DO              reduce using rule 67 (relation -> expression GE expression .)
    RPAREN          reduce using rule 67 (relation -> expression GE expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 144

    (69) relation -> expression NE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    THEN            reduce using rule 69 (relation -> expression NE expression .)
    AND             reduce using rule 69 (relation -> expression NE expression .)
    OR              reduce using rule 69 (relation -> expression NE expression .)
    WHILE           reduce using rule 69 (relation -> expression NE expression .)
    PRINT           reduce using rule 69 (relation -> expression NE expression .)
    WRITE           reduce using rule 69 (relation -> expression NE expression .)
    READ            reduce using rule 69 (relation -> expression NE expression .)
    RETURN          reduce using rule 69 (relation -> expression NE expression .)
    ID              reduce using rule 69 (relation -> expression NE expression .)
    SKIP            reduce using rule 69 (relation -> expression NE expression .)
    BREAK           reduce using rule 69 (relation -> expression NE expression .)
    BEGIN           reduce using rule 69 (relation -> expression NE expression .)
    IF              reduce using rule 69 (relation -> expression NE expression .)
    DO              reduce using rule 69 (relation -> expression NE expression .)
    RPAREN          reduce using rule 69 (relation -> expression NE expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 145

    (64) relation -> expression LT expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    THEN            reduce using rule 64 (relation -> expression LT expression .)
    AND             reduce using rule 64 (relation -> expression LT expression .)
    OR              reduce using rule 64 (relation -> expression LT expression .)
    WHILE           reduce using rule 64 (relation -> expression LT expression .)
    PRINT           reduce using rule 64 (relation -> expression LT expression .)
    WRITE           reduce using rule 64 (relation -> expression LT expression .)
    READ            reduce using rule 64 (relation -> expression LT expression .)
    RETURN          reduce using rule 64 (relation -> expression LT expression .)
    ID              reduce using rule 64 (relation -> expression LT expression .)
    SKIP            reduce using rule 64 (relation -> expression LT expression .)
    BREAK           reduce using rule 64 (relation -> expression LT expression .)
    BEGIN           reduce using rule 64 (relation -> expression LT expression .)
    IF              reduce using rule 64 (relation -> expression LT expression .)
    DO              reduce using rule 64 (relation -> expression LT expression .)
    RPAREN          reduce using rule 64 (relation -> expression LT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 146

    (66) relation -> expression GT expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    THEN            reduce using rule 66 (relation -> expression GT expression .)
    AND             reduce using rule 66 (relation -> expression GT expression .)
    OR              reduce using rule 66 (relation -> expression GT expression .)
    WHILE           reduce using rule 66 (relation -> expression GT expression .)
    PRINT           reduce using rule 66 (relation -> expression GT expression .)
    WRITE           reduce using rule 66 (relation -> expression GT expression .)
    READ            reduce using rule 66 (relation -> expression GT expression .)
    RETURN          reduce using rule 66 (relation -> expression GT expression .)
    ID              reduce using rule 66 (relation -> expression GT expression .)
    SKIP            reduce using rule 66 (relation -> expression GT expression .)
    BREAK           reduce using rule 66 (relation -> expression GT expression .)
    BEGIN           reduce using rule 66 (relation -> expression GT expression .)
    IF              reduce using rule 66 (relation -> expression GT expression .)
    DO              reduce using rule 66 (relation -> expression GT expression .)
    RPAREN          reduce using rule 66 (relation -> expression GT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 147

    (68) relation -> expression EQ expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    THEN            reduce using rule 68 (relation -> expression EQ expression .)
    AND             reduce using rule 68 (relation -> expression EQ expression .)
    OR              reduce using rule 68 (relation -> expression EQ expression .)
    WHILE           reduce using rule 68 (relation -> expression EQ expression .)
    PRINT           reduce using rule 68 (relation -> expression EQ expression .)
    WRITE           reduce using rule 68 (relation -> expression EQ expression .)
    READ            reduce using rule 68 (relation -> expression EQ expression .)
    RETURN          reduce using rule 68 (relation -> expression EQ expression .)
    ID              reduce using rule 68 (relation -> expression EQ expression .)
    SKIP            reduce using rule 68 (relation -> expression EQ expression .)
    BREAK           reduce using rule 68 (relation -> expression EQ expression .)
    BEGIN           reduce using rule 68 (relation -> expression EQ expression .)
    IF              reduce using rule 68 (relation -> expression EQ expression .)
    DO              reduce using rule 68 (relation -> expression EQ expression .)
    RPAREN          reduce using rule 68 (relation -> expression EQ expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 148

    (29) declaration -> PRINT LPAREN STRING RPAREN .

    ELSE            reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    END             reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    SEMICOLON       reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    WHILE           reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    PRINT           reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    WRITE           reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    READ            reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    RETURN          reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    ID              reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    SKIP            reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    BREAK           reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    BEGIN           reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)
    IF              reduce using rule 29 (declaration -> PRINT LPAREN STRING RPAREN .)


state 149

    (30) declaration -> WRITE LPAREN expression RPAREN .

    ELSE            reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    END             reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    WHILE           reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    PRINT           reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    WRITE           reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    READ            reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    RETURN          reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    ID              reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    SKIP            reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    BREAK           reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    BEGIN           reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)
    IF              reduce using rule 30 (declaration -> WRITE LPAREN expression RPAREN .)


state 150

    (46) ubication -> ID LSBRACKET expression RSBRACKET .

    ASSIGN          reduce using rule 46 (ubication -> ID LSBRACKET expression RSBRACKET .)
    RPAREN          reduce using rule 46 (ubication -> ID LSBRACKET expression RSBRACKET .)


state 151

    (33) declaration -> ID LPAREN expressions_listop RPAREN .

    ELSE            reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    END             reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    SEMICOLON       reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    WHILE           reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    PRINT           reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    WRITE           reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    READ            reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    RETURN          reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    ID              reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    SKIP            reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    BREAK           reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    BEGIN           reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)
    IF              reduce using rule 33 (declaration -> ID LPAREN expressions_listop RPAREN .)


state 152

    (38) ifthen -> IF relation THEN declaration .
    (39) ifthenelse -> IF relation THEN declaration . ELSE declaration

    END             reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    SEMICOLON       reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    WHILE           reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    PRINT           reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    WRITE           reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    READ            reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    RETURN          reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    ID              reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    SKIP            reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    BREAK           reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    BEGIN           reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    IF              reduce using rule 38 (ifthen -> IF relation THEN declaration .)
    ELSE            shift and go to state 155

  ! ELSE            [ reduce using rule 38 (ifthen -> IF relation THEN declaration .) ]


state 153

    (41) ifthen -> IF relation declaration ELSE . declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 156
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 154

    (63) expressions_list -> expressions_list COMMA expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . TIMES expression
    (50) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 63 (expressions_list -> expressions_list COMMA expression .)
    RPAREN          reduce using rule 63 (expressions_list -> expressions_list COMMA expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70


state 155

    (39) ifthenelse -> IF relation THEN declaration ELSE . declaration
    (25) declaration -> . WHILE relation DO declaration
    (26) declaration -> . ifthen
    (27) declaration -> . ifthenelse
    (28) declaration -> . ubication ASSIGN expression
    (29) declaration -> . PRINT LPAREN STRING RPAREN
    (30) declaration -> . WRITE LPAREN expression RPAREN
    (31) declaration -> . READ LPAREN ubication RPAREN
    (32) declaration -> . RETURN expression
    (33) declaration -> . ID LPAREN expressions_listop RPAREN
    (34) declaration -> . SKIP
    (35) declaration -> . BREAK
    (36) declaration -> . BEGIN dec_list END
    (37) declaration -> . BEGIN END
    (38) ifthen -> . IF relation THEN declaration
    (40) ifthen -> . IF relation declaration
    (41) ifthen -> . IF relation declaration ELSE declaration
    (39) ifthenelse -> . IF relation THEN declaration ELSE declaration
    (45) ubication -> . ID
    (46) ubication -> . ID LSBRACKET expression RSBRACKET

    WHILE           shift and go to state 49
    PRINT           shift and go to state 51
    WRITE           shift and go to state 56
    READ            shift and go to state 48
    RETURN          shift and go to state 47
    ID              shift and go to state 59
    SKIP            shift and go to state 55
    BREAK           shift and go to state 61
    BEGIN           shift and go to state 54
    IF              shift and go to state 60

    ifthenelse                     shift and go to state 53
    declaration                    shift and go to state 157
    ubication                      shift and go to state 58
    ifthen                         shift and go to state 52

state 156

    (41) ifthen -> IF relation declaration ELSE declaration .

    END             reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    SEMICOLON       reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    WHILE           reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    PRINT           reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    WRITE           reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    READ            reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    RETURN          reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    ID              reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    SKIP            reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    BREAK           reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    BEGIN           reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    IF              reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)
    ELSE            reduce using rule 41 (ifthen -> IF relation declaration ELSE declaration .)


state 157

    (39) ifthenelse -> IF relation THEN declaration ELSE declaration .

    ELSE            reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    END             reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    SEMICOLON       reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    WHILE           reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    PRINT           reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    WRITE           reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    READ            reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    RETURN          reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    ID              reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    SKIP            reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    BREAK           reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    BEGIN           reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)
    IF              reduce using rule 39 (ifthenelse -> IF relation THEN declaration ELSE declaration .)

